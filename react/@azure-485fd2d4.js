const vr="modulepreload",wr=function(s){return"/"+s},Tn={},Rr=function(e,t,n){if(!t||t.length===0)return e();const o=document.getElementsByTagName("link");return Promise.all(t.map(r=>{if(r=wr(r),r in Tn)return;Tn[r]=!0;const i=r.endsWith(".css"),a=i?'[rel="stylesheet"]':"";if(!!n)for(let u=o.length-1;u>=0;u--){const f=o[u];if(f.href===r&&(!i||f.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${r}"]${a}`))return;const h=document.createElement("link");if(h.rel=i?"stylesheet":vr,i||(h.as="script",h.crossOrigin=""),h.href=r,document.head.appendChild(h),i)return new Promise((u,f)=>{h.addEventListener("load",u),h.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${r}`)))})})).then(()=>e()).catch(r=>{const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=r,window.dispatchEvent(i),!i.defaultPrevented)throw r})};/*! @azure/msal-common v14.3.0 2023-10-30 */const l={LIBRARY_NAME:"MSAL.JS",SKU:"msal.js.common",CACHE_PREFIX:"msal",DEFAULT_AUTHORITY:"https://login.microsoftonline.com/common/",DEFAULT_AUTHORITY_HOST:"login.microsoftonline.com",DEFAULT_COMMON_TENANT:"common",ADFS:"adfs",DSTS:"dstsv2",AAD_INSTANCE_DISCOVERY_ENDPT:"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=",CIAM_AUTH_URL:".ciamlogin.com",AAD_TENANT_DOMAIN_SUFFIX:".onmicrosoft.com",RESOURCE_DELIM:"|",NO_ACCOUNT:"NO_ACCOUNT",CLAIMS:"claims",CONSUMER_UTID:"9188040d-6c67-4c5b-b112-36a304b66dad",OPENID_SCOPE:"openid",PROFILE_SCOPE:"profile",OFFLINE_ACCESS_SCOPE:"offline_access",EMAIL_SCOPE:"email",CODE_RESPONSE_TYPE:"code",CODE_GRANT_TYPE:"authorization_code",RT_GRANT_TYPE:"refresh_token",FRAGMENT_RESPONSE_MODE:"fragment",S256_CODE_CHALLENGE_METHOD:"S256",URL_FORM_CONTENT_TYPE:"application/x-www-form-urlencoded;charset=utf-8",AUTHORIZATION_PENDING:"authorization_pending",NOT_DEFINED:"not_defined",EMPTY_STRING:"",NOT_APPLICABLE:"N/A",FORWARD_SLASH:"/",IMDS_ENDPOINT:"http://169.254.169.254/metadata/instance/compute/location",IMDS_VERSION:"2020-06-01",IMDS_TIMEOUT:2e3,AZURE_REGION_AUTO_DISCOVER_FLAG:"TryAutoDetect",REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX:"login.microsoft.com",REGIONAL_AUTH_NON_MSI_QUERY_STRING:"allowestsrnonmsi=true",KNOWN_PUBLIC_CLOUDS:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"],TOKEN_RESPONSE_TYPE:"token",ID_TOKEN_RESPONSE_TYPE:"id_token",SHR_NONCE_VALIDITY:240,INVALID_INSTANCE:"invalid_instance"},je={SUCCESS_RANGE_START:200,SUCCESS_RANGE_END:299,REDIRECT:302,CLIENT_ERROR_RANGE_START:400,CLIENT_ERROR_RANGE_END:499,SERVER_ERROR_RANGE_START:500,SERVER_ERROR_RANGE_END:599},qe=[l.OPENID_SCOPE,l.PROFILE_SCOPE,l.OFFLINE_ACCESS_SCOPE],In=[...qe,l.EMAIL_SCOPE],ee={CONTENT_TYPE:"Content-Type",RETRY_AFTER:"Retry-After",CCS_HEADER:"X-AnchorMailbox",WWWAuthenticate:"WWW-Authenticate",AuthenticationInfo:"Authentication-Info",X_MS_REQUEST_ID:"x-ms-request-id",X_MS_HTTP_VERSION:"x-ms-httpver"},U={ID_TOKEN:"idtoken",CLIENT_INFO:"client.info",ADAL_ID_TOKEN:"adal.idtoken",ERROR:"error",ERROR_DESC:"error.description",ACTIVE_ACCOUNT:"active-account",ACTIVE_ACCOUNT_FILTERS:"active-account-filters"},Ke={COMMON:"common",ORGANIZATIONS:"organizations",CONSUMERS:"consumers"},T={CLIENT_ID:"client_id",REDIRECT_URI:"redirect_uri",RESPONSE_TYPE:"response_type",RESPONSE_MODE:"response_mode",GRANT_TYPE:"grant_type",CLAIMS:"claims",SCOPE:"scope",ERROR:"error",ERROR_DESCRIPTION:"error_description",ACCESS_TOKEN:"access_token",ID_TOKEN:"id_token",REFRESH_TOKEN:"refresh_token",EXPIRES_IN:"expires_in",STATE:"state",NONCE:"nonce",PROMPT:"prompt",SESSION_STATE:"session_state",CLIENT_INFO:"client_info",CODE:"code",CODE_CHALLENGE:"code_challenge",CODE_CHALLENGE_METHOD:"code_challenge_method",CODE_VERIFIER:"code_verifier",CLIENT_REQUEST_ID:"client-request-id",X_CLIENT_SKU:"x-client-SKU",X_CLIENT_VER:"x-client-VER",X_CLIENT_OS:"x-client-OS",X_CLIENT_CPU:"x-client-CPU",X_CLIENT_CURR_TELEM:"x-client-current-telemetry",X_CLIENT_LAST_TELEM:"x-client-last-telemetry",X_MS_LIB_CAPABILITY:"x-ms-lib-capability",X_APP_NAME:"x-app-name",X_APP_VER:"x-app-ver",POST_LOGOUT_URI:"post_logout_redirect_uri",ID_TOKEN_HINT:"id_token_hint",DEVICE_CODE:"device_code",CLIENT_SECRET:"client_secret",CLIENT_ASSERTION:"client_assertion",CLIENT_ASSERTION_TYPE:"client_assertion_type",TOKEN_TYPE:"token_type",REQ_CNF:"req_cnf",OBO_ASSERTION:"assertion",REQUESTED_TOKEN_USE:"requested_token_use",ON_BEHALF_OF:"on_behalf_of",FOCI:"foci",CCS_HEADER:"X-AnchorMailbox",RETURN_SPA_CODE:"return_spa_code",NATIVE_BROKER:"nativebroker",LOGOUT_HINT:"logout_hint"},We={ACCESS_TOKEN:"access_token",XMS_CC:"xms_cc"},B={LOGIN:"login",SELECT_ACCOUNT:"select_account",CONSENT:"consent",NONE:"none",CREATE:"create",NO_SESSION:"no_session"},_t={ACCOUNT:"account",SID:"sid",LOGIN_HINT:"login_hint",ID_TOKEN:"id_token",DOMAIN_HINT:"domain_hint",ORGANIZATIONS:"organizations",CONSUMERS:"consumers",ACCOUNT_ID:"accountIdentifier",HOMEACCOUNT_ID:"homeAccountIdentifier"},En={PLAIN:"plain",S256:"S256"},ze={QUERY:"query",FRAGMENT:"fragment"},kr={...ze,FORM_POST:"form_post"},$n={IMPLICIT_GRANT:"implicit",AUTHORIZATION_CODE_GRANT:"authorization_code",CLIENT_CREDENTIALS_GRANT:"client_credentials",RESOURCE_OWNER_PASSWORD_GRANT:"password",REFRESH_TOKEN_GRANT:"refresh_token",DEVICE_CODE_GRANT:"device_code",JWT_BEARER:"urn:ietf:params:oauth:grant-type:jwt-bearer"},Je={MSSTS_ACCOUNT_TYPE:"MSSTS",ADFS_ACCOUNT_TYPE:"ADFS",MSAV1_ACCOUNT_TYPE:"MSA",GENERIC_ACCOUNT_TYPE:"Generic"},K={CACHE_KEY_SEPARATOR:"-",CLIENT_INFO_SEPARATOR:"."},y={ID_TOKEN:"IdToken",ACCESS_TOKEN:"AccessToken",ACCESS_TOKEN_WITH_AUTH_SCHEME:"AccessToken_With_AuthScheme",REFRESH_TOKEN:"RefreshToken"},St="appmetadata",br="client_info",Fe="1",Be={CACHE_KEY:"authority-metadata",REFRESH_TIME_SECONDS:3600*24},z={CONFIG:"config",CACHE:"cache",NETWORK:"network",HARDCODED_VALUES:"hardcoded_values"},D={SCHEMA_VERSION:5,MAX_CUR_HEADER_BYTES:80,MAX_LAST_HEADER_BYTES:330,MAX_CACHED_ERRORS:50,CACHE_KEY:"server-telemetry",CATEGORY_SEPARATOR:"|",VALUE_SEPARATOR:",",OVERFLOW_TRUE:"1",OVERFLOW_FALSE:"0",UNKNOWN_ERROR:"unknown_error"},R={BEARER:"Bearer",POP:"pop",SSH:"ssh-cert"},xe={DEFAULT_THROTTLE_TIME_SECONDS:60,DEFAULT_MAX_THROTTLE_TIME_SECONDS:3600,THROTTLING_PREFIX:"throttling",X_MS_LIB_CAPABILITY_VALUE:"retry-after, h429"},An={INVALID_GRANT_ERROR:"invalid_grant",CLIENT_MISMATCH_ERROR:"client_mismatch"},Sn={username:"username",password:"password"},Xe={httpSuccess:200,httpBadRequest:400},Se={FAILED_AUTO_DETECTION:"1",INTERNAL_CACHE:"2",ENVIRONMENT_VARIABLE:"3",IMDS:"4"},yt={CONFIGURED_MATCHES_DETECTED:"1",CONFIGURED_NO_AUTO_DETECTION:"2",CONFIGURED_NOT_DETECTED:"3",AUTO_DETECTION_REQUESTED_SUCCESSFUL:"4",AUTO_DETECTION_REQUESTED_FAILED:"5"},me={NOT_APPLICABLE:"0",FORCE_REFRESH_OR_CLAIMS:"1",NO_CACHED_ACCESS_TOKEN:"2",CACHED_ACCESS_TOKEN_EXPIRED:"3",PROACTIVELY_REFRESHED:"4"},Or={Jwt:"JWT",Jwk:"JWK",Pop:"pop"};/*! @azure/msal-common v14.3.0 2023-10-30 */const Bt="unexpected_error",Nr="post_request_failed";/*! @azure/msal-common v14.3.0 2023-10-30 */const vn={[Bt]:"Unexpected error in authentication.",[Nr]:"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details."};class N extends Error{constructor(e,t,n){const o=t?`${e}: ${t}`:e;super(o),Object.setPrototypeOf(this,N.prototype),this.errorCode=e||l.EMPTY_STRING,this.errorMessage=t||l.EMPTY_STRING,this.subError=n||l.EMPTY_STRING,this.name="AuthError"}setCorrelationId(e){this.correlationId=e}}function Yn(s,e){return new N(s,e?`${vn[s]} ${e}`:vn[s])}/*! @azure/msal-common v14.3.0 2023-10-30 */const xt="client_info_decoding_error",Vn="client_info_empty_error",Gt="token_parsing_error",Qn="null_or_empty_token",re="endpoints_resolution_error",jn="network_error",Wn="openid_config_error",vt="hash_not_deserialized",Ne="invalid_state",Jn="state_mismatch",et="state_not_found",Xn="nonce_mismatch",qt="auth_time_not_found",Zn="max_age_transpired",Pr="multiple_matching_tokens",Mr="multiple_matching_accounts",eo="multiple_matching_appMetadata",to="request_cannot_be_made",no="cannot_remove_empty_scope",oo="cannot_append_scopeset",wt="empty_input_scopeset",Hr="device_code_polling_cancelled",Lr="device_code_expired",Ur="device_code_unknown_error",zt="no_account_in_silent_request",ro="invalid_cache_record",$t="invalid_cache_environment",Rt="no_account_found",kt="no_crypto_object",bt="unexpected_credential_type",Dr="invalid_assertion",Kr="invalid_client_credential",le="token_refresh_required",Fr="user_timeout_reached",io="token_claims_cnf_required_for_signedjwt",so="authorization_code_missing_from_server_response",ao="binding_key_not_removed",co="end_session_endpoint_not_supported",Yt="key_id_missing",Br="no_network_connectivity",xr="user_canceled",Gr="missing_tenant_id_error",A="method_not_implemented",qr="nested_app_auth_bridge_disabled";/*! @azure/msal-common v14.3.0 2023-10-30 */const wn={[xt]:"The client info could not be parsed/decoded correctly",[Vn]:"The client info was empty",[Gt]:"Token cannot be parsed",[Qn]:"The token is null or empty",[re]:"Endpoints cannot be resolved",[jn]:"Network request failed",[Wn]:"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.",[vt]:"The hash parameters could not be deserialized",[Ne]:"State was not the expected format",[Jn]:"State mismatch error",[et]:"State not found",[Xn]:"Nonce mismatch error",[qt]:"Max Age was requested and the ID token is missing the auth_time variable. auth_time is an optional claim and is not enabled by default - it must be enabled. See https://aka.ms/msaljs/optional-claims for more information.",[Zn]:"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.",[Pr]:"The cache contains multiple tokens satisfying the requirements. Call AcquireToken again providing more requirements such as authority or account.",[Mr]:"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account",[eo]:"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata",[to]:"Token request cannot be made without authorization code or refresh token.",[no]:"Cannot remove null or empty scope from ScopeSet",[oo]:"Cannot append ScopeSet",[wt]:"Empty input ScopeSet cannot be processed",[Hr]:"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.",[Lr]:"Device code is expired.",[Ur]:"Device code stopped polling for unknown reasons.",[zt]:"Please pass an account object, silent flow is not supported without account information",[ro]:"Cache record object was null or undefined.",[$t]:"Invalid environment when attempting to create cache entry",[Rt]:"No account found in cache for given key.",[kt]:"No crypto object detected.",[bt]:"Unexpected credential type.",[Dr]:"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515",[Kr]:"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential",[le]:"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.",[Fr]:"User defined timeout for device code polling reached",[io]:"Cannot generate a POP jwt if the token_claims are not populated",[so]:"Server response does not contain an authorization code to proceed",[ao]:"Could not remove the credential's binding key from storage.",[co]:"The provided authority does not support logout",[Yt]:"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.",[Br]:"No network connectivity. Check your internet connection.",[xr]:"User cancelled the flow.",[Gr]:"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.",[A]:"This method has not been implemented",[qr]:"The nested app auth bridge is disabled"};class ht extends N{constructor(e,t){super(e,t?`${wn[e]}: ${t}`:wn[e]),this.name="ClientAuthError",Object.setPrototypeOf(this,ht.prototype)}}function g(s,e){return new ht(s,e)}/*! @azure/msal-common v14.3.0 2023-10-30 */const tt={createNewGuid:()=>{throw g(A)},base64Decode:()=>{throw g(A)},base64Encode:()=>{throw g(A)},async getPublicKeyThumbprint(){throw g(A)},async removeTokenBindingKey(){throw g(A)},async clearKeystore(){throw g(A)},async signJwt(){throw g(A)},async hashString(){throw g(A)}};/*! @azure/msal-common v14.3.0 2023-10-30 */var H;(function(s){s[s.Error=0]="Error",s[s.Warning=1]="Warning",s[s.Info=2]="Info",s[s.Verbose=3]="Verbose",s[s.Trace=4]="Trace"})(H||(H={}));class _e{constructor(e,t,n){this.level=H.Info;const o=()=>{},r=e||_e.createDefaultLoggerOptions();this.localCallback=r.loggerCallback||o,this.piiLoggingEnabled=r.piiLoggingEnabled||!1,this.level=typeof r.logLevel=="number"?r.logLevel:H.Info,this.correlationId=r.correlationId||l.EMPTY_STRING,this.packageName=t||l.EMPTY_STRING,this.packageVersion=n||l.EMPTY_STRING}static createDefaultLoggerOptions(){return{loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:H.Info}}clone(e,t,n){return new _e({loggerCallback:this.localCallback,piiLoggingEnabled:this.piiLoggingEnabled,logLevel:this.level,correlationId:n||this.correlationId},e,t)}logMessage(e,t){if(t.logLevel>this.level||!this.piiLoggingEnabled&&t.containsPii)return;const r=`${`[${new Date().toUTCString()}] : [${t.correlationId||this.correlationId||""}]`} : ${this.packageName}@${this.packageVersion} : ${H[t.logLevel]} - ${e}`;this.executeCallback(t.logLevel,r,t.containsPii||!1)}executeCallback(e,t,n){this.localCallback&&this.localCallback(e,t,n)}error(e,t){this.logMessage(e,{logLevel:H.Error,containsPii:!1,correlationId:t||l.EMPTY_STRING})}errorPii(e,t){this.logMessage(e,{logLevel:H.Error,containsPii:!0,correlationId:t||l.EMPTY_STRING})}warning(e,t){this.logMessage(e,{logLevel:H.Warning,containsPii:!1,correlationId:t||l.EMPTY_STRING})}warningPii(e,t){this.logMessage(e,{logLevel:H.Warning,containsPii:!0,correlationId:t||l.EMPTY_STRING})}info(e,t){this.logMessage(e,{logLevel:H.Info,containsPii:!1,correlationId:t||l.EMPTY_STRING})}infoPii(e,t){this.logMessage(e,{logLevel:H.Info,containsPii:!0,correlationId:t||l.EMPTY_STRING})}verbose(e,t){this.logMessage(e,{logLevel:H.Verbose,containsPii:!1,correlationId:t||l.EMPTY_STRING})}verbosePii(e,t){this.logMessage(e,{logLevel:H.Verbose,containsPii:!0,correlationId:t||l.EMPTY_STRING})}trace(e,t){this.logMessage(e,{logLevel:H.Trace,containsPii:!1,correlationId:t||l.EMPTY_STRING})}tracePii(e,t){this.logMessage(e,{logLevel:H.Trace,containsPii:!0,correlationId:t||l.EMPTY_STRING})}isPiiLoggingEnabled(){return this.piiLoggingEnabled||!1}}/*! @azure/msal-common v14.3.0 2023-10-30 */const ho="@azure/msal-common",Vt="14.3.0";/*! @azure/msal-common v14.3.0 2023-10-30 */const Qt={None:"none",AzurePublic:"https://login.microsoftonline.com",AzurePpe:"https://login.windows-ppe.net",AzureChina:"https://login.chinacloudapi.cn",AzureGermany:"https://login.microsoftonline.de",AzureUsGovernment:"https://login.microsoftonline.us"};/*! @azure/msal-common v14.3.0 2023-10-30 */function ue(s,e){const t=zr(s);try{const n=e(t);return JSON.parse(n)}catch{throw g(Gt)}}function zr(s){if(!s)throw g(Qn);const t=/^([^\.\s]*)\.([^\.\s]+)\.([^\.\s]*)$/.exec(s);if(!t||t.length<4)throw g(Gt);return t[2]}function lo(s,e){if(e===0||Date.now()-3e5>s+e)throw g(Zn)}/*! @azure/msal-common v14.3.0 2023-10-30 */class x{static nowSeconds(){return Math.round(new Date().getTime()/1e3)}static isTokenExpired(e,t){const n=Number(e)||0;return x.nowSeconds()+t>n}static wasClockTurnedBack(e){return Number(e)>x.nowSeconds()}static delay(e,t){return new Promise(n=>setTimeout(()=>n(t),e))}}/*! @azure/msal-common v14.3.0 2023-10-30 */function Re(s){return[$r(s),Yr(s),Vr(s),Qr(s),jr(s)].join(K.CACHE_KEY_SEPARATOR).toLowerCase()}function lt(s,e,t,n,o){return{credentialType:y.ID_TOKEN,homeAccountId:s,environment:e,clientId:n,secret:t,realm:o}}function dt(s,e,t,n,o,r,i,a,c,h,u,f,E,S,O){var q,Q;const w={homeAccountId:s,credentialType:y.ACCESS_TOKEN,secret:t,cachedAt:x.nowSeconds().toString(),expiresOn:i.toString(),extendedExpiresOn:a.toString(),environment:e,clientId:n,realm:o,target:r,tokenType:u||R.BEARER};if(f&&(w.userAssertionHash=f),h&&(w.refreshOn=h.toString()),S&&(w.requestedClaims=S,w.requestedClaimsHash=O),((q=w.tokenType)==null?void 0:q.toLowerCase())!==R.BEARER.toLowerCase())switch(w.credentialType=y.ACCESS_TOKEN_WITH_AUTH_SCHEME,w.tokenType){case R.POP:const G=ue(t,c);if(!((Q=G==null?void 0:G.cnf)!=null&&Q.kid))throw g(io);w.keyId=G.cnf.kid;break;case R.SSH:w.keyId=E}return w}function uo(s,e,t,n,o,r){const i={credentialType:y.REFRESH_TOKEN,homeAccountId:s,environment:e,clientId:n,secret:t};return r&&(i.userAssertionHash=r),o&&(i.familyId=o),i}function jt(s){return s.hasOwnProperty("homeAccountId")&&s.hasOwnProperty("environment")&&s.hasOwnProperty("credentialType")&&s.hasOwnProperty("clientId")&&s.hasOwnProperty("secret")}function Rn(s){return s?jt(s)&&s.hasOwnProperty("realm")&&s.hasOwnProperty("target")&&(s.credentialType===y.ACCESS_TOKEN||s.credentialType===y.ACCESS_TOKEN_WITH_AUTH_SCHEME):!1}function kn(s){return s?jt(s)&&s.hasOwnProperty("realm")&&s.credentialType===y.ID_TOKEN:!1}function bn(s){return s?jt(s)&&s.credentialType===y.REFRESH_TOKEN:!1}function $r(s){return[s.homeAccountId,s.environment].join(K.CACHE_KEY_SEPARATOR).toLowerCase()}function Yr(s){const e=s.credentialType===y.REFRESH_TOKEN&&s.familyId||s.clientId;return[s.credentialType,e,s.realm||""].join(K.CACHE_KEY_SEPARATOR).toLowerCase()}function Vr(s){return(s.target||"").toLowerCase()}function Qr(s){return(s.requestedClaimsHash||"").toLowerCase()}function jr(s){return s.tokenType&&s.tokenType.toLowerCase()!==R.BEARER.toLowerCase()?s.tokenType.toLowerCase():""}/*! @azure/msal-common v14.3.0 2023-10-30 */const go="redirect_uri_empty",Wr="claims_request_parsing_error",po="authority_uri_insecure",Ue="url_parse_error",Wt="empty_url_error",mo="empty_input_scopes_error",fo="invalid_prompt_value",Jt="invalid_claims",Co="token_request_empty",_o="logout_request_empty",yo="invalid_code_challenge_method",Xt="pkce_params_missing",Zt="invalid_cloud_discovery_metadata",To="invalid_authority_metadata",Io="untrusted_authority",ut="missing_ssh_jwk",Eo="missing_ssh_kid",Jr="missing_nonce_authentication_header",Xr="invalid_authentication_header",Ao="cannot_set_OIDCOptions",So="cannot_allow_native_broker",vo="authority_mismatch";/*! @azure/msal-common v14.3.0 2023-10-30 */const Zr={[go]:"A redirect URI is required for all calls, and none has been set.",[Wr]:"Could not parse the given claims request object.",[po]:"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options",[Ue]:"URL could not be parsed into appropriate segments.",[Wt]:"URL was empty or null.",[mo]:"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.",[fo]:"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest",[Jt]:"Given claims parameter must be a stringified JSON object.",[Co]:"Token request was empty and not found in cache.",[_o]:"The logout request was null or undefined.",[yo]:'code_challenge_method passed is invalid. Valid values are "plain" and "S256".',[Xt]:"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request",[Zt]:"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields",[To]:"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.",[Io]:"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.",[ut]:"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.",[Eo]:"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.",[Jr]:"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.",[Xr]:"Invalid authentication header provided",[Ao]:"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.",[So]:"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.",[vo]:"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority."};class en extends N{constructor(e){super(e,Zr[e]),this.name="ClientConfigurationError",Object.setPrototypeOf(this,en.prototype)}}function k(s){return new en(s)}/*! @azure/msal-common v14.3.0 2023-10-30 */class ${static isEmptyObj(e){if(e)try{const t=JSON.parse(e);return Object.keys(t).length===0}catch{}return!0}static startsWith(e,t){return e.indexOf(t)===0}static endsWith(e,t){return e.length>=t.length&&e.lastIndexOf(t)===e.length-t.length}static queryStringToObject(e){const t={},n=e.split("&"),o=r=>decodeURIComponent(r.replace(/\+/g," "));return n.forEach(r=>{if(r.trim()){const[i,a]=r.split(/=(.+)/g,2);i&&a&&(t[o(i)]=o(a))}}),t}static trimArrayEntries(e){return e.map(t=>t.trim())}static removeEmptyStringsFromArray(e){return e.filter(t=>!!t)}static jsonParseHelper(e){try{return JSON.parse(e)}catch{return null}}static matchPattern(e,t){return new RegExp(e.replace(/\\/g,"\\\\").replace(/\*/g,"[^ ]*").replace(/\?/g,"\\?")).test(t)}}/*! @azure/msal-common v14.3.0 2023-10-30 */class M{constructor(e){const t=e?$.trimArrayEntries([...e]):[],n=t?$.removeEmptyStringsFromArray(t):[];this.validateInputScopes(n),this.scopes=new Set,n.forEach(o=>this.scopes.add(o))}static fromString(e){const n=(e||l.EMPTY_STRING).split(" ");return new M(n)}static createSearchScopes(e){const t=new M(e);return t.containsOnlyOIDCScopes()?t.removeScope(l.OFFLINE_ACCESS_SCOPE):t.removeOIDCScopes(),t}validateInputScopes(e){if(!e||e.length<1)throw k(mo)}containsScope(e){const t=this.printScopesLowerCase().split(" "),n=new M(t);return e?n.scopes.has(e.toLowerCase()):!1}containsScopeSet(e){return!e||e.scopes.size<=0?!1:this.scopes.size>=e.scopes.size&&e.asArray().every(t=>this.containsScope(t))}containsOnlyOIDCScopes(){let e=0;return In.forEach(t=>{this.containsScope(t)&&(e+=1)}),this.scopes.size===e}appendScope(e){e&&this.scopes.add(e.trim())}appendScopes(e){try{e.forEach(t=>this.appendScope(t))}catch{throw g(oo)}}removeScope(e){if(!e)throw g(no);this.scopes.delete(e.trim())}removeOIDCScopes(){In.forEach(e=>{this.scopes.delete(e)})}unionScopeSets(e){if(!e)throw g(wt);const t=new Set;return e.scopes.forEach(n=>t.add(n.toLowerCase())),this.scopes.forEach(n=>t.add(n.toLowerCase())),t}intersectingScopeSets(e){if(!e)throw g(wt);e.containsOnlyOIDCScopes()||e.removeOIDCScopes();const t=this.unionScopeSets(e),n=e.getScopeCount(),o=this.getScopeCount();return t.size<o+n}getScopeCount(){return this.scopes.size}asArray(){const e=[];return this.scopes.forEach(t=>e.push(t)),e}printScopes(){return this.scopes?this.asArray().join(" "):l.EMPTY_STRING}printScopesLowerCase(){return this.printScopes().toLowerCase()}}/*! @azure/msal-common v14.3.0 2023-10-30 */function Ot(s,e){if(!s)throw g(Vn);try{const t=e.base64Decode(s);return JSON.parse(t)}catch{throw g(xt)}}function ke(s){if(!s)throw g(xt);const e=s.split(K.CLIENT_INFO_SEPARATOR,2);return{uid:e[0],utid:e.length<2?l.EMPTY_STRING:e[1]}}/*! @azure/msal-common v14.3.0 2023-10-30 */const W={Default:0,Adfs:1,Dsts:2,Ciam:3};/*! @azure/msal-common v14.3.0 2023-10-30 */const ae={AAD:"AAD",OIDC:"OIDC"};/*! @azure/msal-common v14.3.0 2023-10-30 */class P{generateAccountId(){return[this.homeAccountId,this.environment].join(K.CACHE_KEY_SEPARATOR).toLowerCase()}generateAccountKey(){return P.generateAccountCacheKey({homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId})}getAccountInfo(){return{homeAccountId:this.homeAccountId,environment:this.environment,tenantId:this.realm,username:this.username,localAccountId:this.localAccountId,name:this.name,idTokenClaims:this.idTokenClaims,nativeAccountId:this.nativeAccountId,authorityType:this.authorityType}}static generateAccountCacheKey(e){return[e.homeAccountId,e.environment||l.EMPTY_STRING,e.tenantId||l.EMPTY_STRING].join(K.CACHE_KEY_SEPARATOR).toLowerCase()}static createAccount(e,t){const n=new P;t.authorityType===W.Adfs?n.authorityType=Je.ADFS_ACCOUNT_TYPE:t.protocolMode===ae.AAD?n.authorityType=Je.MSSTS_ACCOUNT_TYPE:n.authorityType=Je.GENERIC_ACCOUNT_TYPE,n.clientInfo=e.clientInfo,n.homeAccountId=e.homeAccountId,n.nativeAccountId=e.nativeAccountId;const o=e.environment||t&&t.getPreferredCache();if(!o)throw g($t);n.environment=o,n.realm=e.idTokenClaims.tid||l.EMPTY_STRING,n.localAccountId=e.idTokenClaims.oid||e.idTokenClaims.sub||l.EMPTY_STRING;const r=e.idTokenClaims.preferred_username||e.idTokenClaims.upn,i=e.idTokenClaims.emails?e.idTokenClaims.emails[0]:null;return n.username=r||i||l.EMPTY_STRING,n.name=e.idTokenClaims.name,n.cloudGraphHostName=e.cloudGraphHostName,n.msGraphHost=e.msGraphHost,n}static createFromAccountInfo(e,t,n){const o=new P;return o.authorityType=e.authorityType||Je.GENERIC_ACCOUNT_TYPE,o.homeAccountId=e.homeAccountId,o.localAccountId=e.localAccountId,o.nativeAccountId=e.nativeAccountId,o.realm=e.tenantId,o.environment=e.environment,o.username=e.username,o.name=e.name,o.cloudGraphHostName=t,o.msGraphHost=n,o}static generateHomeAccountId(e,t,n,o,r){const i=r!=null&&r.sub?r.sub:l.EMPTY_STRING;if(t===W.Adfs||t===W.Dsts)return i;if(e)try{const a=Ot(e,o);if(a.uid&&a.utid)return`${a.uid}${K.CLIENT_INFO_SEPARATOR}${a.utid}`}catch{}return n.verbose("No client info in response"),i}static isAccountEntity(e){return e?e.hasOwnProperty("homeAccountId")&&e.hasOwnProperty("environment")&&e.hasOwnProperty("realm")&&e.hasOwnProperty("localAccountId")&&e.hasOwnProperty("username")&&e.hasOwnProperty("authorityType"):!1}static accountInfoIsEqual(e,t,n){if(!e||!t)return!1;let o=!0;if(n){const r=e.idTokenClaims||{},i=t.idTokenClaims||{};o=r.iat===i.iat&&r.nonce===i.nonce}return e.homeAccountId===t.homeAccountId&&e.localAccountId===t.localAccountId&&e.username===t.username&&e.tenantId===t.tenantId&&e.environment===t.environment&&e.nativeAccountId===t.nativeAccountId&&o}}/*! @azure/msal-common v14.3.0 2023-10-30 */class _{get urlString(){return this._urlString}constructor(e){if(this._urlString=e,!this._urlString)throw k(Wt);this.getHash()||(this._urlString=_.canonicalizeUri(e))}static canonicalizeUri(e){if(e){let t=e.toLowerCase();return $.endsWith(t,"?")?t=t.slice(0,-1):$.endsWith(t,"?/")&&(t=t.slice(0,-2)),$.endsWith(t,"/")||(t+="/"),t}return e}validateAsUri(){let e;try{e=this.getUrlComponents()}catch{throw k(Ue)}if(!e.HostNameAndPort||!e.PathSegments)throw k(Ue);if(!e.Protocol||e.Protocol.toLowerCase()!=="https:")throw k(po)}static appendQueryString(e,t){return t?e.indexOf("?")<0?`${e}?${t}`:`${e}&${t}`:e}static removeHashFromUrl(e){return _.canonicalizeUri(e.split("#")[0])}replaceTenantPath(e){const t=this.getUrlComponents(),n=t.PathSegments;return e&&n.length!==0&&(n[0]===Ke.COMMON||n[0]===Ke.ORGANIZATIONS)&&(n[0]=e),_.constructAuthorityUriFromObject(t)}getHash(){return _.parseHash(this.urlString)}getUrlComponents(){const e=RegExp("^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?"),t=this.urlString.match(e);if(!t)throw k(Ue);const n={Protocol:t[1],HostNameAndPort:t[4],AbsolutePath:t[5],QueryString:t[7]};let o=n.AbsolutePath.split("/");return o=o.filter(r=>r&&r.length>0),n.PathSegments=o,n.QueryString&&n.QueryString.endsWith("/")&&(n.QueryString=n.QueryString.substring(0,n.QueryString.length-1)),n}static getDomainFromUrl(e){const t=RegExp("^([^:/?#]+://)?([^/?#]*)"),n=e.match(t);if(!n)throw k(Ue);return n[2]}static getAbsoluteUrl(e,t){if(e[0]===l.FORWARD_SLASH){const o=new _(t).getUrlComponents();return o.Protocol+"//"+o.HostNameAndPort+e}return e}static parseHash(e){const t=e.indexOf("#"),n=e.indexOf("#/");return n>-1?e.substring(n+2):t>-1?e.substring(t+1):l.EMPTY_STRING}static parseQueryString(e){const t=e.indexOf("?"),n=e.indexOf("/?");return n>-1?e.substring(n+2):t>-1?e.substring(t+1):l.EMPTY_STRING}static parseQueryServerResponse(e){const t=e.indexOf("?code"),n=e.indexOf("/?code"),o=e.indexOf("#");return n>-1&&o>-1?e.substring(n+2,o):n>-1?e.substring(n+2):t>-1&&o>-1?e.substring(t+1,o):t>-1?e.substring(t+1):l.EMPTY_STRING}static constructAuthorityUriFromObject(e){return new _(e.Protocol+"//"+e.HostNameAndPort+"/"+e.PathSegments.join("/"))}static getDeserializedHash(e){if(!e)return{};const t=_.parseHash(e),n=$.queryStringToObject(t||e);if(!n)throw g(vt);return n}static getDeserializedQueryString(e){if(!e)return{};const t=_.parseQueryString(e),n=$.queryStringToObject(t||e);if(!n)throw g(vt);return n}static getDeserializedCodeResponse(e,t){const n=new _(t);let o;return e===ze.QUERY?o=_.getDeserializedQueryString(t):o=_.getDeserializedHash(n.getHash()),o}static hashContainsKnownProperties(e){if(!e||e.indexOf("=")<0)return!1;const t=_.getDeserializedHash(e);return!!(t.code||t.error_description||t.error||t.state)}}/*! @azure/msal-common v14.3.0 2023-10-30 */const wo={endpointMetadata:{"https://login.microsoftonline.com/common/":{token_endpoint:"https://login.microsoftonline.com/common/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.com/common/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.com/common/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.com/common/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.com/common/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.com/common/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.com",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pas.windows.net"},"https://login.chinacloudapi.cn/common/":{token_endpoint:"https://login.chinacloudapi.cn/common/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.chinacloudapi.cn/common/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo",authorization_endpoint:"https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.chinacloudapi.cn/common/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.chinacloudapi.cn/common/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.chinacloudapi.cn/common/kerberos",tenant_region_scope:null,cloud_instance_name:"partner.microsoftonline.cn",cloud_graph_host_name:"graph.chinacloudapi.cn",msgraph_host:"microsoftgraph.chinacloudapi.cn",rbac_url:"https://pas.chinacloudapi.cn"},"https://login.microsoftonline.us/common/":{token_endpoint:"https://login.microsoftonline.us/common/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.us/common/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.us/common/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.us/common/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.us/common/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.us/common/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.us",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pasff.usgovcloudapi.net"},"https://login.microsoftonline.com/consumers/":{token_endpoint:"https://login.microsoftonline.com/consumers/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.com/consumers/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.com/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.com/consumers/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.com/consumers/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.com/consumers/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.com",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pas.windows.net"},"https://login.chinacloudapi.cn/consumers/":{token_endpoint:"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.chinacloudapi.cn/consumers/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.partner.microsoftonline.cn/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo",authorization_endpoint:"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.chinacloudapi.cn/consumers/kerberos",tenant_region_scope:null,cloud_instance_name:"partner.microsoftonline.cn",cloud_graph_host_name:"graph.chinacloudapi.cn",msgraph_host:"microsoftgraph.chinacloudapi.cn",rbac_url:"https://pas.chinacloudapi.cn"},"https://login.microsoftonline.us/consumers/":{token_endpoint:"https://login.microsoftonline.us/consumers/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.us/consumers/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.us/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.us/consumers/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.us/consumers/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.us/consumers/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.us/consumers/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.us",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pasff.usgovcloudapi.net"},"https://login.microsoftonline.com/organizations/":{token_endpoint:"https://login.microsoftonline.com/organizations/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.com/organizations/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.com/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.com/organizations/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.com/organizations/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.com/organizations/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.com",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pas.windows.net"},"https://login.chinacloudapi.cn/organizations/":{token_endpoint:"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.chinacloudapi.cn/organizations/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.partner.microsoftonline.cn/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo",authorization_endpoint:"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.chinacloudapi.cn/organizations/kerberos",tenant_region_scope:null,cloud_instance_name:"partner.microsoftonline.cn",cloud_graph_host_name:"graph.chinacloudapi.cn",msgraph_host:"microsoftgraph.chinacloudapi.cn",rbac_url:"https://pas.chinacloudapi.cn"},"https://login.microsoftonline.us/organizations/":{token_endpoint:"https://login.microsoftonline.us/organizations/oauth2/v2.0/token",token_endpoint_auth_methods_supported:["client_secret_post","private_key_jwt","client_secret_basic"],jwks_uri:"https://login.microsoftonline.us/organizations/discovery/v2.0/keys",response_modes_supported:["query","fragment","form_post"],subject_types_supported:["pairwise"],id_token_signing_alg_values_supported:["RS256"],response_types_supported:["code","id_token","code id_token","id_token token"],scopes_supported:["openid","profile","email","offline_access"],issuer:"https://login.microsoftonline.us/{tenantid}/v2.0",request_uri_parameter_supported:!1,userinfo_endpoint:"https://graph.microsoft.com/oidc/userinfo",authorization_endpoint:"https://login.microsoftonline.us/organizations/oauth2/v2.0/authorize",device_authorization_endpoint:"https://login.microsoftonline.us/organizations/oauth2/v2.0/devicecode",http_logout_supported:!0,frontchannel_logout_supported:!0,end_session_endpoint:"https://login.microsoftonline.us/organizations/oauth2/v2.0/logout",claims_supported:["sub","iss","cloud_instance_name","cloud_instance_host_name","cloud_graph_host_name","msgraph_host","aud","exp","iat","auth_time","acr","nonce","preferred_username","name","tid","ver","at_hash","c_hash","email"],kerberos_endpoint:"https://login.microsoftonline.us/organizations/kerberos",tenant_region_scope:null,cloud_instance_name:"microsoftonline.us",cloud_graph_host_name:"graph.windows.net",msgraph_host:"graph.microsoft.com",rbac_url:"https://pasff.usgovcloudapi.net"}},instanceDiscoveryMetadata:{tenant_discovery_endpoint:"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration","api-version":"1.1",metadata:[{preferred_network:"login.microsoftonline.com",preferred_cache:"login.windows.net",aliases:["login.microsoftonline.com","login.windows.net","login.microsoft.com","sts.windows.net"]},{preferred_network:"login.partner.microsoftonline.cn",preferred_cache:"login.partner.microsoftonline.cn",aliases:["login.partner.microsoftonline.cn","login.chinacloudapi.cn"]},{preferred_network:"login.microsoftonline.de",preferred_cache:"login.microsoftonline.de",aliases:["login.microsoftonline.de"]},{preferred_network:"login.microsoftonline.us",preferred_cache:"login.microsoftonline.us",aliases:["login.microsoftonline.us","login.usgovcloudapi.net"]},{preferred_network:"login-us.microsoftonline.com",preferred_cache:"login-us.microsoftonline.com",aliases:["login-us.microsoftonline.com"]}]}},On=wo.endpointMetadata,tn=wo.instanceDiscoveryMetadata,Ro=new Set;tn.metadata.forEach(s=>{s.aliases.forEach(e=>{Ro.add(e)})});function ei(s,e){var o;let t;const n=s.canonicalAuthority;if(n){const r=new _(n).getUrlComponents().HostNameAndPort;t=Nn(r,(o=s.cloudDiscoveryMetadata)==null?void 0:o.metadata,z.CONFIG,e)||Nn(r,tn.metadata,z.HARDCODED_VALUES,e)||s.knownAuthorities}return t||[]}function Nn(s,e,t,n){if(n==null||n.trace(`getAliasesFromMetadata called with source: ${t}`),s&&e){const o=nt(e,s);if(o)return n==null||n.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${t}, returning aliases`),o.aliases;n==null||n.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${t}`)}return null}function ti(s){return nt(tn.metadata,s)}function nt(s,e){for(let t=0;t<s.length;t++){const n=s[t];if(n.aliases.includes(e))return n}return null}/*! @azure/msal-common v14.3.0 2023-10-30 */class he{constructor(e,t,n,o){this.clientId=e,this.cryptoImpl=t,this.commonLogger=n.clone(ho,Vt),this.staticAuthorityOptions=o}getAllAccounts(e){const t=[];return this.getAccountsFilteredBy(e||{}).forEach(n=>{const o=this.getAccountInfoFromEntity(n,e);o&&t.push(o)}),t}getAccountInfoFilteredBy(e){const t=this.getAllAccounts(e);return t.length>1?t.filter(n=>!!n.idTokenClaims)[0]:t.length===1?t[0]:null}getBaseAccountInfo(e){const t=this.getAccountsFilteredBy(e);return t.length>0?t[0].getAccountInfo():null}getAccountInfoFromEntity(e,t){const n=e.getAccountInfo(),o=this.getIdToken(n);if(o){const r=ue(o.secret,this.cryptoImpl.base64Decode);if(this.idTokenClaimsMatchAccountFilter(r,t))return n.idToken=o.secret,n.idTokenClaims=r,n}return n}idTokenClaimsMatchAccountFilter(e,t){return!(t&&(t.loginHint&&!this.matchLoginHint(e,t.loginHint)||t.sid&&!this.matchSid(e,t.sid)))}async saveCacheRecord(e,t){if(!e)throw g(ro);e.account&&this.setAccount(e.account),e.idToken&&(t==null?void 0:t.idToken)!==!1&&this.setIdTokenCredential(e.idToken),e.accessToken&&(t==null?void 0:t.accessToken)!==!1&&await this.saveAccessToken(e.accessToken),e.refreshToken&&(t==null?void 0:t.refreshToken)!==!1&&this.setRefreshTokenCredential(e.refreshToken),e.appMetadata&&this.setAppMetadata(e.appMetadata)}async saveAccessToken(e){const t={clientId:e.clientId,credentialType:e.credentialType,environment:e.environment,homeAccountId:e.homeAccountId,realm:e.realm,tokenType:e.tokenType,requestedClaimsHash:e.requestedClaimsHash},n=this.getTokenKeys(),o=M.fromString(e.target),r=[];n.accessToken.forEach(i=>{if(!this.accessTokenKeyMatchesFilter(i,t,!1))return;const a=this.getAccessTokenCredential(i);a&&this.credentialMatchesFilter(a,t)&&M.fromString(a.target).intersectingScopeSets(o)&&r.push(this.removeAccessToken(i))}),await Promise.all(r),this.setAccessTokenCredential(e)}getAccountsFilteredBy(e){const t=this.getAccountKeys(),n=[];return t.forEach(o=>{if(!this.isAccountKey(o,e.homeAccountId,e.tenantId))return;const r=this.getAccount(o);r&&(e.homeAccountId&&!this.matchHomeAccountId(r,e.homeAccountId)||e.localAccountId&&!this.matchLocalAccountId(r,e.localAccountId)||e.username&&!this.matchUsername(r,e.username)||e.environment&&!this.matchEnvironment(r,e.environment)||e.realm&&!this.matchRealm(r,e.realm)||e.tenantId&&!this.matchRealm(r,e.tenantId)||e.nativeAccountId&&!this.matchNativeAccountId(r,e.nativeAccountId)||e.authorityType&&!this.matchAuthorityType(r,e.authorityType)||e.name&&!this.matchName(r,e.name)||n.push(r))}),n}isAccountKey(e,t,n){return!(e.split(K.CACHE_KEY_SEPARATOR).length<3||t&&!e.toLowerCase().includes(t.toLowerCase())||n&&!e.toLowerCase().includes(n.toLowerCase()))}isCredentialKey(e){if(e.split(K.CACHE_KEY_SEPARATOR).length<6)return!1;const t=e.toLowerCase();if(t.indexOf(y.ID_TOKEN.toLowerCase())===-1&&t.indexOf(y.ACCESS_TOKEN.toLowerCase())===-1&&t.indexOf(y.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())===-1&&t.indexOf(y.REFRESH_TOKEN.toLowerCase())===-1)return!1;if(t.indexOf(y.REFRESH_TOKEN.toLowerCase())>-1){const n=`${y.REFRESH_TOKEN}${K.CACHE_KEY_SEPARATOR}${this.clientId}${K.CACHE_KEY_SEPARATOR}`,o=`${y.REFRESH_TOKEN}${K.CACHE_KEY_SEPARATOR}${Fe}${K.CACHE_KEY_SEPARATOR}`;if(t.indexOf(n.toLowerCase())===-1&&t.indexOf(o.toLowerCase())===-1)return!1}else if(t.indexOf(this.clientId.toLowerCase())===-1)return!1;return!0}credentialMatchesFilter(e,t){return!(t.clientId&&!this.matchClientId(e,t.clientId)||t.userAssertionHash&&!this.matchUserAssertionHash(e,t.userAssertionHash)||typeof t.homeAccountId=="string"&&!this.matchHomeAccountId(e,t.homeAccountId)||t.environment&&!this.matchEnvironment(e,t.environment)||t.realm&&!this.matchRealm(e,t.realm)||t.credentialType&&!this.matchCredentialType(e,t.credentialType)||t.familyId&&!this.matchFamilyId(e,t.familyId)||t.target&&!this.matchTarget(e,t.target)||(t.requestedClaimsHash||e.requestedClaimsHash)&&e.requestedClaimsHash!==t.requestedClaimsHash||e.credentialType===y.ACCESS_TOKEN_WITH_AUTH_SCHEME&&(t.tokenType&&!this.matchTokenType(e,t.tokenType)||t.tokenType===R.SSH&&t.keyId&&!this.matchKeyId(e,t.keyId)))}getAppMetadataFilteredBy(e){return this.getAppMetadataFilteredByInternal(e.environment,e.clientId)}getAppMetadataFilteredByInternal(e,t){const n=this.getKeys(),o={};return n.forEach(r=>{if(!this.isAppMetadata(r))return;const i=this.getAppMetadata(r);i&&(e&&!this.matchEnvironment(i,e)||t&&!this.matchClientId(i,t)||(o[r]=i))}),o}getAuthorityMetadataByAlias(e){const t=this.getAuthorityMetadataKeys();let n=null;return t.forEach(o=>{if(!this.isAuthorityMetadata(o)||o.indexOf(this.clientId)===-1)return;const r=this.getAuthorityMetadata(o);r&&r.aliases.indexOf(e)!==-1&&(n=r)}),n}async removeAllAccounts(){const e=this.getAccountKeys(),t=[];e.forEach(n=>{t.push(this.removeAccount(n))}),await Promise.all(t)}async removeAccount(e){const t=this.getAccount(e);t&&(await this.removeAccountContext(t),this.removeItem(e))}async removeAccountContext(e){const t=this.getTokenKeys(),n=e.generateAccountId(),o=[];t.idToken.forEach(r=>{r.indexOf(n)===0&&this.removeIdToken(r)}),t.accessToken.forEach(r=>{r.indexOf(n)===0&&o.push(this.removeAccessToken(r))}),t.refreshToken.forEach(r=>{r.indexOf(n)===0&&this.removeRefreshToken(r)}),await Promise.all(o)}async removeAccessToken(e){const t=this.getAccessTokenCredential(e);if(t){if(t.credentialType.toLowerCase()===y.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()&&t.tokenType===R.POP){const o=t.keyId;if(o)try{await this.cryptoImpl.removeTokenBindingKey(o)}catch{throw g(ao)}}return this.removeItem(e)}}removeAppMetadata(){return this.getKeys().forEach(t=>{this.isAppMetadata(t)&&this.removeItem(t)}),!0}readCacheRecord(e,t,n){const o=this.getTokenKeys(),r=this.readAccountFromCache(e),i=this.getIdToken(e,o),a=this.getAccessToken(e,t,o),c=this.getRefreshToken(e,!1,o),h=this.readAppMetadataFromCache(n);return r&&i&&(r.idTokenClaims=ue(i.secret,this.cryptoImpl.base64Decode)),{account:r,idToken:i,accessToken:a,refreshToken:c,appMetadata:h}}readAccountFromCache(e){const t=P.generateAccountCacheKey(e);return this.getAccount(t)}getIdToken(e,t){this.commonLogger.trace("CacheManager - getIdToken called");const n={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:y.ID_TOKEN,clientId:this.clientId,realm:e.tenantId},o=this.getIdTokensByFilter(n,t),r=o.length;return r<1?(this.commonLogger.info("CacheManager:getIdToken - No token found"),null):r>1?(this.commonLogger.info("CacheManager:getIdToken - Multiple id tokens found, clearing them"),o.forEach(i=>{this.removeIdToken(Re(i))}),null):(this.commonLogger.info("CacheManager:getIdToken - Returning id token"),o[0])}getIdTokensByFilter(e,t){const n=t&&t.idToken||this.getTokenKeys().idToken,o=[];return n.forEach(r=>{if(!this.idTokenKeyMatchesFilter(r,{clientId:this.clientId,...e}))return;const i=this.getIdTokenCredential(r);i&&this.credentialMatchesFilter(i,e)&&o.push(i)}),o}idTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}removeIdToken(e){this.removeItem(e)}removeRefreshToken(e){this.removeItem(e)}getAccessToken(e,t,n){this.commonLogger.trace("CacheManager - getAccessToken called");const o=M.createSearchScopes(t.scopes),r=t.authenticationScheme||R.BEARER,i=r&&r.toLowerCase()!==R.BEARER.toLowerCase()?y.ACCESS_TOKEN_WITH_AUTH_SCHEME:y.ACCESS_TOKEN,a={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:i,clientId:this.clientId,realm:e.tenantId,target:o,tokenType:r,keyId:t.sshKid,requestedClaimsHash:t.requestedClaimsHash},c=n&&n.accessToken||this.getTokenKeys().accessToken,h=[];c.forEach(f=>{if(this.accessTokenKeyMatchesFilter(f,a,!0)){const E=this.getAccessTokenCredential(f);E&&this.credentialMatchesFilter(E,a)&&h.push(E)}});const u=h.length;return u<1?(this.commonLogger.info("CacheManager:getAccessToken - No token found"),null):u>1?(this.commonLogger.info("CacheManager:getAccessToken - Multiple access tokens found, clearing them"),h.forEach(f=>{this.removeAccessToken(Re(f))}),null):(this.commonLogger.info("CacheManager:getAccessToken - Returning access token"),h[0])}accessTokenKeyMatchesFilter(e,t,n){const o=e.toLowerCase();if(t.clientId&&o.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&o.indexOf(t.homeAccountId.toLowerCase())===-1||t.realm&&o.indexOf(t.realm.toLowerCase())===-1||t.requestedClaimsHash&&o.indexOf(t.requestedClaimsHash.toLowerCase())===-1)return!1;if(t.target){const r=t.target.asArray();for(let i=0;i<r.length;i++){if(n&&!o.includes(r[i].toLowerCase()))return!1;if(!n&&o.includes(r[i].toLowerCase()))return!0}}return!0}getAccessTokensByFilter(e){const t=this.getTokenKeys(),n=[];return t.accessToken.forEach(o=>{if(!this.accessTokenKeyMatchesFilter(o,e,!0))return;const r=this.getAccessTokenCredential(o);r&&this.credentialMatchesFilter(r,e)&&n.push(r)}),n}getRefreshToken(e,t,n){this.commonLogger.trace("CacheManager - getRefreshToken called");const o=t?Fe:void 0,r={homeAccountId:e.homeAccountId,environment:e.environment,credentialType:y.REFRESH_TOKEN,clientId:this.clientId,familyId:o},i=n&&n.refreshToken||this.getTokenKeys().refreshToken,a=[];return i.forEach(h=>{if(this.refreshTokenKeyMatchesFilter(h,r)){const u=this.getRefreshTokenCredential(h);u&&this.credentialMatchesFilter(u,r)&&a.push(u)}}),a.length<1?(this.commonLogger.info("CacheManager:getRefreshToken - No refresh token found."),null):(this.commonLogger.info("CacheManager:getRefreshToken - returning refresh token"),a[0])}refreshTokenKeyMatchesFilter(e,t){const n=e.toLowerCase();return!(t.familyId&&n.indexOf(t.familyId.toLowerCase())===-1||!t.familyId&&t.clientId&&n.indexOf(t.clientId.toLowerCase())===-1||t.homeAccountId&&n.indexOf(t.homeAccountId.toLowerCase())===-1)}readAppMetadataFromCache(e){const t={environment:e,clientId:this.clientId},n=this.getAppMetadataFilteredBy(t),o=Object.keys(n).map(i=>n[i]),r=o.length;if(r<1)return null;if(r>1)throw g(eo);return o[0]}isAppMetadataFOCI(e){const t=this.readAppMetadataFromCache(e);return!!(t&&t.familyId===Fe)}matchHomeAccountId(e,t){return typeof e.homeAccountId=="string"&&t===e.homeAccountId}matchLocalAccountId(e,t){return typeof e.localAccountId=="string"&&t===e.localAccountId}matchUsername(e,t){return typeof e.username=="string"&&t.toLowerCase()===e.username.toLowerCase()}matchName(e,t){var n;return t.toLowerCase()===((n=e.name)==null?void 0:n.toLowerCase())}matchUserAssertionHash(e,t){return!!(e.userAssertionHash&&t===e.userAssertionHash)}matchEnvironment(e,t){if(this.staticAuthorityOptions){const o=ei(this.staticAuthorityOptions,this.commonLogger);if(o.includes(t)&&o.includes(e.environment))return!0}const n=this.getAuthorityMetadataByAlias(t);return!!(n&&n.aliases.indexOf(e.environment)>-1)}matchCredentialType(e,t){return e.credentialType&&t.toLowerCase()===e.credentialType.toLowerCase()}matchClientId(e,t){return!!(e.clientId&&t===e.clientId)}matchFamilyId(e,t){return!!(e.familyId&&t===e.familyId)}matchRealm(e,t){return!!(e.realm&&t===e.realm)}matchNativeAccountId(e,t){return!!(e.nativeAccountId&&t===e.nativeAccountId)}matchLoginHint(e,t){return(e==null?void 0:e.login_hint)===t||e.preferred_username===t||(e==null?void 0:e.upn)===t}matchSid(e,t){return!!(e!=null&&e.sid&&e.sid===t)}matchAuthorityType(e,t){return!!(e.authorityType&&t.toLowerCase()===e.authorityType.toLowerCase())}matchTarget(e,t){return e.credentialType!==y.ACCESS_TOKEN&&e.credentialType!==y.ACCESS_TOKEN_WITH_AUTH_SCHEME||!e.target?!1:M.fromString(e.target).containsScopeSet(t)}matchTokenType(e,t){return!!(e.tokenType&&e.tokenType===t)}matchKeyId(e,t){return!!(e.keyId&&e.keyId===t)}isAppMetadata(e){return e.indexOf(St)!==-1}isAuthorityMetadata(e){return e.indexOf(Be.CACHE_KEY)!==-1}generateAuthorityMetadataCacheKey(e){return`${Be.CACHE_KEY}-${this.clientId}-${e}`}static toObject(e,t){for(const n in t)e[n]=t[n];return e}}class ni extends he{setAccount(){throw g(A)}getAccount(){throw g(A)}setIdTokenCredential(){throw g(A)}getIdTokenCredential(){throw g(A)}setAccessTokenCredential(){throw g(A)}getAccessTokenCredential(){throw g(A)}setRefreshTokenCredential(){throw g(A)}getRefreshTokenCredential(){throw g(A)}setAppMetadata(){throw g(A)}getAppMetadata(){throw g(A)}setServerTelemetry(){throw g(A)}getServerTelemetry(){throw g(A)}setAuthorityMetadata(){throw g(A)}getAuthorityMetadata(){throw g(A)}getAuthorityMetadataKeys(){throw g(A)}setThrottlingCache(){throw g(A)}getThrottlingCache(){throw g(A)}removeItem(){throw g(A)}containsKey(){throw g(A)}getKeys(){throw g(A)}getAccountKeys(){throw g(A)}getTokenKeys(){throw g(A)}async clear(){throw g(A)}updateCredentialCacheKey(){throw g(A)}}/*! @azure/msal-common v14.3.0 2023-10-30 */const oi=300,ko={tokenRenewalOffsetSeconds:oi,preventCorsPreflight:!1},ri={loggerCallback:()=>{},piiLoggingEnabled:!1,logLevel:H.Info,correlationId:l.EMPTY_STRING},ii={claimsBasedCachingEnabled:!1},si={async sendGetRequestAsync(){throw g(A)},async sendPostRequestAsync(){throw g(A)}},ai={sku:l.SKU,version:Vt,cpu:l.EMPTY_STRING,os:l.EMPTY_STRING},ci={clientSecret:l.EMPTY_STRING,clientAssertion:void 0},hi={azureCloudInstance:Qt.None,tenant:`${l.DEFAULT_COMMON_TENANT}`},li={application:{appName:"",appVersion:""}};function di({authOptions:s,systemOptions:e,loggerOptions:t,cacheOptions:n,storageInterface:o,networkInterface:r,cryptoInterface:i,clientCredentials:a,libraryInfo:c,telemetry:h,serverTelemetryManager:u,persistencePlugin:f,serializableCache:E}){const S={...ri,...t};return{authOptions:ui(s),systemOptions:{...ko,...e},loggerOptions:S,cacheOptions:{...ii,...n},storageInterface:o||new ni(s.clientId,tt,new _e(S)),networkInterface:r||si,cryptoInterface:i||tt,clientCredentials:a||ci,libraryInfo:{...ai,...c},telemetry:{...li,...h},serverTelemetryManager:u||null,persistencePlugin:f||null,serializableCache:E||null}}function ui(s){return{clientCapabilities:[],azureCloudOptions:hi,skipAuthorityMetadataCache:!1,...s}}function Nt(s){return s.authOptions.authority.options.protocolMode===ae.OIDC}/*! @azure/msal-common v14.3.0 2023-10-30 */class ge extends N{constructor(e,t,n){super(e,t,n),this.name="ServerError",Object.setPrototypeOf(this,ge.prototype)}}/*! @azure/msal-common v14.3.0 2023-10-30 */class Z{static generateThrottlingStorageKey(e){return`${xe.THROTTLING_PREFIX}.${JSON.stringify(e)}`}static preProcess(e,t){var r;const n=Z.generateThrottlingStorageKey(t),o=e.getThrottlingCache(n);if(o){if(o.throttleTime<Date.now()){e.removeItem(n);return}throw new ge(((r=o.errorCodes)==null?void 0:r.join(" "))||l.EMPTY_STRING,o.errorMessage,o.subError)}}static postProcess(e,t,n){if(Z.checkResponseStatus(n)||Z.checkResponseForRetryAfter(n)){const o={throttleTime:Z.calculateThrottleTime(parseInt(n.headers[ee.RETRY_AFTER])),error:n.body.error,errorCodes:n.body.error_codes,errorMessage:n.body.error_description,subError:n.body.suberror};e.setThrottlingCache(Z.generateThrottlingStorageKey(t),o)}}static checkResponseStatus(e){return e.status===429||e.status>=500&&e.status<600}static checkResponseForRetryAfter(e){return e.headers?e.headers.hasOwnProperty(ee.RETRY_AFTER)&&(e.status<200||e.status>=300):!1}static calculateThrottleTime(e){const t=e<=0?0:e,n=Date.now()/1e3;return Math.floor(Math.min(n+(t||xe.DEFAULT_THROTTLE_TIME_SECONDS),n+xe.DEFAULT_MAX_THROTTLE_TIME_SECONDS)*1e3)}static removeThrottle(e,t,n,o){const r={clientId:t,authority:n.authority,scopes:n.scopes,homeAccountIdentifier:o,claims:n.claims,authenticationScheme:n.authenticationScheme,resourceRequestMethod:n.resourceRequestMethod,resourceRequestUri:n.resourceRequestUri,shrClaims:n.shrClaims,sshKid:n.sshKid},i=this.generateThrottlingStorageKey(r);e.removeItem(i)}}/*! @azure/msal-common v14.3.0 2023-10-30 */class gi{constructor(e,t){this.networkClient=e,this.cacheManager=t}async sendPostRequest(e,t,n){Z.preProcess(this.cacheManager,e);let o;try{o=await this.networkClient.sendPostRequestAsync(t,n)}catch(r){throw r instanceof N?r:g(jn)}return Z.postProcess(this.cacheManager,e,o),o}}/*! @azure/msal-common v14.3.0 2023-10-30 */const Y={HOME_ACCOUNT_ID:"home_account_id",UPN:"UPN"};/*! @azure/msal-common v14.3.0 2023-10-30 */class fe{static validateRedirectUri(e){if(!e)throw k(go)}static validatePrompt(e){const t=[];for(const n in B)t.push(B[n]);if(t.indexOf(e)<0)throw k(fo)}static validateClaims(e){try{JSON.parse(e)}catch{throw k(Jt)}}static validateCodeChallengeParams(e,t){if(!e||!t)throw k(Xt);this.validateCodeChallengeMethod(t)}static validateCodeChallengeMethod(e){if([En.PLAIN,En.S256].indexOf(e)<0)throw k(yo)}static sanitizeEQParams(e,t){return e?(t.forEach((n,o)=>{e[o]&&delete e[o]}),Object.fromEntries(Object.entries(e).filter(n=>n[1]!==""))):{}}}/*! @azure/msal-common v14.3.0 2023-10-30 */class Ge{constructor(){this.parameters=new Map}addResponseTypeCode(){this.parameters.set(T.RESPONSE_TYPE,encodeURIComponent(l.CODE_RESPONSE_TYPE))}addResponseTypeForTokenAndIdToken(){this.parameters.set(T.RESPONSE_TYPE,encodeURIComponent(`${l.TOKEN_RESPONSE_TYPE} ${l.ID_TOKEN_RESPONSE_TYPE}`))}addResponseMode(e){this.parameters.set(T.RESPONSE_MODE,encodeURIComponent(e||kr.QUERY))}addNativeBroker(){this.parameters.set(T.NATIVE_BROKER,encodeURIComponent("1"))}addScopes(e,t=!0,n=qe){t&&!n.includes("openid")&&!e.includes("openid")&&n.push("openid");const o=t?[...e||[],...n]:e||[],r=new M(o);this.parameters.set(T.SCOPE,encodeURIComponent(r.printScopes()))}addClientId(e){this.parameters.set(T.CLIENT_ID,encodeURIComponent(e))}addRedirectUri(e){fe.validateRedirectUri(e),this.parameters.set(T.REDIRECT_URI,encodeURIComponent(e))}addPostLogoutRedirectUri(e){fe.validateRedirectUri(e),this.parameters.set(T.POST_LOGOUT_URI,encodeURIComponent(e))}addIdTokenHint(e){this.parameters.set(T.ID_TOKEN_HINT,encodeURIComponent(e))}addDomainHint(e){this.parameters.set(_t.DOMAIN_HINT,encodeURIComponent(e))}addLoginHint(e){this.parameters.set(_t.LOGIN_HINT,encodeURIComponent(e))}addCcsUpn(e){this.parameters.set(ee.CCS_HEADER,encodeURIComponent(`UPN:${e}`))}addCcsOid(e){this.parameters.set(ee.CCS_HEADER,encodeURIComponent(`Oid:${e.uid}@${e.utid}`))}addSid(e){this.parameters.set(_t.SID,encodeURIComponent(e))}addClaims(e,t){const n=this.addClientCapabilitiesToClaims(e,t);fe.validateClaims(n),this.parameters.set(T.CLAIMS,encodeURIComponent(n))}addCorrelationId(e){this.parameters.set(T.CLIENT_REQUEST_ID,encodeURIComponent(e))}addLibraryInfo(e){this.parameters.set(T.X_CLIENT_SKU,e.sku),this.parameters.set(T.X_CLIENT_VER,e.version),e.os&&this.parameters.set(T.X_CLIENT_OS,e.os),e.cpu&&this.parameters.set(T.X_CLIENT_CPU,e.cpu)}addApplicationTelemetry(e){e!=null&&e.appName&&this.parameters.set(T.X_APP_NAME,e.appName),e!=null&&e.appVersion&&this.parameters.set(T.X_APP_VER,e.appVersion)}addPrompt(e){fe.validatePrompt(e),this.parameters.set(`${T.PROMPT}`,encodeURIComponent(e))}addState(e){e&&this.parameters.set(T.STATE,encodeURIComponent(e))}addNonce(e){this.parameters.set(T.NONCE,encodeURIComponent(e))}addCodeChallengeParams(e,t){if(fe.validateCodeChallengeParams(e,t),e&&t)this.parameters.set(T.CODE_CHALLENGE,encodeURIComponent(e)),this.parameters.set(T.CODE_CHALLENGE_METHOD,encodeURIComponent(t));else throw k(Xt)}addAuthorizationCode(e){this.parameters.set(T.CODE,encodeURIComponent(e))}addDeviceCode(e){this.parameters.set(T.DEVICE_CODE,encodeURIComponent(e))}addRefreshToken(e){this.parameters.set(T.REFRESH_TOKEN,encodeURIComponent(e))}addCodeVerifier(e){this.parameters.set(T.CODE_VERIFIER,encodeURIComponent(e))}addClientSecret(e){this.parameters.set(T.CLIENT_SECRET,encodeURIComponent(e))}addClientAssertion(e){e&&this.parameters.set(T.CLIENT_ASSERTION,encodeURIComponent(e))}addClientAssertionType(e){e&&this.parameters.set(T.CLIENT_ASSERTION_TYPE,encodeURIComponent(e))}addOboAssertion(e){this.parameters.set(T.OBO_ASSERTION,encodeURIComponent(e))}addRequestTokenUse(e){this.parameters.set(T.REQUESTED_TOKEN_USE,encodeURIComponent(e))}addGrantType(e){this.parameters.set(T.GRANT_TYPE,encodeURIComponent(e))}addClientInfo(){this.parameters.set(br,"1")}addExtraQueryParameters(e){const t=fe.sanitizeEQParams(e,this.parameters);Object.keys(t).forEach(n=>{this.parameters.set(n,e[n])})}addClientCapabilitiesToClaims(e,t){let n;if(!e)n={};else try{n=JSON.parse(e)}catch{throw k(Jt)}return t&&t.length>0&&(n.hasOwnProperty(We.ACCESS_TOKEN)||(n[We.ACCESS_TOKEN]={}),n[We.ACCESS_TOKEN][We.XMS_CC]={values:t}),JSON.stringify(n)}addUsername(e){this.parameters.set(Sn.username,encodeURIComponent(e))}addPassword(e){this.parameters.set(Sn.password,encodeURIComponent(e))}addPopToken(e){e&&(this.parameters.set(T.TOKEN_TYPE,R.POP),this.parameters.set(T.REQ_CNF,encodeURIComponent(e)))}addSshJwk(e){e&&(this.parameters.set(T.TOKEN_TYPE,R.SSH),this.parameters.set(T.REQ_CNF,encodeURIComponent(e)))}addServerTelemetry(e){this.parameters.set(T.X_CLIENT_CURR_TELEM,e.generateCurrentRequestHeaderValue()),this.parameters.set(T.X_CLIENT_LAST_TELEM,e.generateLastRequestHeaderValue())}addThrottling(){this.parameters.set(T.X_MS_LIB_CAPABILITY,xe.X_MS_LIB_CAPABILITY_VALUE)}addLogoutHint(e){this.parameters.set(T.LOGOUT_HINT,encodeURIComponent(e))}createQueryString(){const e=new Array;return this.parameters.forEach((t,n)=>{e.push(`${n}=${t}`)}),e.join("&")}}/*! @azure/msal-common v14.3.0 2023-10-30 */function pi(s){return s.hasOwnProperty("authorization_endpoint")&&s.hasOwnProperty("token_endpoint")&&s.hasOwnProperty("issuer")&&s.hasOwnProperty("jwks_uri")}/*! @azure/msal-common v14.3.0 2023-10-30 */class Pt{constructor(){this.expiresAt=x.nowSeconds()+Be.REFRESH_TIME_SECONDS}updateCloudDiscoveryMetadata(e,t){this.aliases=e.aliases,this.preferred_cache=e.preferred_cache,this.preferred_network=e.preferred_network,this.aliasesFromNetwork=t}updateEndpointMetadata(e,t){this.authorization_endpoint=e.authorization_endpoint,this.token_endpoint=e.token_endpoint,this.end_session_endpoint=e.end_session_endpoint,this.issuer=e.issuer,this.endpointsFromNetwork=t,this.jwks_uri=e.jwks_uri}updateCanonicalAuthority(e){this.canonical_authority=e}resetExpiresAt(){this.expiresAt=x.nowSeconds()+Be.REFRESH_TIME_SECONDS}isExpired(){return this.expiresAt<=x.nowSeconds()}static isAuthorityMetadataEntity(e,t){return t?e.indexOf(Be.CACHE_KEY)===0&&t.hasOwnProperty("aliases")&&t.hasOwnProperty("preferred_cache")&&t.hasOwnProperty("preferred_network")&&t.hasOwnProperty("canonical_authority")&&t.hasOwnProperty("authorization_endpoint")&&t.hasOwnProperty("token_endpoint")&&t.hasOwnProperty("issuer")&&t.hasOwnProperty("aliasesFromNetwork")&&t.hasOwnProperty("endpointsFromNetwork")&&t.hasOwnProperty("expiresAt")&&t.hasOwnProperty("jwks_uri"):!1}}/*! @azure/msal-common v14.3.0 2023-10-30 */function mi(s){return s.hasOwnProperty("tenant_discovery_endpoint")&&s.hasOwnProperty("metadata")}/*! @azure/msal-common v14.3.0 2023-10-30 */function fi(s){return s.hasOwnProperty("error")&&s.hasOwnProperty("error_description")}/*! @azure/msal-common v14.3.0 2023-10-30 */const d={AcquireTokenByCode:"acquireTokenByCode",AcquireTokenByRefreshToken:"acquireTokenByRefreshToken",AcquireTokenSilent:"acquireTokenSilent",AcquireTokenSilentAsync:"acquireTokenSilentAsync",AcquireTokenPopup:"acquireTokenPopup",CryptoOptsGetPublicKeyThumbprint:"cryptoOptsGetPublicKeyThumbprint",CryptoOptsSignJwt:"cryptoOptsSignJwt",SilentCacheClientAcquireToken:"silentCacheClientAcquireToken",SilentIframeClientAcquireToken:"silentIframeClientAcquireToken",SilentRefreshClientAcquireToken:"silentRefreshClientAcquireToken",SsoSilent:"ssoSilent",StandardInteractionClientGetDiscoveredAuthority:"standardInteractionClientGetDiscoveredAuthority",FetchAccountIdWithNativeBroker:"fetchAccountIdWithNativeBroker",NativeInteractionClientAcquireToken:"nativeInteractionClientAcquireToken",BaseClientCreateTokenRequestHeaders:"baseClientCreateTokenRequestHeaders",RefreshTokenClientExecutePostToTokenEndpoint:"refreshTokenClientExecutePostToTokenEndpoint",AuthorizationCodeClientExecutePostToTokenEndpoint:"authorizationCodeClientExecutePostToTokenEndpoint",BrokerHandhshake:"brokerHandshake",AcquireTokenByRefreshTokenInBroker:"acquireTokenByRefreshTokenInBroker",AcquireTokenByBroker:"acquireTokenByBroker",RefreshTokenClientExecuteTokenRequest:"refreshTokenClientExecuteTokenRequest",RefreshTokenClientAcquireToken:"refreshTokenClientAcquireToken",RefreshTokenClientAcquireTokenWithCachedRefreshToken:"refreshTokenClientAcquireTokenWithCachedRefreshToken",RefreshTokenClientAcquireTokenByRefreshToken:"refreshTokenClientAcquireTokenByRefreshToken",RefreshTokenClientCreateTokenRequestBody:"refreshTokenClientCreateTokenRequestBody",AcquireTokenFromCache:"acquireTokenFromCache",SilentFlowClientAcquireCachedToken:"silentFlowClientAcquireCachedToken",SilentFlowClientGenerateResultFromCacheRecord:"silentFlowClientGenerateResultFromCacheRecord",AcquireTokenBySilentIframe:"acquireTokenBySilentIframe",InitializeBaseRequest:"initializeBaseRequest",InitializeSilentRequest:"initializeSilentRequest",InitializeClientApplication:"initializeClientApplication",SilentIframeClientTokenHelper:"silentIframeClientTokenHelper",SilentHandlerInitiateAuthRequest:"silentHandlerInitiateAuthRequest",SilentHandlerMonitorIframeForHash:"silentHandlerMonitorIframeForHash",SilentHandlerLoadFrame:"silentHandlerLoadFrame",SilentHandlerLoadFrameSync:"silentHandlerLoadFrameSync",StandardInteractionClientCreateAuthCodeClient:"standardInteractionClientCreateAuthCodeClient",StandardInteractionClientGetClientConfiguration:"standardInteractionClientGetClientConfiguration",StandardInteractionClientInitializeAuthorizationRequest:"standardInteractionClientInitializeAuthorizationRequest",StandardInteractionClientInitializeAuthorizationCodeRequest:"standardInteractionClientInitializeAuthorizationCodeRequest",GetAuthCodeUrl:"getAuthCodeUrl",HandleCodeResponseFromServer:"handleCodeResponseFromServer",HandleCodeResponseFromHash:"handleCodeResponseFromHash",UpdateTokenEndpointAuthority:"updateTokenEndpointAuthority",AuthClientAcquireToken:"authClientAcquireToken",AuthClientExecuteTokenRequest:"authClientExecuteTokenRequest",AuthClientCreateTokenRequestBody:"authClientCreateTokenRequestBody",AuthClientCreateQueryString:"authClientCreateQueryString",PopTokenGenerateCnf:"popTokenGenerateCnf",PopTokenGenerateKid:"popTokenGenerateKid",HandleServerTokenResponse:"handleServerTokenResponse",AuthorityFactoryCreateDiscoveredInstance:"authorityFactoryCreateDiscoveredInstance",AuthorityResolveEndpointsAsync:"authorityResolveEndpointsAsync",AuthorityResolveEndpointsFromLocalSources:"authorityResolveEndpointsFromLocalSources",AuthorityGetCloudDiscoveryMetadataFromNetwork:"authorityGetCloudDiscoveryMetadataFromNetwork",AuthorityUpdateCloudDiscoveryMetadata:"authorityUpdateCloudDiscoveryMetadata",AuthorityGetEndpointMetadataFromNetwork:"authorityGetEndpointMetadataFromNetwork",AuthorityUpdateEndpointMetadata:"authorityUpdateEndpointMetadata",AuthorityUpdateMetadataWithRegionalInformation:"authorityUpdateMetadataWithRegionalInformation",RegionDiscoveryDetectRegion:"regionDiscoveryDetectRegion",RegionDiscoveryGetRegionFromIMDS:"regionDiscoveryGetRegionFromIMDS",RegionDiscoveryGetCurrentVersion:"regionDiscoveryGetCurrentVersion",AcquireTokenByCodeAsync:"acquireTokenByCodeAsync",GetEndpointMetadataFromNetwork:"getEndpointMetadataFromNetwork",GetCloudDiscoveryMetadataFromNetworkMeasurement:"getCloudDiscoveryMetadataFromNetworkMeasurement",HandleRedirectPromiseMeasurement:"handleRedirectPromiseMeasurement",UpdateCloudDiscoveryMetadataMeasurement:"updateCloudDiscoveryMetadataMeasurement",UsernamePasswordClientAcquireToken:"usernamePasswordClientAcquireToken",NativeMessageHandlerHandshake:"nativeMessageHandlerHandshake",NativeGenerateAuthResult:"nativeGenerateAuthResult",RemoveHiddenIframe:"removeHiddenIframe",ClearTokensAndKeysWithClaims:"clearTokensAndKeysWithClaims",CacheManagerGetRefreshToken:"cacheManagerGetRefreshToken",GeneratePkceCodes:"generatePkceCodes",GenerateCodeVerifier:"generateCodeVerifier",GenerateCodeChallengeFromVerifier:"generateCodeChallengeFromVerifier",Sha256Digest:"sha256Digest",GetRandomValues:"getRandomValues"},Ci={NotStarted:0,InProgress:1,Completed:2};/*! @azure/msal-common v14.3.0 2023-10-30 */const $e=(s,e,t,n,o)=>(...r)=>{t.trace(`Executing function ${e}`);const i=n==null?void 0:n.startMeasurement(e,o);try{const a=s(...r);return i==null||i.end({success:!0}),t.trace(`Returning result from ${e}`),a}catch(a){t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(a))}catch{t.trace("Unable to print error message.")}throw i==null||i.end({success:!1}),a}},p=(s,e,t,n,o)=>(...r)=>{t.trace(`Executing function ${e}`);const i=n==null?void 0:n.startMeasurement(e,o);return n==null||n.setPreQueueTime(e,o),s(...r).then(a=>(t.trace(`Returning result from ${e}`),i==null||i.end({success:!0}),a)).catch(a=>{t.trace(`Error occurred in ${e}`);try{t.trace(JSON.stringify(a))}catch{t.trace("Unable to print error message.")}throw i==null||i.end({success:!1}),a})};/*! @azure/msal-common v14.3.0 2023-10-30 */class gt{constructor(e,t,n,o){this.networkInterface=e,this.logger=t,this.performanceClient=n,this.correlationId=o}async detectRegion(e,t){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(d.RegionDiscoveryDetectRegion,this.correlationId);let n=e;if(n)t.region_source=Se.ENVIRONMENT_VARIABLE;else{const r=gt.IMDS_OPTIONS;try{const i=await p(this.getRegionFromIMDS.bind(this),d.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(l.IMDS_VERSION,r);if(i.status===Xe.httpSuccess&&(n=i.body,t.region_source=Se.IMDS),i.status===Xe.httpBadRequest){const a=await p(this.getCurrentVersion.bind(this),d.RegionDiscoveryGetCurrentVersion,this.logger,this.performanceClient,this.correlationId)(r);if(!a)return t.region_source=Se.FAILED_AUTO_DETECTION,null;const c=await p(this.getRegionFromIMDS.bind(this),d.RegionDiscoveryGetRegionFromIMDS,this.logger,this.performanceClient,this.correlationId)(a,r);c.status===Xe.httpSuccess&&(n=c.body,t.region_source=Se.IMDS)}}catch{return t.region_source=Se.FAILED_AUTO_DETECTION,null}}return n||(t.region_source=Se.FAILED_AUTO_DETECTION),n||null}async getRegionFromIMDS(e,t){var n;return(n=this.performanceClient)==null||n.addQueueMeasurement(d.RegionDiscoveryGetRegionFromIMDS,this.correlationId),this.networkInterface.sendGetRequestAsync(`${l.IMDS_ENDPOINT}?api-version=${e}&format=text`,t,l.IMDS_TIMEOUT)}async getCurrentVersion(e){var t;(t=this.performanceClient)==null||t.addQueueMeasurement(d.RegionDiscoveryGetCurrentVersion,this.correlationId);try{const n=await this.networkInterface.sendGetRequestAsync(`${l.IMDS_ENDPOINT}?format=json`,e);return n.status===Xe.httpBadRequest&&n.body&&n.body["newest-versions"]&&n.body["newest-versions"].length>0?n.body["newest-versions"][0]:null}catch{return null}}}gt.IMDS_OPTIONS={headers:{Metadata:"true"}};/*! @azure/msal-common v14.3.0 2023-10-30 */class F{constructor(e,t,n,o,r,i,a){this.canonicalAuthority=e,this._canonicalAuthority.validateAsUri(),this.networkInterface=t,this.cacheManager=n,this.authorityOptions=o,this.regionDiscoveryMetadata={region_used:void 0,region_source:void 0,region_outcome:void 0},this.logger=r,this.performanceClient=i,this.correlationId=a,this.regionDiscovery=new gt(t,this.logger,this.performanceClient,this.correlationId)}getAuthorityType(e){if(e.HostNameAndPort.endsWith(l.CIAM_AUTH_URL))return W.Ciam;const t=e.PathSegments;if(t.length)switch(t[0].toLowerCase()){case l.ADFS:return W.Adfs;case l.DSTS:return W.Dsts}return W.Default}get authorityType(){return this.getAuthorityType(this.canonicalAuthorityUrlComponents)}get protocolMode(){return this.authorityOptions.protocolMode}get options(){return this.authorityOptions}get canonicalAuthority(){return this._canonicalAuthority.urlString}set canonicalAuthority(e){this._canonicalAuthority=new _(e),this._canonicalAuthority.validateAsUri(),this._canonicalAuthorityUrlComponents=null}get canonicalAuthorityUrlComponents(){return this._canonicalAuthorityUrlComponents||(this._canonicalAuthorityUrlComponents=this._canonicalAuthority.getUrlComponents()),this._canonicalAuthorityUrlComponents}get hostnameAndPort(){return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase()}get tenant(){return this.canonicalAuthorityUrlComponents.PathSegments[0]}get authorizationEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.authorization_endpoint);throw g(re)}get tokenEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint);throw g(re)}get deviceCodeEndpoint(){if(this.discoveryComplete())return this.replacePath(this.metadata.token_endpoint.replace("/token","/devicecode"));throw g(re)}get endSessionEndpoint(){if(this.discoveryComplete()){if(!this.metadata.end_session_endpoint)throw g(co);return this.replacePath(this.metadata.end_session_endpoint)}else throw g(re)}get selfSignedJwtAudience(){if(this.discoveryComplete())return this.replacePath(this.metadata.issuer);throw g(re)}get jwksUri(){if(this.discoveryComplete())return this.replacePath(this.metadata.jwks_uri);throw g(re)}canReplaceTenant(e){return e.PathSegments.length===1&&!F.reservedTenantDomains.has(e.PathSegments[0])&&this.getAuthorityType(e)===W.Default&&this.protocolMode===ae.AAD}replaceTenant(e){return e.replace(/{tenant}|{tenantid}/g,this.tenant)}replacePath(e){let t=e;const o=new _(this.metadata.canonical_authority).getUrlComponents(),r=o.PathSegments;return this.canonicalAuthorityUrlComponents.PathSegments.forEach((a,c)=>{let h=r[c];if(c===0&&this.canReplaceTenant(o)){const u=new _(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];h!==u&&(this.logger.verbose(`Replacing tenant domain name ${h} with id ${u}`),h=u)}a!==h&&(t=t.replace(`/${h}/`,`/${a}/`))}),this.replaceTenant(t)}get defaultOpenIdConfigurationEndpoint(){const e=this.hostnameAndPort;return this.canonicalAuthority.endsWith("v2.0/")||this.authorityType===W.Adfs||this.protocolMode!==ae.AAD&&!this.isAliasOfKnownMicrosoftAuthority(e)?`${this.canonicalAuthority}.well-known/openid-configuration`:`${this.canonicalAuthority}v2.0/.well-known/openid-configuration`}discoveryComplete(){return!!this.metadata}async resolveEndpointsAsync(){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(d.AuthorityResolveEndpointsAsync,this.correlationId);const e=this.getCurrentMetadataEntity(),t=await p(this.updateCloudDiscoveryMetadata.bind(this),d.AuthorityUpdateCloudDiscoveryMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.canonicalAuthority=this.canonicalAuthority.replace(this.hostnameAndPort,e.preferred_network);const n=await p(this.updateEndpointMetadata.bind(this),d.AuthorityUpdateEndpointMetadata,this.logger,this.performanceClient,this.correlationId)(e);this.updateCachedMetadata(e,t,{source:n})}getCurrentMetadataEntity(){let e=this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);return e||(e=new Pt,e.updateCanonicalAuthority(this.canonicalAuthority)),e}updateCachedMetadata(e,t,n){t!==z.CACHE&&(n==null?void 0:n.source)!==z.CACHE&&(e.resetExpiresAt(),e.updateCanonicalAuthority(this.canonicalAuthority));const o=this.cacheManager.generateAuthorityMetadataCacheKey(e.preferred_cache);this.cacheManager.setAuthorityMetadata(o,e),this.metadata=e}async updateEndpointMetadata(e){var o,r,i;(o=this.performanceClient)==null||o.addQueueMeasurement(d.AuthorityUpdateEndpointMetadata,this.correlationId);const t=this.updateEndpointMetadataFromLocalSources(e);if(t){if(t.source===z.HARDCODED_VALUES&&(r=this.authorityOptions.azureRegionConfiguration)!=null&&r.azureRegion&&t.metadata){const a=await p(this.updateMetadataWithRegionalInformation.bind(this),d.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(t.metadata);e.updateEndpointMetadata(a,!1)}return t.source}let n=await p(this.getEndpointMetadataFromNetwork.bind(this),d.AuthorityGetEndpointMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return(i=this.authorityOptions.azureRegionConfiguration)!=null&&i.azureRegion&&(n=await p(this.updateMetadataWithRegionalInformation.bind(this),d.AuthorityUpdateMetadataWithRegionalInformation,this.logger,this.performanceClient,this.correlationId)(n)),e.updateEndpointMetadata(n,!0),z.NETWORK;throw g(Wn,this.defaultOpenIdConfigurationEndpoint)}updateEndpointMetadataFromLocalSources(e){this.logger.verbose("Attempting to get endpoint metadata from authority configuration");const t=this.getEndpointMetadataFromConfig();if(t)return this.logger.verbose("Found endpoint metadata in authority configuration"),e.updateEndpointMetadata(t,!1),{source:z.CONFIG};if(this.logger.verbose("Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values."),this.authorityOptions.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.");else{const o=this.getEndpointMetadataFromHardcodedValues();if(o)return e.updateEndpointMetadata(o,!1),{source:z.HARDCODED_VALUES,metadata:o};this.logger.verbose("Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.")}const n=e.isExpired();return this.isAuthoritySameType(e)&&e.endpointsFromNetwork&&!n?(this.logger.verbose("Found endpoint metadata in the cache."),{source:z.CACHE}):(n&&this.logger.verbose("The metadata entity is expired."),null)}isAuthoritySameType(e){return new _(e.canonical_authority).getUrlComponents().PathSegments.length===this.canonicalAuthorityUrlComponents.PathSegments.length}getEndpointMetadataFromConfig(){if(this.authorityOptions.authorityMetadata)try{return JSON.parse(this.authorityOptions.authorityMetadata)}catch{throw k(To)}return null}async getEndpointMetadataFromNetwork(){var n;(n=this.performanceClient)==null||n.addQueueMeasurement(d.AuthorityGetEndpointMetadataFromNetwork,this.correlationId);const e={},t=this.defaultOpenIdConfigurationEndpoint;this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${t}`);try{const o=await this.networkInterface.sendGetRequestAsync(t,e);return pi(o.body)?o.body:(this.logger.verbose("Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration"),null)}catch(o){return this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${o}`),null}}getEndpointMetadataFromHardcodedValues(){return this.canonicalAuthority in On?On[this.canonicalAuthority]:null}async updateMetadataWithRegionalInformation(e){var n,o,r;(n=this.performanceClient)==null||n.addQueueMeasurement(d.AuthorityUpdateMetadataWithRegionalInformation,this.correlationId);const t=(o=this.authorityOptions.azureRegionConfiguration)==null?void 0:o.azureRegion;if(t){if(t!==l.AZURE_REGION_AUTO_DISCOVER_FLAG)return this.regionDiscoveryMetadata.region_outcome=yt.CONFIGURED_NO_AUTO_DETECTION,this.regionDiscoveryMetadata.region_used=t,F.replaceWithRegionalInformation(e,t);const i=await p(this.regionDiscovery.detectRegion.bind(this.regionDiscovery),d.RegionDiscoveryDetectRegion,this.logger,this.performanceClient,this.correlationId)((r=this.authorityOptions.azureRegionConfiguration)==null?void 0:r.environmentRegion,this.regionDiscoveryMetadata);if(i)return this.regionDiscoveryMetadata.region_outcome=yt.AUTO_DETECTION_REQUESTED_SUCCESSFUL,this.regionDiscoveryMetadata.region_used=i,F.replaceWithRegionalInformation(e,i);this.regionDiscoveryMetadata.region_outcome=yt.AUTO_DETECTION_REQUESTED_FAILED}return e}async updateCloudDiscoveryMetadata(e){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(d.AuthorityUpdateCloudDiscoveryMetadata,this.correlationId);const t=this.updateCloudDiscoveryMetadataFromLocalSources(e);if(t)return t;const n=await p(this.getCloudDiscoveryMetadataFromNetwork.bind(this),d.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.logger,this.performanceClient,this.correlationId)();if(n)return e.updateCloudDiscoveryMetadata(n,!0),z.NETWORK;throw k(Io)}updateCloudDiscoveryMetadataFromLocalSources(e){this.logger.verbose("Attempting to get cloud discovery metadata  from authority configuration"),this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities||l.NOT_APPLICABLE}`),this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata||l.NOT_APPLICABLE}`),this.logger.verbosePii(`Canonical Authority: ${e.canonical_authority||l.NOT_APPLICABLE}`);const t=this.getCloudDiscoveryMetadataFromConfig();if(t)return this.logger.verbose("Found cloud discovery metadata in authority configuration"),e.updateCloudDiscoveryMetadata(t,!1),z.CONFIG;if(this.logger.verbose("Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values."),this.options.skipAuthorityMetadataCache)this.logger.verbose("Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.");else{const o=ti(this.hostnameAndPort);if(o)return this.logger.verbose("Found cloud discovery metadata from hardcoded values."),e.updateCloudDiscoveryMetadata(o,!1),z.HARDCODED_VALUES;this.logger.verbose("Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.")}const n=e.isExpired();return this.isAuthoritySameType(e)&&e.aliasesFromNetwork&&!n?(this.logger.verbose("Found cloud discovery metadata in the cache."),z.CACHE):(n&&this.logger.verbose("The metadata entity is expired."),null)}getCloudDiscoveryMetadataFromConfig(){if(this.authorityType===W.Ciam)return this.logger.verbose("CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host."),F.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);if(this.authorityOptions.cloudDiscoveryMetadata){this.logger.verbose("The cloud discovery metadata has been provided as a network response, in the config.");try{this.logger.verbose("Attempting to parse the cloud discovery metadata.");const e=JSON.parse(this.authorityOptions.cloudDiscoveryMetadata),t=nt(e.metadata,this.hostnameAndPort);if(this.logger.verbose("Parsed the cloud discovery metadata."),t)return this.logger.verbose("There is returnable metadata attached to the parsed cloud discovery metadata."),t;this.logger.verbose("There is no metadata attached to the parsed cloud discovery metadata.")}catch{throw this.logger.verbose("Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error."),k(Zt)}}return this.isInKnownAuthorities()?(this.logger.verbose("The host is included in knownAuthorities. Creating new cloud discovery metadata from the host."),F.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)):null}async getCloudDiscoveryMetadataFromNetwork(){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(d.AuthorityGetCloudDiscoveryMetadataFromNetwork,this.correlationId);const e=`${l.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`,t={};let n=null;try{const r=await this.networkInterface.sendGetRequestAsync(e,t);let i,a;if(mi(r.body))i=r.body,a=i.metadata,this.logger.verbosePii(`tenant_discovery_endpoint is: ${i.tenant_discovery_endpoint}`);else if(fi(r.body)){if(this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${r.status}`),i=r.body,i.error===l.INVALID_INSTANCE)return this.logger.error("The CloudInstanceDiscoveryErrorResponse error is invalid_instance."),null;this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${i.error}`),this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${i.error_description}`),this.logger.warning("Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []"),a=[]}else return this.logger.error("AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse"),null;this.logger.verbose("Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request."),n=nt(a,this.hostnameAndPort)}catch(r){if(r instanceof N)this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.
Error: ${r.errorCode}
Error Description: ${r.errorMessage}`);else{const i=r;this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.
Error: ${i.name}
Error Description: ${i.message}`)}return null}return n||(this.logger.warning("The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request."),this.logger.verbose("Creating custom Authority for custom domain scenario."),n=F.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort)),n}isInKnownAuthorities(){return this.authorityOptions.knownAuthorities.filter(t=>_.getDomainFromUrl(t).toLowerCase()===this.hostnameAndPort).length>0}static generateAuthority(e,t){let n;if(t&&t.azureCloudInstance!==Qt.None){const o=t.tenant?t.tenant:l.DEFAULT_COMMON_TENANT;n=`${t.azureCloudInstance}/${o}/`}return n||e}static createCloudDiscoveryMetadataFromHost(e){return{preferred_network:e,preferred_cache:e,aliases:[e]}}getPreferredCache(){if(this.discoveryComplete())return this.metadata.preferred_cache;throw g(re)}isAlias(e){return this.metadata.aliases.indexOf(e)>-1}isAliasOfKnownMicrosoftAuthority(e){return Ro.has(e)}static isPublicCloudAuthority(e){return l.KNOWN_PUBLIC_CLOUDS.indexOf(e)>=0}static buildRegionalAuthorityString(e,t,n){const o=new _(e);o.validateAsUri();const r=o.getUrlComponents();let i=`${t}.${r.HostNameAndPort}`;this.isPublicCloudAuthority(r.HostNameAndPort)&&(i=`${t}.${l.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`);const a=_.constructAuthorityUriFromObject({...o.getUrlComponents(),HostNameAndPort:i}).urlString;return n?`${a}?${n}`:a}static replaceWithRegionalInformation(e,t){const n={...e};return n.authorization_endpoint=F.buildRegionalAuthorityString(n.authorization_endpoint,t),n.token_endpoint=F.buildRegionalAuthorityString(n.token_endpoint,t,l.REGIONAL_AUTH_NON_MSI_QUERY_STRING),n.end_session_endpoint&&(n.end_session_endpoint=F.buildRegionalAuthorityString(n.end_session_endpoint,t)),n}static transformCIAMAuthority(e){let t=e;const o=new _(e).getUrlComponents();if(o.PathSegments.length===0&&o.HostNameAndPort.endsWith(l.CIAM_AUTH_URL)){const r=o.HostNameAndPort.split(".")[0];t=`${t}${r}${l.AAD_TENANT_DOMAIN_SUFFIX}`}return t}}F.reservedTenantDomains=new Set(["{tenant}","{tenantid}",Ke.COMMON,Ke.CONSUMERS,Ke.ORGANIZATIONS]);function bo(s){return s.endsWith(l.FORWARD_SLASH)?s:`${s}${l.FORWARD_SLASH}`}function _i(s){const e=s.cloudDiscoveryMetadata;let t;if(e)try{t=JSON.parse(e)}catch{throw k(Zt)}return{canonicalAuthority:s.authority?bo(s.authority):void 0,knownAuthorities:s.knownAuthorities,cloudDiscoveryMetadata:t}}/*! @azure/msal-common v14.3.0 2023-10-30 */class ye{static async createDiscoveredInstance(e,t,n,o,r,i,a){i==null||i.addQueueMeasurement(d.AuthorityFactoryCreateDiscoveredInstance,a);const c=F.transformCIAMAuthority(bo(e)),h=ye.createInstance(c,t,n,o,r,i,a);try{return await p(h.resolveEndpointsAsync.bind(h),d.AuthorityResolveEndpointsAsync,r,i,a)(),h}catch{throw g(re)}}static createInstance(e,t,n,o,r,i,a){if(!e)throw k(Wt);return new F(e,t,n,o,r,i,a)}}/*! @azure/msal-common v14.3.0 2023-10-30 */class nn{constructor(e,t){this.config=di(e),this.logger=new _e(this.config.loggerOptions,ho,Vt),this.cryptoUtils=this.config.cryptoInterface,this.cacheManager=this.config.storageInterface,this.networkClient=this.config.networkInterface,this.networkManager=new gi(this.networkClient,this.cacheManager),this.serverTelemetryManager=this.config.serverTelemetryManager,this.authority=this.config.authOptions.authority,this.performanceClient=t}createTokenRequestHeaders(e){const t={};if(t[ee.CONTENT_TYPE]=l.URL_FORM_CONTENT_TYPE,!this.config.systemOptions.preventCorsPreflight&&e)switch(e.type){case Y.HOME_ACCOUNT_ID:try{const n=ke(e.credential);t[ee.CCS_HEADER]=`Oid:${n.uid}@${n.utid}`}catch(n){this.logger.verbose("Could not parse home account ID for CCS Header: "+n)}break;case Y.UPN:t[ee.CCS_HEADER]=`UPN: ${e.credential}`;break}return t}async executePostToTokenEndpoint(e,t,n,o,r,i){var c,h,u,f;i&&((c=this.performanceClient)==null||c.addQueueMeasurement(i,r));const a=await this.networkManager.sendPostRequest(o,e,{body:t,headers:n});return(f=this.performanceClient)==null||f.addFields({refreshTokenSize:((h=a.body.refresh_token)==null?void 0:h.length)||0,httpVerToken:((u=a.headers)==null?void 0:u[ee.X_MS_HTTP_VERSION])||""},r),this.config.serverTelemetryManager&&a.status<500&&a.status!==429&&this.config.serverTelemetryManager.clearTelemetryCache(),a}async updateAuthority(e,t){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(d.UpdateTokenEndpointAuthority,t);const n=`https://${e}/${this.authority.tenant}/`,o=await ye.createDiscoveredInstance(n,this.networkClient,this.cacheManager,this.authority.options,this.logger,this.performanceClient,t);this.authority=o}createTokenQueryParameters(e){const t=new Ge;return e.tokenQueryParameters&&t.addExtraQueryParameters(e.tokenQueryParameters),t.createQueryString()}}/*! @azure/msal-common v14.3.0 2023-10-30 */const ot="no_tokens_found",Oo="native_account_unavailable",yi="interaction_required",Ti="consent_required",Ii="login_required";/*! @azure/msal-common v14.3.0 2023-10-30 */const Pn=[yi,Ti,Ii],Ei=["message_only","additional_action","basic_action","user_password_expired","consent_required"],Ai={[ot]:"No refresh token found in the cache. Please sign-in.",[Oo]:"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API."};class ne extends N{constructor(e,t,n,o,r,i,a){super(e,t,n),Object.setPrototypeOf(this,ne.prototype),this.timestamp=o||l.EMPTY_STRING,this.traceId=r||l.EMPTY_STRING,this.correlationId=i||l.EMPTY_STRING,this.claims=a||l.EMPTY_STRING,this.name="InteractionRequiredAuthError"}}function Mn(s,e,t){const n=!!s&&Pn.indexOf(s)>-1,o=!!t&&Ei.indexOf(t)>-1,r=!!e&&Pn.some(i=>e.indexOf(i)>-1);return n||r||o}function No(s){return new ne(s,Ai[s])}/*! @azure/msal-common v14.3.0 2023-10-30 */class be{constructor(e,t,n,o,r){this.account=e||null,this.idToken=t||null,this.accessToken=n||null,this.refreshToken=o||null,this.appMetadata=r||null}}/*! @azure/msal-common v14.3.0 2023-10-30 */class X{static setRequestState(e,t,n){const o=X.generateLibraryState(e,n);return t?`${o}${l.RESOURCE_DELIM}${t}`:o}static generateLibraryState(e,t){if(!e)throw g(kt);const n={id:e.createNewGuid()};t&&(n.meta=t);const o=JSON.stringify(n);return e.base64Encode(o)}static parseRequestState(e,t){if(!e)throw g(kt);if(!t)throw g(Ne);try{const n=t.split(l.RESOURCE_DELIM),o=n[0],r=n.length>1?n.slice(1).join(l.RESOURCE_DELIM):l.EMPTY_STRING,i=e.base64Decode(o),a=JSON.parse(i);return{userRequestState:r||l.EMPTY_STRING,libraryState:a}}catch{throw g(Ne)}}}/*! @azure/msal-common v14.3.0 2023-10-30 */const Si={SW:"sw",UHW:"uhw"};class Pe{constructor(e,t){this.cryptoUtils=e,this.performanceClient=t}async generateCnf(e,t){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(d.PopTokenGenerateCnf,e.correlationId);const n=await p(this.generateKid.bind(this),d.PopTokenGenerateCnf,t,this.performanceClient,e.correlationId)(e),o=this.cryptoUtils.base64Encode(JSON.stringify(n));return{kid:n.kid,reqCnfString:o,reqCnfHash:await this.cryptoUtils.hashString(o)}}async generateKid(e){var n;return(n=this.performanceClient)==null||n.addQueueMeasurement(d.PopTokenGenerateKid,e.correlationId),{kid:await this.cryptoUtils.getPublicKeyThumbprint(e),xms_ksl:Si.SW}}async signPopToken(e,t,n){return this.signPayload(e,t,n)}async signPayload(e,t,n,o){const{resourceRequestMethod:r,resourceRequestUri:i,shrClaims:a,shrNonce:c}=n,h=i?new _(i):void 0,u=h==null?void 0:h.getUrlComponents();return await this.cryptoUtils.signJwt({at:e,ts:x.nowSeconds(),m:r==null?void 0:r.toUpperCase(),u:u==null?void 0:u.HostNameAndPort,nonce:c||this.cryptoUtils.createNewGuid(),p:u==null?void 0:u.AbsolutePath,q:u!=null&&u.QueryString?[[],u.QueryString]:void 0,client_claims:a||void 0,...o},t,n.correlationId)}}/*! @azure/msal-common v14.3.0 2023-10-30 */class Me{generateAppMetadataKey(){return Me.generateAppMetadataCacheKey(this.environment,this.clientId)}static generateAppMetadataCacheKey(e,t){return[St,e,t].join(K.CACHE_KEY_SEPARATOR).toLowerCase()}static createAppMetadataEntity(e,t,n){const o=new Me;return o.clientId=e,o.environment=t,n&&(o.familyId=n),o}static isAppMetadataEntity(e,t){return t?e.indexOf(St)===0&&t.hasOwnProperty("clientId")&&t.hasOwnProperty("environment"):!1}}/*! @azure/msal-common v14.3.0 2023-10-30 */class vi{constructor(e,t){this.cache=e,this.hasChanged=t}get cacheHasChanged(){return this.hasChanged}get tokenCache(){return this.cache}}/*! @azure/msal-common v14.3.0 2023-10-30 */class Te{constructor(e,t,n,o,r,i,a){this.clientId=e,this.cacheStorage=t,this.cryptoObj=n,this.logger=o,this.serializableCache=r,this.persistencePlugin=i,this.performanceClient=a}validateServerAuthorizationCodeResponse(e,t){if(!e.state||!t)throw e.state?g(et,"Cached State"):g(et,"Server State");let n,o;try{n=decodeURIComponent(e.state)}catch{throw g(Ne,e.state)}try{o=decodeURIComponent(t)}catch{throw g(Ne,e.state)}if(n!==o)throw g(Jn);if(e.error||e.error_description||e.suberror)throw Mn(e.error,e.error_description,e.suberror)?new ne(e.error||"",e.error_description,e.suberror,e.timestamp||"",e.trace_id||"",e.correlation_id||"",e.claims||""):new ge(e.error||"",e.error_description,e.suberror)}validateTokenResponse(e,t){if(e.error||e.error_description||e.suberror){const n=`${e.error_codes} - [${e.timestamp}]: ${e.error_description} - Correlation ID: ${e.correlation_id} - Trace ID: ${e.trace_id}`,o=new ge(e.error,n,e.suberror);if(t&&e.status&&e.status>=je.SERVER_ERROR_RANGE_START&&e.status<=je.SERVER_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.
${o}`);return}else if(t&&e.status&&e.status>=je.CLIENT_ERROR_RANGE_START&&e.status<=je.CLIENT_ERROR_RANGE_END){this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.
${o}`);return}throw Mn(e.error,e.error_description,e.suberror)?new ne(e.error,e.error_description,e.suberror,e.timestamp||l.EMPTY_STRING,e.trace_id||l.EMPTY_STRING,e.correlation_id||l.EMPTY_STRING,e.claims||l.EMPTY_STRING):o}}async handleServerTokenResponse(e,t,n,o,r,i,a,c,h){var O;(O=this.performanceClient)==null||O.addQueueMeasurement(d.HandleServerTokenResponse,e.correlation_id);let u;if(e.id_token){if(u=ue(e.id_token||l.EMPTY_STRING,this.cryptoObj.base64Decode),r&&r.nonce&&u.nonce!==r.nonce)throw g(Xn);if(o.maxAge||o.maxAge===0){const w=u.auth_time;if(!w)throw g(qt);lo(w,o.maxAge)}}this.homeAccountIdentifier=P.generateHomeAccountId(e.client_info||l.EMPTY_STRING,t.authorityType,this.logger,this.cryptoObj,u);let f;r&&r.state&&(f=X.parseRequestState(this.cryptoObj,r.state)),e.key_id=e.key_id||o.sshKid||void 0;const E=this.generateCacheRecord(e,t,n,o,u,i,r);let S;try{if(this.persistencePlugin&&this.serializableCache&&(this.logger.verbose("Persistence enabled, calling beforeCacheAccess"),S=new vi(this.serializableCache,!0),await this.persistencePlugin.beforeCacheAccess(S)),a&&!c&&E.account){const w=E.account.generateAccountKey();if(!this.cacheStorage.getAccount(w))return this.logger.warning("Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache"),Te.generateAuthenticationResult(this.cryptoObj,t,E,!1,o,u,f,void 0,h)}await this.cacheStorage.saveCacheRecord(E,o.storeInCache)}finally{this.persistencePlugin&&this.serializableCache&&S&&(this.logger.verbose("Persistence enabled, calling afterCacheAccess"),await this.persistencePlugin.afterCacheAccess(S))}return Te.generateAuthenticationResult(this.cryptoObj,t,E,!1,o,u,f,e,h)}generateCacheRecord(e,t,n,o,r,i,a){const c=t.getPreferredCache();if(!c)throw g($t);let h,u;e.id_token&&r&&(h=lt(this.homeAccountIdentifier,c,e.id_token,this.clientId,r.tid||""),u=P.createAccount({homeAccountId:this.homeAccountIdentifier,idTokenClaims:r,clientInfo:e.client_info,cloudGraphHostName:a==null?void 0:a.cloud_graph_host_name,msGraphHost:a==null?void 0:a.msgraph_host},t));let f=null;if(e.access_token){const O=e.scope?M.fromString(e.scope):new M(o.scopes||[]),w=(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,q=(typeof e.ext_expires_in=="string"?parseInt(e.ext_expires_in,10):e.ext_expires_in)||0,Q=(typeof e.refresh_in=="string"?parseInt(e.refresh_in,10):e.refresh_in)||void 0,G=n+w,Ae=G+q,Qe=Q&&Q>0?n+Q:void 0;f=dt(this.homeAccountIdentifier,c,e.access_token,this.clientId,(r==null?void 0:r.tid)||t.tenant,O.printScopes(),G,Ae,this.cryptoObj.base64Decode,Qe,e.token_type,i,e.key_id,o.claims,o.requestedClaimsHash)}let E=null;e.refresh_token&&(E=uo(this.homeAccountIdentifier,c,e.refresh_token,this.clientId,e.foci,i));let S=null;return e.foci&&(S=Me.createAppMetadataEntity(this.clientId,c,e.foci)),new be(u,h,f,E,S)}static async generateAuthenticationResult(e,t,n,o,r,i,a,c,h){var Ae,Qe,Cn,_n;let u=l.EMPTY_STRING,f=[],E=null,S,O,w=l.EMPTY_STRING;if(n.accessToken){if(n.accessToken.tokenType===R.POP){const Ar=new Pe(e),{secret:Sr,keyId:yn}=n.accessToken;if(!yn)throw g(Yt);u=await Ar.signPopToken(Sr,yn,r)}else u=n.accessToken.secret;f=M.fromString(n.accessToken.target).asArray(),E=new Date(Number(n.accessToken.expiresOn)*1e3),S=new Date(Number(n.accessToken.extendedExpiresOn)*1e3),n.accessToken.refreshOn&&(O=new Date(Number(n.accessToken.refreshOn)*1e3))}n.appMetadata&&(w=n.appMetadata.familyId===Fe?Fe:"");const q=(i==null?void 0:i.oid)||(i==null?void 0:i.sub)||"",Q=(i==null?void 0:i.tid)||"";c!=null&&c.spa_accountid&&n.account&&(n.account.nativeAccountId=c==null?void 0:c.spa_accountid);const G=n.account?{...n.account.getAccountInfo(),idTokenClaims:i}:null;return{authority:t.canonicalAuthority,uniqueId:q,tenantId:Q,scopes:f,account:G,idToken:((Ae=n==null?void 0:n.idToken)==null?void 0:Ae.secret)||"",idTokenClaims:i||{},accessToken:u,fromCache:o,expiresOn:E,extExpiresOn:S,refreshOn:O,correlationId:r.correlationId,requestId:h||l.EMPTY_STRING,familyId:w,tokenType:((Qe=n.accessToken)==null?void 0:Qe.tokenType)||l.EMPTY_STRING,state:a?a.userRequestState:l.EMPTY_STRING,cloudGraphHostName:((Cn=n.account)==null?void 0:Cn.cloudGraphHostName)||l.EMPTY_STRING,msGraphHost:((_n=n.account)==null?void 0:_n.msGraphHost)||l.EMPTY_STRING,code:c==null?void 0:c.spa_code,fromNativeBroker:!1}}}/*! @azure/msal-common v14.3.0 2023-10-30 */class Po extends nn{constructor(e,t){var n;super(e,t),this.includeRedirectUri=!0,this.oidcDefaultScopes=(n=this.config.authOptions.authority.options.OIDCOptions)==null?void 0:n.defaultScopes}async getAuthCodeUrl(e){var n;(n=this.performanceClient)==null||n.addQueueMeasurement(d.GetAuthCodeUrl,e.correlationId);const t=await p(this.createAuthCodeUrlQueryString.bind(this),d.AuthClientCreateQueryString,this.logger,this.performanceClient,e.correlationId)(e);return _.appendQueryString(this.authority.authorizationEndpoint,t)}async acquireToken(e,t){var a,c;if((a=this.performanceClient)==null||a.addQueueMeasurement(d.AuthClientAcquireToken,e.correlationId),!e.code)throw g(to);const n=x.nowSeconds(),o=await p(this.executeTokenRequest.bind(this),d.AuthClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(this.authority,e),r=(c=o.headers)==null?void 0:c[ee.X_MS_REQUEST_ID],i=new Te(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin,this.performanceClient);return i.validateTokenResponse(o.body),p(i.handleServerTokenResponse.bind(i),d.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(o.body,this.authority,n,e,t,void 0,void 0,void 0,r)}handleFragmentResponse(e,t){var r;const n=new Te(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,null,null),o=_.getDeserializedCodeResponse((r=this.config.authOptions.authority.options.OIDCOptions)==null?void 0:r.serverResponseType,e);if(n.validateServerAuthorizationCodeResponse(o,t),!o.code)throw g(so);return{...o,code:o.code}}getLogoutUri(e){if(!e)throw k(_o);const t=this.createLogoutUrlQueryString(e);return _.appendQueryString(this.authority.endSessionEndpoint,t)}async executeTokenRequest(e,t){var h,u;(h=this.performanceClient)==null||h.addQueueMeasurement(d.AuthClientExecuteTokenRequest,t.correlationId);const n=this.createTokenQueryParameters(t),o=_.appendQueryString(e.tokenEndpoint,n),r=await p(this.createTokenRequestBody.bind(this),d.AuthClientCreateTokenRequestBody,this.logger,this.performanceClient,t.correlationId)(t);let i;if(t.clientInfo)try{const f=Ot(t.clientInfo,this.cryptoUtils);i={credential:`${f.uid}${K.CLIENT_INFO_SEPARATOR}${f.utid}`,type:Y.HOME_ACCOUNT_ID}}catch(f){this.logger.verbose("Could not parse client info for CCS Header: "+f)}const a=this.createTokenRequestHeaders(i||t.ccsCredential),c={clientId:((u=t.tokenBodyParameters)==null?void 0:u.clientId)||this.config.authOptions.clientId,authority:e.canonicalAuthority,scopes:t.scopes,claims:t.claims,authenticationScheme:t.authenticationScheme,resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,sshKid:t.sshKid};return p(this.executePostToTokenEndpoint.bind(this),d.AuthorizationCodeClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,t.correlationId)(o,r,a,c,t.correlationId,d.AuthorizationCodeClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){var r,i;(r=this.performanceClient)==null||r.addQueueMeasurement(d.AuthClientCreateTokenRequestBody,e.correlationId);const t=new Ge;if(t.addClientId(((i=e.tokenBodyParameters)==null?void 0:i[T.CLIENT_ID])||this.config.authOptions.clientId),this.includeRedirectUri?t.addRedirectUri(e.redirectUri):fe.validateRedirectUri(e.redirectUri),t.addScopes(e.scopes,!0,this.oidcDefaultScopes),t.addAuthorizationCode(e.code),t.addLibraryInfo(this.config.libraryInfo),t.addApplicationTelemetry(this.config.telemetry.application),t.addThrottling(),this.serverTelemetryManager&&!Nt(this.config)&&t.addServerTelemetry(this.serverTelemetryManager),e.codeVerifier&&t.addCodeVerifier(e.codeVerifier),this.config.clientCredentials.clientSecret&&t.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const a=this.config.clientCredentials.clientAssertion;t.addClientAssertion(a.assertion),t.addClientAssertionType(a.assertionType)}if(t.addGrantType($n.AUTHORIZATION_CODE_GRANT),t.addClientInfo(),e.authenticationScheme===R.POP){const a=new Pe(this.cryptoUtils,this.performanceClient),c=await p(a.generateCnf.bind(a),d.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger);t.addPopToken(c.reqCnfString)}else if(e.authenticationScheme===R.SSH)if(e.sshJwk)t.addSshJwk(e.sshJwk);else throw k(ut);const n=e.correlationId||this.config.cryptoInterface.createNewGuid();t.addCorrelationId(n),(!$.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities);let o;if(e.clientInfo)try{const a=Ot(e.clientInfo,this.cryptoUtils);o={credential:`${a.uid}${K.CLIENT_INFO_SEPARATOR}${a.utid}`,type:Y.HOME_ACCOUNT_ID}}catch(a){this.logger.verbose("Could not parse client info for CCS Header: "+a)}else o=e.ccsCredential;if(this.config.systemOptions.preventCorsPreflight&&o)switch(o.type){case Y.HOME_ACCOUNT_ID:try{const a=ke(o.credential);t.addCcsOid(a)}catch(a){this.logger.verbose("Could not parse home account ID for CCS Header: "+a)}break;case Y.UPN:t.addCcsUpn(o.credential);break}return e.tokenBodyParameters&&t.addExtraQueryParameters(e.tokenBodyParameters),e.enableSpaAuthorizationCode&&(!e.tokenBodyParameters||!e.tokenBodyParameters[T.RETURN_SPA_CODE])&&t.addExtraQueryParameters({[T.RETURN_SPA_CODE]:"1"}),t.createQueryString()}async createAuthCodeUrlQueryString(e){var r,i;(r=this.performanceClient)==null||r.addQueueMeasurement(d.AuthClientCreateQueryString,e.correlationId);const t=new Ge;t.addClientId(((i=e.extraQueryParameters)==null?void 0:i[T.CLIENT_ID])||this.config.authOptions.clientId);const n=[...e.scopes||[],...e.extraScopesToConsent||[]];t.addScopes(n,!0,this.oidcDefaultScopes),t.addRedirectUri(e.redirectUri);const o=e.correlationId||this.config.cryptoInterface.createNewGuid();if(t.addCorrelationId(o),t.addResponseMode(e.responseMode),t.addResponseTypeCode(),t.addLibraryInfo(this.config.libraryInfo),Nt(this.config)||t.addApplicationTelemetry(this.config.telemetry.application),t.addClientInfo(),e.codeChallenge&&e.codeChallengeMethod&&t.addCodeChallengeParams(e.codeChallenge,e.codeChallengeMethod),e.prompt&&t.addPrompt(e.prompt),e.domainHint&&t.addDomainHint(e.domainHint),e.prompt!==B.SELECT_ACCOUNT)if(e.sid&&e.prompt===B.NONE)this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from request"),t.addSid(e.sid);else if(e.account){const a=this.extractAccountSid(e.account),c=this.extractLoginHint(e.account);if(c){this.logger.verbose("createAuthCodeUrlQueryString: login_hint claim present on account"),t.addLoginHint(c);try{const h=ke(e.account.homeAccountId);t.addCcsOid(h)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(a&&e.prompt===B.NONE){this.logger.verbose("createAuthCodeUrlQueryString: Prompt is none, adding sid from account"),t.addSid(a);try{const h=ke(e.account.homeAccountId);t.addCcsOid(h)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}else if(e.loginHint)this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint);else if(e.account.username){this.logger.verbose("createAuthCodeUrlQueryString: Adding login_hint from account"),t.addLoginHint(e.account.username);try{const h=ke(e.account.homeAccountId);t.addCcsOid(h)}catch{this.logger.verbose("createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header")}}}else e.loginHint&&(this.logger.verbose("createAuthCodeUrlQueryString: No account, adding login_hint from request"),t.addLoginHint(e.loginHint),t.addCcsUpn(e.loginHint));else this.logger.verbose("createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints");if(e.nonce&&t.addNonce(e.nonce),e.state&&t.addState(e.state),(e.claims||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&t.addClaims(e.claims,this.config.authOptions.clientCapabilities),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),e.nativeBroker&&(t.addNativeBroker(),e.authenticationScheme===R.POP)){const a=new Pe(this.cryptoUtils),c=await p(a.generateCnf.bind(a),d.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger);t.addPopToken(c.reqCnfHash)}return t.createQueryString()}createLogoutUrlQueryString(e){const t=new Ge;return e.postLogoutRedirectUri&&t.addPostLogoutRedirectUri(e.postLogoutRedirectUri),e.correlationId&&t.addCorrelationId(e.correlationId),e.idTokenHint&&t.addIdTokenHint(e.idTokenHint),e.state&&t.addState(e.state),e.logoutHint&&t.addLogoutHint(e.logoutHint),e.extraQueryParameters&&t.addExtraQueryParameters(e.extraQueryParameters),t.createQueryString()}extractAccountSid(e){var t;return((t=e.idTokenClaims)==null?void 0:t.sid)||null}extractLoginHint(e){var t;return((t=e.idTokenClaims)==null?void 0:t.login_hint)||null}}/*! @azure/msal-common v14.3.0 2023-10-30 */class Mt extends nn{constructor(e,t){super(e,t)}async acquireToken(e){var i,a;(i=this.performanceClient)==null||i.addQueueMeasurement(d.RefreshTokenClientAcquireToken,e.correlationId);const t=x.nowSeconds(),n=await p(this.executeTokenRequest.bind(this),d.RefreshTokenClientExecuteTokenRequest,this.logger,this.performanceClient,e.correlationId)(e,this.authority),o=(a=n.headers)==null?void 0:a[ee.X_MS_REQUEST_ID],r=new Te(this.config.authOptions.clientId,this.cacheManager,this.cryptoUtils,this.logger,this.config.serializableCache,this.config.persistencePlugin);return r.validateTokenResponse(n.body),p(r.handleServerTokenResponse.bind(r),d.HandleServerTokenResponse,this.logger,this.performanceClient,e.correlationId)(n.body,this.authority,t,e,void 0,void 0,!0,e.forceCache,o)}async acquireTokenByRefreshToken(e){var n;if(!e)throw k(Co);if((n=this.performanceClient)==null||n.addQueueMeasurement(d.RefreshTokenClientAcquireTokenByRefreshToken,e.correlationId),!e.account)throw g(zt);if(this.cacheManager.isAppMetadataFOCI(e.account.environment))try{return p(this.acquireTokenWithCachedRefreshToken.bind(this),d.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!0)}catch(o){const r=o instanceof ne&&o.errorCode===ot,i=o instanceof ge&&o.errorCode===An.INVALID_GRANT_ERROR&&o.subError===An.CLIENT_MISMATCH_ERROR;if(r||i)return p(this.acquireTokenWithCachedRefreshToken.bind(this),d.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1);throw o}return p(this.acquireTokenWithCachedRefreshToken.bind(this),d.RefreshTokenClientAcquireTokenWithCachedRefreshToken,this.logger,this.performanceClient,e.correlationId)(e,!1)}async acquireTokenWithCachedRefreshToken(e,t){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(d.RefreshTokenClientAcquireTokenWithCachedRefreshToken,e.correlationId);const n=$e(this.cacheManager.getRefreshToken.bind(this.cacheManager),d.CacheManagerGetRefreshToken,this.logger,this.performanceClient,e.correlationId)(e.account,t);if(!n)throw No(ot);const o={...e,refreshToken:n.secret,authenticationScheme:e.authenticationScheme||R.BEARER,ccsCredential:{credential:e.account.homeAccountId,type:Y.HOME_ACCOUNT_ID}};return p(this.acquireToken.bind(this),d.RefreshTokenClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(o)}async executeTokenRequest(e,t){var c,h;(c=this.performanceClient)==null||c.addQueueMeasurement(d.RefreshTokenClientExecuteTokenRequest,e.correlationId);const n=this.createTokenQueryParameters(e),o=_.appendQueryString(t.tokenEndpoint,n),r=await p(this.createTokenRequestBody.bind(this),d.RefreshTokenClientCreateTokenRequestBody,this.logger,this.performanceClient,e.correlationId)(e),i=this.createTokenRequestHeaders(e.ccsCredential),a={clientId:((h=e.tokenBodyParameters)==null?void 0:h.clientId)||this.config.authOptions.clientId,authority:t.canonicalAuthority,scopes:e.scopes,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid};return p(this.executePostToTokenEndpoint.bind(this),d.RefreshTokenClientExecutePostToTokenEndpoint,this.logger,this.performanceClient,e.correlationId)(o,r,i,a,e.correlationId,d.RefreshTokenClientExecutePostToTokenEndpoint)}async createTokenRequestBody(e){var o,r,i;(o=this.performanceClient)==null||o.addQueueMeasurement(d.RefreshTokenClientCreateTokenRequestBody,e.correlationId);const t=e.correlationId,n=new Ge;if(n.addClientId(((r=e.tokenBodyParameters)==null?void 0:r[T.CLIENT_ID])||this.config.authOptions.clientId),e.redirectUri&&n.addRedirectUri(e.redirectUri),n.addScopes(e.scopes,!0,(i=this.config.authOptions.authority.options.OIDCOptions)==null?void 0:i.defaultScopes),n.addGrantType($n.REFRESH_TOKEN_GRANT),n.addClientInfo(),n.addLibraryInfo(this.config.libraryInfo),n.addApplicationTelemetry(this.config.telemetry.application),n.addThrottling(),this.serverTelemetryManager&&!Nt(this.config)&&n.addServerTelemetry(this.serverTelemetryManager),n.addCorrelationId(t),n.addRefreshToken(e.refreshToken),this.config.clientCredentials.clientSecret&&n.addClientSecret(this.config.clientCredentials.clientSecret),this.config.clientCredentials.clientAssertion){const a=this.config.clientCredentials.clientAssertion;n.addClientAssertion(a.assertion),n.addClientAssertionType(a.assertionType)}if(e.authenticationScheme===R.POP){const a=new Pe(this.cryptoUtils,this.performanceClient),c=await p(a.generateCnf.bind(a),d.PopTokenGenerateCnf,this.logger,this.performanceClient,e.correlationId)(e,this.logger);n.addPopToken(c.reqCnfString)}else if(e.authenticationScheme===R.SSH)if(e.sshJwk)n.addSshJwk(e.sshJwk);else throw k(ut);if((!$.isEmptyObj(e.claims)||this.config.authOptions.clientCapabilities&&this.config.authOptions.clientCapabilities.length>0)&&n.addClaims(e.claims,this.config.authOptions.clientCapabilities),this.config.systemOptions.preventCorsPreflight&&e.ccsCredential)switch(e.ccsCredential.type){case Y.HOME_ACCOUNT_ID:try{const a=ke(e.ccsCredential.credential);n.addCcsOid(a)}catch(a){this.logger.verbose("Could not parse home account ID for CCS Header: "+a)}break;case Y.UPN:n.addCcsUpn(e.ccsCredential.credential);break}return e.tokenBodyParameters&&n.addExtraQueryParameters(e.tokenBodyParameters),n.createQueryString()}}/*! @azure/msal-common v14.3.0 2023-10-30 */class wi extends nn{constructor(e,t){super(e,t)}async acquireToken(e){try{const[t,n]=await this.acquireCachedToken(e);return n===me.PROACTIVELY_REFRESHED&&(this.logger.info("SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed."),new Mt(this.config,this.performanceClient).acquireTokenByRefreshToken(e).catch(()=>{})),t}catch(t){if(t instanceof ht&&t.errorCode===le)return new Mt(this.config,this.performanceClient).acquireTokenByRefreshToken(e);throw t}}async acquireCachedToken(e){var r;(r=this.performanceClient)==null||r.addQueueMeasurement(d.SilentFlowClientAcquireCachedToken,e.correlationId);let t=me.NOT_APPLICABLE;if(e.forceRefresh||!this.config.cacheOptions.claimsBasedCachingEnabled&&!$.isEmptyObj(e.claims))throw this.setCacheOutcome(me.FORCE_REFRESH_OR_CLAIMS,e.correlationId),g(le);if(!e.account)throw g(zt);const n=e.authority||this.authority.getPreferredCache(),o=this.cacheManager.readCacheRecord(e.account,e,n);if(o.accessToken){if(x.wasClockTurnedBack(o.accessToken.cachedAt)||x.isTokenExpired(o.accessToken.expiresOn,this.config.systemOptions.tokenRenewalOffsetSeconds))throw this.setCacheOutcome(me.CACHED_ACCESS_TOKEN_EXPIRED,e.correlationId),g(le);o.accessToken.refreshOn&&x.isTokenExpired(o.accessToken.refreshOn,0)&&(t=me.PROACTIVELY_REFRESHED)}else throw this.setCacheOutcome(me.NO_CACHED_ACCESS_TOKEN,e.correlationId),g(le);return this.setCacheOutcome(t,e.correlationId),this.config.serverTelemetryManager&&this.config.serverTelemetryManager.incrementCacheHits(),[await p(this.generateResultFromCacheRecord.bind(this),d.SilentFlowClientGenerateResultFromCacheRecord,this.logger,this.performanceClient,e.correlationId)(o,e),t]}setCacheOutcome(e,t){var n,o;(n=this.serverTelemetryManager)==null||n.setCacheOutcome(e),(o=this.performanceClient)==null||o.addFields({cacheOutcome:e},t),this.logger.info(`Token refresh is required due to cache outcome: ${e}`)}async generateResultFromCacheRecord(e,t){var o;(o=this.performanceClient)==null||o.addQueueMeasurement(d.SilentFlowClientGenerateResultFromCacheRecord,t.correlationId);let n;if(e.idToken&&(n=ue(e.idToken.secret,this.config.cryptoInterface.base64Decode)),t.maxAge||t.maxAge===0){const r=n==null?void 0:n.auth_time;if(!r)throw g(qt);lo(r,t.maxAge)}return await Te.generateAuthenticationResult(this.cryptoUtils,this.authority,e,!0,t,n)}}/*! @azure/msal-common v14.3.0 2023-10-30 */class rt{constructor(){this.failedRequests=[],this.errors=[],this.cacheHits=0}static isServerTelemetryEntity(e,t){const n=e.indexOf(D.CACHE_KEY)===0;let o=!0;return t&&(o=t.hasOwnProperty("failedRequests")&&t.hasOwnProperty("errors")&&t.hasOwnProperty("cacheHits")),n&&o}}/*! @azure/msal-common v14.3.0 2023-10-30 */class Hn{static isThrottlingEntity(e,t){let n=!1;e&&(n=e.indexOf(xe.THROTTLING_PREFIX)===0);let o=!0;return t&&(o=t.hasOwnProperty("throttleTime")),n&&o}}/*! @azure/msal-common v14.3.0 2023-10-30 */const Ri={sendGetRequestAsync:()=>Promise.reject(g(A)),sendPostRequestAsync:()=>Promise.reject(g(A))};/*! @azure/msal-common v14.3.0 2023-10-30 */const Mo="missing_kid_error",Ho="missing_alg_error";/*! @azure/msal-common v14.3.0 2023-10-30 */const ki={[Mo]:"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.",[Ho]:"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided."};class on extends N{constructor(e,t){super(e,t),this.name="JoseHeaderError",Object.setPrototypeOf(this,on.prototype)}}function Ln(s){return new on(s,ki[s])}/*! @azure/msal-common v14.3.0 2023-10-30 */class rn{constructor(e){this.typ=e.typ,this.alg=e.alg,this.kid=e.kid}static getShrHeaderString(e){if(!e.kid)throw Ln(Mo);if(!e.alg)throw Ln(Ho);const t=new rn({typ:e.typ||Or.Pop,kid:e.kid,alg:e.alg});return JSON.stringify(t)}}/*! @azure/msal-common v14.3.0 2023-10-30 */class it{constructor(e,t){this.cacheOutcome=me.NOT_APPLICABLE,this.cacheManager=t,this.apiId=e.apiId,this.correlationId=e.correlationId,this.wrapperSKU=e.wrapperSKU||l.EMPTY_STRING,this.wrapperVer=e.wrapperVer||l.EMPTY_STRING,this.telemetryCacheKey=D.CACHE_KEY+K.CACHE_KEY_SEPARATOR+e.clientId}generateCurrentRequestHeaderValue(){const e=`${this.apiId}${D.VALUE_SEPARATOR}${this.cacheOutcome}`,t=[this.wrapperSKU,this.wrapperVer].join(D.VALUE_SEPARATOR),n=this.getRegionDiscoveryFields(),o=[e,n].join(D.VALUE_SEPARATOR);return[D.SCHEMA_VERSION,o,t].join(D.CATEGORY_SEPARATOR)}generateLastRequestHeaderValue(){const e=this.getLastRequests(),t=it.maxErrorsToSend(e),n=e.failedRequests.slice(0,2*t).join(D.VALUE_SEPARATOR),o=e.errors.slice(0,t).join(D.VALUE_SEPARATOR),r=e.errors.length,i=t<r?D.OVERFLOW_TRUE:D.OVERFLOW_FALSE,a=[r,i].join(D.VALUE_SEPARATOR);return[D.SCHEMA_VERSION,e.cacheHits,n,o,a].join(D.CATEGORY_SEPARATOR)}cacheFailedRequest(e){const t=this.getLastRequests();t.errors.length>=D.MAX_CACHED_ERRORS&&(t.failedRequests.shift(),t.failedRequests.shift(),t.errors.shift()),t.failedRequests.push(this.apiId,this.correlationId),e instanceof Error&&e&&e.toString()?e instanceof N?e.subError?t.errors.push(e.subError):e.errorCode?t.errors.push(e.errorCode):t.errors.push(e.toString()):t.errors.push(e.toString()):t.errors.push(D.UNKNOWN_ERROR),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,t)}incrementCacheHits(){const e=this.getLastRequests();return e.cacheHits+=1,this.cacheManager.setServerTelemetry(this.telemetryCacheKey,e),e.cacheHits}getLastRequests(){const e=new rt;return this.cacheManager.getServerTelemetry(this.telemetryCacheKey)||e}clearTelemetryCache(){const e=this.getLastRequests(),t=it.maxErrorsToSend(e),n=e.errors.length;if(t===n)this.cacheManager.removeItem(this.telemetryCacheKey);else{const o=new rt;o.failedRequests=e.failedRequests.slice(t*2),o.errors=e.errors.slice(t),this.cacheManager.setServerTelemetry(this.telemetryCacheKey,o)}}static maxErrorsToSend(e){let t,n=0,o=0;const r=e.errors.length;for(t=0;t<r;t++){const i=e.failedRequests[2*t]||l.EMPTY_STRING,a=e.failedRequests[2*t+1]||l.EMPTY_STRING,c=e.errors[t]||l.EMPTY_STRING;if(o+=i.toString().length+a.toString().length+c.length+3,o<D.MAX_LAST_HEADER_BYTES)n+=1;else break}return n}getRegionDiscoveryFields(){const e=[];return e.push(this.regionUsed||l.EMPTY_STRING),e.push(this.regionSource||l.EMPTY_STRING),e.push(this.regionOutcome||l.EMPTY_STRING),e.join(",")}updateRegionDiscoveryMetadata(e){this.regionUsed=e.region_used,this.regionSource=e.region_source,this.regionOutcome=e.region_outcome}setCacheOutcome(e){this.cacheOutcome=e}}/*! @azure/msal-common v14.3.0 2023-10-30 */class Un{startMeasurement(){}endMeasurement(){}flushMeasurement(){return null}}class bi{generateId(){return"callback-id"}startMeasurement(e,t){return{end:()=>null,discard:()=>{},add:()=>{},increment:()=>{},event:{eventId:this.generateId(),status:Ci.InProgress,authority:"",libraryName:"",libraryVersion:"",clientId:"",name:e,startTimeMs:Date.now(),correlationId:t||""},measurement:new Un}}startPerformanceMeasurement(){return new Un}calculateQueuedTime(){return 0}addQueueMeasurement(){}setPreQueueTime(){}endMeasurement(){return null}discardMeasurements(){}removePerformanceCallback(){return!0}addPerformanceCallback(){return""}emitEvents(){}addFields(){}incrementFields(){}cacheEventByCorrelationId(){}}/*! @azure/msal-browser v3.4.0 2023-10-30 */const sn="pkce_not_created",Lo="crypto_nonexistent",pt="empty_navigate_uri",mt="hash_empty_error",Uo="no_state_in_hash",an="hash_does_not_contain_known_properties",Do="unable_to_parse_state",Ko="state_interaction_type_mismatch",Fo="interaction_in_progress",Bo="popup_window_error",xo="empty_window_error",Ie="user_cancelled",Go="monitor_popup_timeout",qo="monitor_window_timeout",zo="redirect_in_iframe",$o="block_iframe_reload",Yo="block_nested_popups",Oi="iframe_closed_prematurely",ft="silent_logout_unsupported",Vo="no_account_error",Qo="silent_prompt_value_error",jo="no_token_request_cache_error",Wo="unable_to_parse_token_request_cache_error",cn="no_cached_authority_error",Ni="auth_request_not_set_error",Pi="invalid_cache_type",Jo="non_browser_environment",ve="database_not_open",st="no_network_connectivity",Xo="post_request_failed",Zo="get_request_failed",Ht="failed_to_parse_response",j="unable_to_load_token",hn="crypto_key_not_found",er="auth_code_required",tr="auth_code_or_nativeAccountId_required",nr="spa_code_and_nativeAccountId_present",ln="database_unavailable",or="unable_to_acquire_token_from_native_platform",rr="native_handshake_timeout",ir="native_extension_not_installed",Ye="native_connection_not_established",sr="uninitialized_public_client_application",ar="native_prompt_not_supported",cr="invalid_base64_string";/*! @azure/msal-browser v3.4.0 2023-10-30 */const oe="For more visit: aka.ms/msaljs/browser-errors",Mi={[sn]:"The PKCE code challenge and verifier could not be generated.",[Lo]:"The crypto object or function is not available.",[pt]:"Navigation URI is empty. Please check stack trace for more info.",[mt]:`Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${oe}`,[Uo]:"Hash does not contain state. Please verify that the request originated from msal.",[an]:`Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${oe}`,[Do]:"Unable to parse state. Please verify that the request originated from msal.",[Ko]:"Hash contains state but the interaction type does not match the caller.",[Fo]:`Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${oe}`,[Bo]:"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.",[xo]:"window.open returned null or undefined window object.",[Ie]:"User cancelled the flow.",[Go]:`Token acquisition in popup failed due to timeout.  ${oe}`,[qo]:`Token acquisition in iframe failed due to timeout.  ${oe}`,[zo]:"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.",[$o]:`Request was blocked inside an iframe because MSAL detected an authentication response.  ${oe}`,[Yo]:"Request was blocked inside a popup because MSAL detected it was running in a popup.",[Oi]:"The iframe being monitored was closed prematurely.",[ft]:"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.",[Vo]:"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.",[Qo]:"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.",[jo]:"No token request found in cache.",[Wo]:"The cached token request could not be parsed.",[cn]:"No cached authority found.",[Ni]:"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler",[Pi]:"Invalid cache type",[Jo]:"Login and token requests are not supported in non-browser environments.",[ve]:"Database is not open!",[st]:"No network connectivity. Check your internet connection.",[Xo]:"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'",[Zo]:"Network request failed. Please check the network trace to determine root cause.",[Ht]:"Failed to parse network response. Check network trace.",[j]:"Error loading token to cache.",[hn]:"Cryptographic Key or Keypair not found in browser storage.",[er]:"An authorization code must be provided (as the `code` property on the request) to this flow.",[tr]:"An authorization code or nativeAccountId must be provided to this flow.",[nr]:"Request cannot contain both spa code and native account id.",[ln]:"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.",[or]:`Unable to acquire token from native platform.  ${oe}`,[rr]:"Timed out while attempting to establish connection to browser extension",[ir]:"Native extension is not installed. If you think this is a mistake call the initialize function.",[Ye]:`Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${oe}`,[sr]:`You must call and await the initialize function before attempting to call any other MSAL API.  ${oe}`,[ar]:"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.",[cr]:"Invalid base64 encoded string."};class Ve extends N{constructor(e){super(e,Mi[e]),Object.setPrototypeOf(this,Ve.prototype),this.name="BrowserAuthError"}}function m(s){return new Ve(s)}/*! @azure/msal-browser v3.4.0 2023-10-30 */const J={INTERACTION_IN_PROGRESS_VALUE:"interaction_in_progress",INVALID_GRANT_ERROR:"invalid_grant",POPUP_WIDTH:483,POPUP_HEIGHT:600,POPUP_NAME_PREFIX:"msal",DEFAULT_POLL_INTERVAL_MS:30,MSAL_SKU:"msal.js.browser"},De={CHANNEL_ID:"53ee284d-920a-4b59-9d30-a60315b26836",PREFERRED_EXTENSION_ID:"ppnbnpeolgkicgegkbkbjmhlideopiji",MATS_TELEMETRY:"MATS"},Ce={HandshakeRequest:"Handshake",HandshakeResponse:"HandshakeResponse",GetToken:"GetToken",Response:"Response"},L={LocalStorage:"localStorage",SessionStorage:"sessionStorage",MemoryStorage:"memoryStorage"},Dn={GET:"GET",POST:"POST"},v={AUTHORITY:"authority",ACQUIRE_TOKEN_ACCOUNT:"acquireToken.account",SESSION_STATE:"session.state",REQUEST_STATE:"request.state",NONCE_IDTOKEN:"nonce.id_token",ORIGIN_URI:"request.origin",RENEW_STATUS:"token.renew.status",URL_HASH:"urlHash",REQUEST_PARAMS:"request.params",SCOPES:"scopes",INTERACTION_STATUS_KEY:"interaction.status",CCS_CREDENTIAL:"ccs.credential",CORRELATION_ID:"request.correlationId",NATIVE_REQUEST:"request.native",REDIRECT_CONTEXT:"request.redirect.context"},ce={ACCOUNT_KEYS:"msal.account.keys",TOKEN_KEYS:"msal.token.keys"},Ze={WRAPPER_SKU:"wrapper.sku",WRAPPER_VER:"wrapper.version"},b={acquireTokenRedirect:861,acquireTokenPopup:862,ssoSilent:863,acquireTokenSilent_authCode:864,handleRedirectPromise:865,acquireTokenByCode:866,acquireTokenSilent_silentFlow:61,logout:961,logoutPopup:962};var C;(function(s){s.Redirect="redirect",s.Popup="popup",s.Silent="silent",s.None="none"})(C||(C={}));const Kn={scopes:qe},hr="jwk",Lt="msal.db",Hi=1,Li=`${Lt}.keys`,V={Default:0,AccessToken:1,AccessTokenAndRefreshToken:2,RefreshToken:3,RefreshTokenAndNetwork:4,Skip:5};/*! @azure/msal-browser v3.4.0 2023-10-30 */function Ui(s){s.location.hash="",typeof s.history.replaceState=="function"&&s.history.replaceState(null,"",`${s.location.origin}${s.location.pathname}${s.location.search}`)}function Di(s){const e=s.split("#");e.shift(),window.location.hash=e.length>0?e.join("#"):""}function dn(){return window.parent!==window}function Ki(){return typeof window<"u"&&!!window.opener&&window.opener!==window&&typeof window.name=="string"&&window.name.indexOf(`${J.POPUP_NAME_PREFIX}.`)===0}function se(){return window.location.href.split("?")[0].split("#")[0]}function Fi(){const e=new _(window.location.href).getUrlComponents();return`${e.Protocol}//${e.HostNameAndPort}/`}function Tt(){if(_.hashContainsKnownProperties(window.location.hash)&&dn())throw m($o)}function Bi(s,e){const t=dn();if(s===C.Redirect&&t&&!e)throw m(zo)}function xi(){if(Ki())throw m(Yo)}function Gi(s){if(!s)throw m(Jo)}function Fn(s){if(!s)throw m(sr)}function lr(s){const e=document.createElement("link");e.rel="preconnect",e.href=new URL(s).origin,e.crossOrigin="anonymous",document.head.appendChild(e),window.setTimeout(()=>{try{document.head.removeChild(e)}catch{}},1e4)}/*! @azure/msal-browser v3.4.0 2023-10-30 */class at{navigateInternal(e,t){return at.defaultNavigateWindow(e,t)}navigateExternal(e,t){return at.defaultNavigateWindow(e,t)}static defaultNavigateWindow(e,t){return t.noHistory?window.location.replace(e):window.location.assign(e),new Promise(n=>{setTimeout(()=>{n(!0)},t.timeout)})}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class qi{async sendGetRequestAsync(e,t){let n;try{n=await fetch(e,{method:Dn.GET,headers:this.getFetchHeaders(t)})}catch{throw window.navigator.onLine?m(Zo):m(st)}try{return{headers:this.getHeaderDict(n.headers),body:await n.json(),status:n.status}}catch{throw m(Ht)}}async sendPostRequestAsync(e,t){const n=t&&t.body||l.EMPTY_STRING;let o;try{o=await fetch(e,{method:Dn.POST,headers:this.getFetchHeaders(t),body:n})}catch{throw window.navigator.onLine?m(Xo):m(st)}try{return{headers:this.getHeaderDict(o.headers),body:await o.json(),status:o.status}}catch{throw m(Ht)}}getFetchHeaders(e){const t=new Headers;if(!(e&&e.headers))return t;const n=e.headers;return Object.keys(n).forEach(o=>{t.append(o,n[o])}),t}getHeaderDict(e){const t={};return e.forEach((n,o)=>{t[o]=n}),t}}/*! @azure/msal-browser v3.4.0 2023-10-30 */const zi=6e4,Ut=6e3,$i=3e4,Yi=2e3;function Vi({auth:s,cache:e,system:t,telemetry:n},o){const r={clientId:l.EMPTY_STRING,authority:`${l.DEFAULT_AUTHORITY}`,knownAuthorities:[],cloudDiscoveryMetadata:l.EMPTY_STRING,authorityMetadata:l.EMPTY_STRING,redirectUri:l.EMPTY_STRING,postLogoutRedirectUri:l.EMPTY_STRING,navigateToLoginRequestUrl:!0,clientCapabilities:[],protocolMode:ae.AAD,OIDCOptions:{serverResponseType:ze.FRAGMENT,defaultScopes:[l.OPENID_SCOPE,l.PROFILE_SCOPE,l.OFFLINE_ACCESS_SCOPE]},azureCloudOptions:{azureCloudInstance:Qt.None,tenant:l.EMPTY_STRING},skipAuthorityMetadataCache:!1,supportsNestedAppAuth:!1},i={cacheLocation:L.SessionStorage,temporaryCacheLocation:L.SessionStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!!(e&&e.cacheLocation===L.LocalStorage),claimsBasedCachingEnabled:!1},a={loggerCallback:()=>{},logLevel:H.Info,piiLoggingEnabled:!1},h={...{...ko,loggerOptions:a,networkClient:o?new qi:Ri,navigationClient:new at,loadFrameTimeout:0,windowHashTimeout:(t==null?void 0:t.loadFrameTimeout)||zi,iframeHashTimeout:(t==null?void 0:t.loadFrameTimeout)||Ut,navigateFrameWait:0,redirectNavigationTimeout:$i,asyncPopups:!1,allowRedirectInIframe:!1,allowNativeBroker:!1,nativeBrokerHandshakeTimeout:(t==null?void 0:t.nativeBrokerHandshakeTimeout)||Yi,pollIntervalMilliseconds:J.DEFAULT_POLL_INTERVAL_MS},...t,loggerOptions:(t==null?void 0:t.loggerOptions)||a},u={application:{appName:l.EMPTY_STRING,appVersion:l.EMPTY_STRING},client:new bi};if((s==null?void 0:s.protocolMode)!==ae.OIDC&&(s!=null&&s.OIDCOptions)&&new _e(h.loggerOptions).warning(JSON.stringify(k(Ao))),s!=null&&s.protocolMode&&s.protocolMode!==ae.AAD&&(h!=null&&h.allowNativeBroker))throw k(So);return{auth:{...r,...s,OIDCOptions:{...r.OIDCOptions,...s==null?void 0:s.OIDCOptions}},cache:{...i,...e},system:h,telemetry:{...u,...n}}}/*! @azure/msal-browser v3.4.0 2023-10-30 */const Qi="@azure/msal-browser",un="3.4.0";/*! @azure/msal-browser v3.4.0 2023-10-30 */class ji{constructor(e){this.browserEnvironment=typeof window<"u",this.config=Vi(e,this.browserEnvironment),this.logger=new _e(this.config.system.loggerOptions,Qi,un),this.available=!1}getConfig(){return this.config}getLogger(){return this.logger}isAvailable(){return this.available}isBrowserEnvironment(){return this.browserEnvironment}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Ee extends ji{getModuleName(){return Ee.MODULE_NAME}getId(){return Ee.ID}async initialize(){return this.available=typeof window<"u",this.available}}Ee.MODULE_NAME="";Ee.ID="StandardOperatingContext";async function Wi(s){const e=new Ee(s);return await e.initialize(),await(await Rr(()=>Promise.resolve().then(()=>Ds),void 0)).StandardController.createController(e)}/*! @azure/msal-browser v3.4.0 2023-10-30 */function It(s){return encodeURIComponent(gn(s).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"))}function ct(s){return dr(s).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_")}function gn(s){return dr(new TextEncoder().encode(s))}function dr(s){const e=Array.from(s,t=>String.fromCodePoint(t)).join("");return btoa(e)}/*! @azure/msal-browser v3.4.0 2023-10-30 */function de(s){return new TextDecoder().decode(Ji(s))}function Ji(s){let e=s.replace(/-/g,"+").replace(/_/g,"/");switch(e.length%4){case 0:break;case 2:e+="==";break;case 3:e+="=";break;default:throw m(cr)}const t=atob(e);return Uint8Array.from(t,n=>n.codePointAt(0)||0)}/*! @azure/msal-browser v3.4.0 2023-10-30 */const Xi="RSASSA-PKCS1-v1_5",ur="SHA-256",Zi=2048,es=new Uint8Array([1,0,1]),pn={name:Xi,hash:ur,modulusLength:Zi,publicExponent:es};function ts(s){if("crypto"in window)s.verbose("BrowserCrypto: modern crypto interface available");else throw s.error("BrowserCrypto: crypto interface is unavailable"),m(Lo)}async function gr(s,e,t){e==null||e.addQueueMeasurement(d.Sha256Digest,t);const o=new TextEncoder().encode(s);return window.crypto.subtle.digest(ur,o)}function ns(s){return window.crypto.getRandomValues(s)}function pe(){return window.crypto.randomUUID()}async function os(s,e){return window.crypto.subtle.generateKey(pn,s,e)}async function Et(s){return window.crypto.subtle.exportKey(hr,s)}async function rs(s,e,t){return window.crypto.subtle.importKey(hr,s,pn,e,t)}async function is(s,e){return window.crypto.subtle.sign(pn,s,e)}/*! @azure/msal-browser v3.4.0 2023-10-30 */class ss{constructor(){this.dbName=Lt,this.version=Hi,this.tableName=Li,this.dbOpen=!1}async open(){return new Promise((e,t)=>{const n=window.indexedDB.open(this.dbName,this.version);n.addEventListener("upgradeneeded",o=>{o.target.result.createObjectStore(this.tableName)}),n.addEventListener("success",o=>{const r=o;this.db=r.target.result,this.dbOpen=!0,e()}),n.addEventListener("error",()=>t(m(ln)))})}closeConnection(){const e=this.db;e&&this.dbOpen&&(e.close(),this.dbOpen=!1)}async validateDbIsOpen(){if(!this.dbOpen)return await this.open()}async getItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(m(ve));const i=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).get(e);i.addEventListener("success",a=>{const c=a;this.closeConnection(),t(c.target.result)}),i.addEventListener("error",a=>{this.closeConnection(),n(a)})})}async setItem(e,t){return await this.validateDbIsOpen(),new Promise((n,o)=>{if(!this.db)return o(m(ve));const a=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).put(t,e);a.addEventListener("success",()=>{this.closeConnection(),n()}),a.addEventListener("error",c=>{this.closeConnection(),o(c)})})}async removeItem(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(m(ve));const i=this.db.transaction([this.tableName],"readwrite").objectStore(this.tableName).delete(e);i.addEventListener("success",()=>{this.closeConnection(),t()}),i.addEventListener("error",a=>{this.closeConnection(),n(a)})})}async getKeys(){return await this.validateDbIsOpen(),new Promise((e,t)=>{if(!this.db)return t(m(ve));const r=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).getAllKeys();r.addEventListener("success",i=>{const a=i;this.closeConnection(),e(a.target.result)}),r.addEventListener("error",i=>{this.closeConnection(),t(i)})})}async containsKey(e){return await this.validateDbIsOpen(),new Promise((t,n)=>{if(!this.db)return n(m(ve));const i=this.db.transaction([this.tableName],"readonly").objectStore(this.tableName).count(e);i.addEventListener("success",a=>{const c=a;this.closeConnection(),t(c.target.result===1)}),i.addEventListener("error",a=>{this.closeConnection(),n(a)})})}async deleteDatabase(){return this.db&&this.dbOpen&&this.closeConnection(),new Promise((e,t)=>{const n=window.indexedDB.deleteDatabase(Lt);n.addEventListener("success",()=>e(!0)),n.addEventListener("blocked",()=>e(!0)),n.addEventListener("error",()=>t(!1))})}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Dt{constructor(){this.cache=new Map}getItem(e){return this.cache.get(e)||null}setItem(e,t){this.cache.set(e,t)}removeItem(e){this.cache.delete(e)}getKeys(){const e=[];return this.cache.forEach((t,n)=>{e.push(n)}),e}containsKey(e){return this.cache.has(e)}clear(){this.cache.clear()}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Bn{constructor(e,t){this.inMemoryCache=new Dt,this.indexedDBCache=new ss,this.logger=e,this.storeName=t}handleDatabaseAccessError(e){if(e instanceof Ve&&e.errorCode===ln)this.logger.error("Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.");else throw e}async getItem(e){const t=this.inMemoryCache.getItem(e);if(!t)try{return this.logger.verbose("Queried item not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.getItem(e)}catch(n){this.handleDatabaseAccessError(n)}return t}async setItem(e,t){this.inMemoryCache.setItem(e,t);try{await this.indexedDBCache.setItem(e,t)}catch(n){this.handleDatabaseAccessError(n)}}async removeItem(e){this.inMemoryCache.removeItem(e);try{await this.indexedDBCache.removeItem(e)}catch(t){this.handleDatabaseAccessError(t)}}async getKeys(){const e=this.inMemoryCache.getKeys();if(e.length===0)try{return this.logger.verbose("In-memory cache is empty, now querying persistent storage."),await this.indexedDBCache.getKeys()}catch(t){this.handleDatabaseAccessError(t)}return e}async containsKey(e){const t=this.inMemoryCache.containsKey(e);if(!t)try{return this.logger.verbose("Key not found in in-memory cache, now querying persistent storage."),await this.indexedDBCache.containsKey(e)}catch(n){this.handleDatabaseAccessError(n)}return t}clearInMemory(){this.logger.verbose(`Deleting in-memory keystore ${this.storeName}`),this.inMemoryCache.clear(),this.logger.verbose(`In-memory keystore ${this.storeName} deleted`)}async clearPersistent(){try{this.logger.verbose("Deleting persistent keystore");const e=await this.indexedDBCache.deleteDatabase();return e&&this.logger.verbose("Persistent keystore deleted"),e}catch(e){return this.handleDatabaseAccessError(e),!1}}}/*! @azure/msal-browser v3.4.0 2023-10-30 */const xn={asymmetricKeys:"asymmetricKeys",symmetricKeys:"symmetricKeys"};class as{constructor(e){this.logger=e,this.asymmetricKeys=new Bn(this.logger,xn.asymmetricKeys),this.symmetricKeys=new Bn(this.logger,xn.symmetricKeys)}async clear(){this.asymmetricKeys.clearInMemory(),this.symmetricKeys.clearInMemory();try{return await this.asymmetricKeys.clearPersistent(),!0}catch(e){return e instanceof Error?this.logger.error(`Clearing keystore failed with error: ${e.message}`):this.logger.error("Clearing keystore failed with unknown error"),!1}}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class He{constructor(e,t){this.logger=e,ts(e),this.cache=new as(this.logger),this.performanceClient=t}createNewGuid(){return pe()}base64Encode(e){return gn(e)}base64Decode(e){return de(e)}async getPublicKeyThumbprint(e){var u;const t=(u=this.performanceClient)==null?void 0:u.startMeasurement(d.CryptoOptsGetPublicKeyThumbprint,e.correlationId),n=await os(He.EXTRACTABLE,He.POP_KEY_USAGES),o=await Et(n.publicKey),r={e:o.e,kty:o.kty,n:o.n},i=Gn(r),a=await this.hashString(i),c=await Et(n.privateKey),h=await rs(c,!1,["sign"]);return await this.cache.asymmetricKeys.setItem(a,{privateKey:h,publicKey:n.publicKey,requestMethod:e.resourceRequestMethod,requestUri:e.resourceRequestUri}),t&&t.end({success:!0}),a}async removeTokenBindingKey(e){return await this.cache.asymmetricKeys.removeItem(e),!await this.cache.asymmetricKeys.containsKey(e)}async clearKeystore(){return await this.cache.clear()}async signJwt(e,t,n){var G;const o=(G=this.performanceClient)==null?void 0:G.startMeasurement(d.CryptoOptsSignJwt,n),r=await this.cache.asymmetricKeys.getItem(t);if(!r)throw m(hn);const i=await Et(r.publicKey),a=Gn(i),c=It(JSON.stringify({kid:t})),h=rn.getShrHeaderString({kid:c,alg:i.alg}),u=It(h);e.cnf={jwk:JSON.parse(a)};const f=It(JSON.stringify(e)),E=`${u}.${f}`,O=new TextEncoder().encode(E),w=await is(r.privateKey,O),q=ct(new Uint8Array(w)),Q=`${E}.${q}`;return o&&o.end({success:!0}),Q}async hashString(e){const t=await gr(e),n=new Uint8Array(t);return ct(n)}}He.POP_KEY_USAGES=["sign","verify"];He.EXTRACTABLE=!0;function Gn(s){return JSON.stringify(s,Object.keys(s).sort())}/*! @azure/msal-browser v3.4.0 2023-10-30 */const pr="storage_not_supported",cs="stubbed_public_client_application_called",mr="in_mem_redirect_unavailable";/*! @azure/msal-browser v3.4.0 2023-10-30 */const hs={[pr]:"Given storage configuration option was not supported.",[cs]:"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors",[mr]:"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true."};class mn extends N{constructor(e,t){super(e,t),this.name="BrowserConfigurationAuthError",Object.setPrototypeOf(this,mn.prototype)}}function fr(s){return new mn(s,hs[s])}/*! @azure/msal-browser v3.4.0 2023-10-30 */class qn{constructor(e){this.validateWindowStorage(e),this.windowStorage=window[e]}validateWindowStorage(e){if(e!==L.LocalStorage&&e!==L.SessionStorage||!window[e])throw fr(pr)}getItem(e){return this.windowStorage.getItem(e)}setItem(e,t){this.windowStorage.setItem(e,t)}removeItem(e){this.windowStorage.removeItem(e)}getKeys(){return Object.keys(this.windowStorage)}containsKey(e){return this.windowStorage.hasOwnProperty(e)}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Cr{static extractBrowserRequestState(e,t){if(!t)return null;try{return X.parseRequestState(e,t).libraryState.meta}catch{throw g(Ne)}}static parseServerResponseFromHash(e){if(!e)return{};const t=new _(e);return _.getDeserializedHash(t.getHash())}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Kt extends he{constructor(e,t,n,o,r){super(e,n,o,r),this.COOKIE_LIFE_MULTIPLIER=24*60*60*1e3,this.cacheConfig=t,this.logger=o,this.internalStorage=new Dt,this.browserStorage=this.setupBrowserStorage(this.cacheConfig.cacheLocation),this.temporaryCacheStorage=this.setupTemporaryCacheStorage(this.cacheConfig.temporaryCacheLocation,this.cacheConfig.cacheLocation),t.cacheMigrationEnabled&&(this.migrateCacheEntries(),this.createKeyMaps())}setupBrowserStorage(e){switch(e){case L.LocalStorage:case L.SessionStorage:try{return new qn(e)}catch(t){this.logger.verbose(t);break}}return this.cacheConfig.cacheLocation=L.MemoryStorage,new Dt}setupTemporaryCacheStorage(e,t){switch(t){case L.LocalStorage:case L.SessionStorage:try{return new qn(e||L.SessionStorage)}catch(n){return this.logger.verbose(n),this.internalStorage}case L.MemoryStorage:default:return this.internalStorage}}migrateCacheEntries(){const e=`${l.CACHE_PREFIX}.${U.ID_TOKEN}`,t=`${l.CACHE_PREFIX}.${U.CLIENT_INFO}`,n=`${l.CACHE_PREFIX}.${U.ERROR}`,o=`${l.CACHE_PREFIX}.${U.ERROR_DESC}`,r=this.browserStorage.getItem(e),i=this.browserStorage.getItem(t),a=this.browserStorage.getItem(n),c=this.browserStorage.getItem(o),h=[r,i,a,c];[U.ID_TOKEN,U.CLIENT_INFO,U.ERROR,U.ERROR_DESC].forEach((f,E)=>this.migrateCacheEntry(f,h[E]))}migrateCacheEntry(e,t){t&&this.setTemporaryCache(e,t,!0)}createKeyMaps(){this.logger.trace("BrowserCacheManager - createKeyMaps called.");const e=this.getItem(ce.ACCOUNT_KEYS),t=this.getItem(`${ce.TOKEN_KEYS}.${this.clientId}`);if(e&&t){this.logger.verbose("BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.");return}this.browserStorage.getKeys().forEach(o=>{if(this.isCredentialKey(o)){const r=this.getItem(o);if(r){const i=this.validateAndParseJson(r);if(i&&i.hasOwnProperty("credentialType"))switch(i.credentialType){case y.ID_TOKEN:if(kn(i)){this.logger.trace("BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - idToken with key: ${o} found, saving key to token key map`);const a=i,c=this.updateCredentialCacheKey(o,a);this.addTokenKey(c,y.ID_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${o}`);break;case y.ACCESS_TOKEN:case y.ACCESS_TOKEN_WITH_AUTH_SCHEME:if(Rn(i)){this.logger.trace("BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - accessToken with key: ${o} found, saving key to token key map`);const a=i,c=this.updateCredentialCacheKey(o,a);this.addTokenKey(c,y.ACCESS_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${o}`);break;case y.REFRESH_TOKEN:if(bn(i)){this.logger.trace("BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - refreshToken with key: ${o} found, saving key to token key map`);const a=i,c=this.updateCredentialCacheKey(o,a);this.addTokenKey(c,y.REFRESH_TOKEN);return}else this.logger.trace("BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping."),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${o}`);break}}}if(this.isAccountKey(o)){const r=this.getItem(o);if(r){const i=this.validateAndParseJson(r);i&&P.isAccountEntity(i)&&(this.logger.trace("BrowserCacheManager:createKeyMaps - account found, saving key to account key map"),this.logger.tracePii(`BrowserCacheManager:createKeyMaps - account with key: ${o} found, saving key to account key map`),this.addAccountKeyToMap(o))}}})}validateAndParseJson(e){try{const t=JSON.parse(e);return t&&typeof t=="object"?t:null}catch{return null}}getItem(e){return this.browserStorage.getItem(e)}setItem(e,t){this.browserStorage.setItem(e,t)}getAccount(e){this.logger.trace("BrowserCacheManager.getAccount called");const t=this.getItem(e);if(!t)return this.removeAccountKeyFromMap(e),null;const n=this.validateAndParseJson(t);return!n||!P.isAccountEntity(n)?(this.removeAccountKeyFromMap(e),null):he.toObject(new P,n)}setAccount(e){this.logger.trace("BrowserCacheManager.setAccount called");const t=e.generateAccountKey();this.setItem(t,JSON.stringify(e)),this.addAccountKeyToMap(t)}getAccountKeys(){this.logger.trace("BrowserCacheManager.getAccountKeys called");const e=this.getItem(ce.ACCOUNT_KEYS);return e?JSON.parse(e):(this.logger.verbose("BrowserCacheManager.getAccountKeys - No account keys found"),[])}addAccountKeyToMap(e){this.logger.trace("BrowserCacheManager.addAccountKeyToMap called"),this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${e}`);const t=this.getAccountKeys();t.indexOf(e)===-1?(t.push(e),this.setItem(ce.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key added")):this.logger.verbose("BrowserCacheManager.addAccountKeyToMap account key already exists in map")}removeAccountKeyFromMap(e){this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap called"),this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${e}`);const t=this.getAccountKeys(),n=t.indexOf(e);n>-1?(t.splice(n,1),this.setItem(ce.ACCOUNT_KEYS,JSON.stringify(t)),this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap account key removed")):this.logger.trace("BrowserCacheManager.removeAccountKeyFromMap key not found in existing map")}async removeAccount(e){super.removeAccount(e),this.removeAccountKeyFromMap(e)}removeIdToken(e){super.removeIdToken(e),this.removeTokenKey(e,y.ID_TOKEN)}async removeAccessToken(e){super.removeAccessToken(e),this.removeTokenKey(e,y.ACCESS_TOKEN)}removeRefreshToken(e){super.removeRefreshToken(e),this.removeTokenKey(e,y.REFRESH_TOKEN)}getTokenKeys(){this.logger.trace("BrowserCacheManager.getTokenKeys called");const e=this.getItem(`${ce.TOKEN_KEYS}.${this.clientId}`);if(e){const t=this.validateAndParseJson(e);if(t&&t.hasOwnProperty("idToken")&&t.hasOwnProperty("accessToken")&&t.hasOwnProperty("refreshToken"))return t;this.logger.error("BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.")}else this.logger.verbose("BrowserCacheManager.getTokenKeys - No token keys found");return{idToken:[],accessToken:[],refreshToken:[]}}addTokenKey(e,t){this.logger.trace("BrowserCacheManager addTokenKey called");const n=this.getTokenKeys();switch(t){case y.ID_TOKEN:n.idToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - idToken added to map"),n.idToken.push(e));break;case y.ACCESS_TOKEN:n.accessToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - accessToken added to map"),n.accessToken.push(e));break;case y.REFRESH_TOKEN:n.refreshToken.indexOf(e)===-1&&(this.logger.info("BrowserCacheManager: addTokenKey - refreshToken added to map"),n.refreshToken.push(e));break;default:throw this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${t}`),g(bt)}this.setItem(`${ce.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(n))}removeTokenKey(e,t){this.logger.trace("BrowserCacheManager removeTokenKey called");const n=this.getTokenKeys();switch(t){case y.ID_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${e} from map`);const o=n.idToken.indexOf(e);o>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - idToken removed from map"),n.idToken.splice(o,1)):this.logger.info("BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.");break;case y.ACCESS_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${e} from map`);const r=n.accessToken.indexOf(e);r>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - accessToken removed from map"),n.accessToken.splice(r,1)):this.logger.info("BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.");break;case y.REFRESH_TOKEN:this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${e} from map`);const i=n.refreshToken.indexOf(e);i>-1?(this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken removed from map"),n.refreshToken.splice(i,1)):this.logger.info("BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.");break;default:throw this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${t}`),g(bt)}this.setItem(`${ce.TOKEN_KEYS}.${this.clientId}`,JSON.stringify(n))}getIdTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,y.ID_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!kn(n)?(this.logger.trace("BrowserCacheManager.getIdTokenCredential: called, no cache hit"),this.removeTokenKey(e,y.ID_TOKEN),null):(this.logger.trace("BrowserCacheManager.getIdTokenCredential: cache hit"),n)}setIdTokenCredential(e){this.logger.trace("BrowserCacheManager.setIdTokenCredential called");const t=Re(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,y.ID_TOKEN)}getAccessTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,y.ACCESS_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!Rn(n)?(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: called, no cache hit"),this.removeTokenKey(e,y.ACCESS_TOKEN),null):(this.logger.trace("BrowserCacheManager.getAccessTokenCredential: cache hit"),n)}setAccessTokenCredential(e){this.logger.trace("BrowserCacheManager.setAccessTokenCredential called");const t=Re(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,y.ACCESS_TOKEN)}getRefreshTokenCredential(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,y.REFRESH_TOKEN),null;const n=this.validateAndParseJson(t);return!n||!bn(n)?(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: called, no cache hit"),this.removeTokenKey(e,y.REFRESH_TOKEN),null):(this.logger.trace("BrowserCacheManager.getRefreshTokenCredential: cache hit"),n)}setRefreshTokenCredential(e){this.logger.trace("BrowserCacheManager.setRefreshTokenCredential called");const t=Re(e);this.setItem(t,JSON.stringify(e)),this.addTokenKey(t,y.REFRESH_TOKEN)}getAppMetadata(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!Me.isAppMetadataEntity(e,n)?(this.logger.trace("BrowserCacheManager.getAppMetadata: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getAppMetadata: cache hit"),he.toObject(new Me,n))}setAppMetadata(e){this.logger.trace("BrowserCacheManager.setAppMetadata called");const t=e.generateAppMetadataKey();this.setItem(t,JSON.stringify(e))}getServerTelemetry(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!rt.isServerTelemetryEntity(e,n)?(this.logger.trace("BrowserCacheManager.getServerTelemetry: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getServerTelemetry: cache hit"),he.toObject(new rt,n))}setServerTelemetry(e,t){this.logger.trace("BrowserCacheManager.setServerTelemetry called"),this.setItem(e,JSON.stringify(t))}getAuthorityMetadata(e){const t=this.internalStorage.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getAuthorityMetadata: called, no cache hit"),null;const n=this.validateAndParseJson(t);return n&&Pt.isAuthorityMetadataEntity(e,n)?(this.logger.trace("BrowserCacheManager.getAuthorityMetadata: cache hit"),he.toObject(new Pt,n)):null}getAuthorityMetadataKeys(){return this.internalStorage.getKeys().filter(t=>this.isAuthorityMetadata(t))}setWrapperMetadata(e,t){this.internalStorage.setItem(Ze.WRAPPER_SKU,e),this.internalStorage.setItem(Ze.WRAPPER_VER,t)}getWrapperMetadata(){const e=this.internalStorage.getItem(Ze.WRAPPER_SKU)||l.EMPTY_STRING,t=this.internalStorage.getItem(Ze.WRAPPER_VER)||l.EMPTY_STRING;return[e,t]}setAuthorityMetadata(e,t){this.logger.trace("BrowserCacheManager.setAuthorityMetadata called"),this.internalStorage.setItem(e,JSON.stringify(t))}getActiveAccount(){const e=this.generateCacheKey(U.ACTIVE_ACCOUNT_FILTERS),t=this.getItem(e);if(!t){this.logger.trace("BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema");const o=this.generateCacheKey(U.ACTIVE_ACCOUNT),r=this.getItem(o);if(!r)return this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null;const i=this.getAccountInfoFilteredBy({localAccountId:r});return i?(this.logger.trace("BrowserCacheManager.getActiveAccount: Legacy active account cache schema found"),this.logger.trace("BrowserCacheManager.getActiveAccount: Adding active account filters cache schema"),this.setActiveAccount(i),i):null}const n=this.validateAndParseJson(t);return n?(this.logger.trace("BrowserCacheManager.getActiveAccount: Active account filters schema found"),this.getAccountInfoFilteredBy({homeAccountId:n.homeAccountId,localAccountId:n.localAccountId})):(this.logger.trace("BrowserCacheManager.getActiveAccount: No active account found"),null)}setActiveAccount(e){const t=this.generateCacheKey(U.ACTIVE_ACCOUNT_FILTERS),n=this.generateCacheKey(U.ACTIVE_ACCOUNT);if(e){this.logger.verbose("setActiveAccount: Active account set");const o={homeAccountId:e.homeAccountId,localAccountId:e.localAccountId};this.browserStorage.setItem(t,JSON.stringify(o)),this.browserStorage.setItem(n,e.localAccountId)}else this.logger.verbose("setActiveAccount: No account passed, active account not set"),this.browserStorage.removeItem(t),this.browserStorage.removeItem(n)}getThrottlingCache(e){const t=this.getItem(e);if(!t)return this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null;const n=this.validateAndParseJson(t);return!n||!Hn.isThrottlingEntity(e,n)?(this.logger.trace("BrowserCacheManager.getThrottlingCache: called, no cache hit"),null):(this.logger.trace("BrowserCacheManager.getThrottlingCache: cache hit"),he.toObject(new Hn,n))}setThrottlingCache(e,t){this.logger.trace("BrowserCacheManager.setThrottlingCache called"),this.setItem(e,JSON.stringify(t))}getTemporaryCache(e,t){const n=t?this.generateCacheKey(e):e;if(this.cacheConfig.storeAuthStateInCookie){const r=this.getItemCookie(n);if(r)return this.logger.trace("BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies"),r}const o=this.temporaryCacheStorage.getItem(n);if(!o){if(this.cacheConfig.cacheLocation===L.LocalStorage){const r=this.browserStorage.getItem(n);if(r)return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage"),r}return this.logger.trace("BrowserCacheManager.getTemporaryCache: No cache item found in local storage"),null}return this.logger.trace("BrowserCacheManager.getTemporaryCache: Temporary cache item returned"),o}setTemporaryCache(e,t,n){const o=n?this.generateCacheKey(e):e;this.temporaryCacheStorage.setItem(o,t),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie"),this.setItemCookie(o,t))}removeItem(e){this.browserStorage.removeItem(e),this.temporaryCacheStorage.removeItem(e),this.cacheConfig.storeAuthStateInCookie&&(this.logger.trace("BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie"),this.clearItemCookie(e))}containsKey(e){return this.browserStorage.containsKey(e)||this.temporaryCacheStorage.containsKey(e)}getKeys(){return[...this.browserStorage.getKeys(),...this.temporaryCacheStorage.getKeys()]}async clear(){await this.removeAllAccounts(),this.removeAppMetadata(),this.getKeys().forEach(e=>{(this.browserStorage.containsKey(e)||this.temporaryCacheStorage.containsKey(e))&&(e.indexOf(l.CACHE_PREFIX)!==-1||e.indexOf(this.clientId)!==-1)&&this.removeItem(e)}),this.internalStorage.clear()}async clearTokensAndKeysWithClaims(e){e.addQueueMeasurement(d.ClearTokensAndKeysWithClaims);const t=this.getTokenKeys(),n=[];t.accessToken.forEach(o=>{const r=this.getAccessTokenCredential(o);r!=null&&r.requestedClaimsHash&&o.includes(r.requestedClaimsHash.toLowerCase())&&n.push(this.removeAccessToken(o))}),await Promise.all(n),n.length>0&&this.logger.warning(`${n.length} access tokens with claims in the cache keys have been removed from the cache.`)}setItemCookie(e,t,n){let o=`${encodeURIComponent(e)}=${encodeURIComponent(t)};path=/;SameSite=Lax;`;if(n){const r=this.getCookieExpirationTime(n);o+=`expires=${r};`}this.cacheConfig.secureCookies&&(o+="Secure;"),document.cookie=o}getItemCookie(e){const t=`${encodeURIComponent(e)}=`,n=document.cookie.split(";");for(let o=0;o<n.length;o++){let r=n[o];for(;r.charAt(0)===" ";)r=r.substring(1);if(r.indexOf(t)===0)return decodeURIComponent(r.substring(t.length,r.length))}return l.EMPTY_STRING}clearMsalCookies(){const e=`${l.CACHE_PREFIX}.${this.clientId}`;document.cookie.split(";").forEach(n=>{for(;n.charAt(0)===" ";)n=n.substring(1);if(n.indexOf(e)===0){const o=n.split("=")[0];this.clearItemCookie(o)}})}clearItemCookie(e){this.setItemCookie(e,l.EMPTY_STRING,-1)}getCookieExpirationTime(e){const t=new Date;return new Date(t.getTime()+e*this.COOKIE_LIFE_MULTIPLIER).toUTCString()}getCache(){return this.browserStorage}setCache(){}generateCacheKey(e){return this.validateAndParseJson(e)?JSON.stringify(e):$.startsWith(e,l.CACHE_PREFIX)||$.startsWith(e,U.ADAL_ID_TOKEN)?e:`${l.CACHE_PREFIX}.${this.clientId}.${e}`}generateAuthorityKey(e){const{libraryState:{id:t}}=X.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${v.AUTHORITY}.${t}`)}generateNonceKey(e){const{libraryState:{id:t}}=X.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${v.NONCE_IDTOKEN}.${t}`)}generateStateKey(e){const{libraryState:{id:t}}=X.parseRequestState(this.cryptoImpl,e);return this.generateCacheKey(`${v.REQUEST_STATE}.${t}`)}getCachedAuthority(e){const t=this.generateStateKey(e),n=this.getTemporaryCache(t);if(!n)return null;const o=this.generateAuthorityKey(n);return this.getTemporaryCache(o)}updateCacheEntries(e,t,n,o,r){this.logger.trace("BrowserCacheManager.updateCacheEntries called");const i=this.generateStateKey(e);this.setTemporaryCache(i,e,!1);const a=this.generateNonceKey(e);this.setTemporaryCache(a,t,!1);const c=this.generateAuthorityKey(e);if(this.setTemporaryCache(c,n,!1),r){const h={credential:r.homeAccountId,type:Y.HOME_ACCOUNT_ID};this.setTemporaryCache(v.CCS_CREDENTIAL,JSON.stringify(h),!0)}else if(o){const h={credential:o,type:Y.UPN};this.setTemporaryCache(v.CCS_CREDENTIAL,JSON.stringify(h),!0)}}resetRequestCache(e){this.logger.trace("BrowserCacheManager.resetRequestCache called"),e&&(this.getKeys().forEach(t=>{t.indexOf(e)!==-1&&this.removeItem(t)}),this.removeItem(this.generateStateKey(e)),this.removeItem(this.generateNonceKey(e)),this.removeItem(this.generateAuthorityKey(e))),this.removeItem(this.generateCacheKey(v.REQUEST_PARAMS)),this.removeItem(this.generateCacheKey(v.ORIGIN_URI)),this.removeItem(this.generateCacheKey(v.URL_HASH)),this.removeItem(this.generateCacheKey(v.CORRELATION_ID)),this.removeItem(this.generateCacheKey(v.CCS_CREDENTIAL)),this.removeItem(this.generateCacheKey(v.NATIVE_REQUEST)),this.setInteractionInProgress(!1)}cleanRequestByState(e){if(this.logger.trace("BrowserCacheManager.cleanRequestByState called"),e){const t=this.generateStateKey(e),n=this.temporaryCacheStorage.getItem(t);this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n||l.EMPTY_STRING)}this.clearMsalCookies()}cleanRequestByInteractionType(e){this.logger.trace("BrowserCacheManager.cleanRequestByInteractionType called"),this.getKeys().forEach(t=>{if(t.indexOf(v.REQUEST_STATE)===-1)return;const n=this.temporaryCacheStorage.getItem(t);if(!n)return;const o=Cr.extractBrowserRequestState(this.cryptoImpl,n);o&&o.interactionType===e&&(this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${n}`),this.resetRequestCache(n))}),this.clearMsalCookies(),this.setInteractionInProgress(!1)}cacheCodeRequest(e){this.logger.trace("BrowserCacheManager.cacheCodeRequest called");const t=gn(JSON.stringify(e));this.setTemporaryCache(v.REQUEST_PARAMS,t,!0)}getCachedRequest(e){this.logger.trace("BrowserCacheManager.getCachedRequest called");const t=this.getTemporaryCache(v.REQUEST_PARAMS,!0);if(!t)throw m(jo);let n;try{n=JSON.parse(de(t))}catch(o){throw this.logger.errorPii(`Attempted to parse: ${t}`),this.logger.error(`Parsing cached token request threw with error: ${o}`),m(Wo)}if(this.removeItem(this.generateCacheKey(v.REQUEST_PARAMS)),!n.authority){const o=this.generateAuthorityKey(e),r=this.getTemporaryCache(o);if(!r)throw m(cn);n.authority=r}return n}getCachedNativeRequest(){this.logger.trace("BrowserCacheManager.getCachedNativeRequest called");const e=this.getTemporaryCache(v.NATIVE_REQUEST,!0);if(!e)return this.logger.trace("BrowserCacheManager.getCachedNativeRequest: No cached native request found"),null;const t=this.validateAndParseJson(e);return t||(this.logger.error("BrowserCacheManager.getCachedNativeRequest: Unable to parse native request"),null)}isInteractionInProgress(e){const t=this.getInteractionInProgress();return e?t===this.clientId:!!t}getInteractionInProgress(){const e=`${l.CACHE_PREFIX}.${v.INTERACTION_STATUS_KEY}`;return this.getTemporaryCache(e,!1)}setInteractionInProgress(e){const t=`${l.CACHE_PREFIX}.${v.INTERACTION_STATUS_KEY}`;if(e){if(this.getInteractionInProgress())throw m(Fo);this.setTemporaryCache(t,this.clientId,!1)}else!e&&this.getInteractionInProgress()===this.clientId&&this.removeItem(t)}getLegacyLoginHint(){const e=this.getTemporaryCache(U.ADAL_ID_TOKEN);e&&(this.browserStorage.removeItem(U.ADAL_ID_TOKEN),this.logger.verbose("Cached ADAL id token retrieved."));const t=this.getTemporaryCache(U.ID_TOKEN,!0);t&&(this.removeItem(this.generateCacheKey(U.ID_TOKEN)),this.logger.verbose("Cached MSAL.js v1 id token retrieved"));const n=t||e;if(n){const o=ue(n,de);if(o.preferred_username)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint"),o.preferred_username;if(o.upn)return this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint"),o.upn;this.logger.verbose("No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.")}return null}updateCredentialCacheKey(e,t){const n=Re(t);if(e!==n){const o=this.getItem(e);if(o)return this.removeItem(e),this.setItem(n,o),this.logger.verbose(`Updated an outdated ${t.credentialType} cache key`),n;this.logger.error(`Attempted to update an outdated ${t.credentialType} cache key but no item matching the outdated key was found in storage`)}return e}getRedirectRequestContext(){return this.getTemporaryCache(v.REDIRECT_CONTEXT,!0)}setRedirectRequestContext(e){this.setTemporaryCache(v.REDIRECT_CONTEXT,e,!0)}async hydrateCache(e,t){var a,c,h,u,f;const n=lt((a=e.account)==null?void 0:a.homeAccountId,(c=e.account)==null?void 0:c.environment,e.idToken,this.clientId,e.tenantId);let o;t.claims&&(o=await this.cryptoImpl.hashString(t.claims));const r=dt((h=e.account)==null?void 0:h.homeAccountId,e.account.environment,e.accessToken,this.clientId,e.tenantId,e.scopes.join(" "),((u=e.expiresOn)==null?void 0:u.getTime())||0,((f=e.extExpiresOn)==null?void 0:f.getTime())||0,de,void 0,e.tokenType,void 0,t.sshKid,t.claims,o),i=new be(void 0,n,r);return this.saveCacheRecord(i)}}const ls=(s,e)=>{const t={cacheLocation:L.MemoryStorage,temporaryCacheLocation:L.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};return new Kt(s,t,tt,e)};/*! @azure/msal-browser v3.4.0 2023-10-30 */const I={INITIALIZE_START:"msal:initializeStart",INITIALIZE_END:"msal:initializeEnd",ACCOUNT_ADDED:"msal:accountAdded",ACCOUNT_REMOVED:"msal:accountRemoved",LOGIN_START:"msal:loginStart",LOGIN_SUCCESS:"msal:loginSuccess",LOGIN_FAILURE:"msal:loginFailure",ACQUIRE_TOKEN_START:"msal:acquireTokenStart",ACQUIRE_TOKEN_SUCCESS:"msal:acquireTokenSuccess",ACQUIRE_TOKEN_FAILURE:"msal:acquireTokenFailure",ACQUIRE_TOKEN_NETWORK_START:"msal:acquireTokenFromNetworkStart",SSO_SILENT_START:"msal:ssoSilentStart",SSO_SILENT_SUCCESS:"msal:ssoSilentSuccess",SSO_SILENT_FAILURE:"msal:ssoSilentFailure",ACQUIRE_TOKEN_BY_CODE_START:"msal:acquireTokenByCodeStart",ACQUIRE_TOKEN_BY_CODE_SUCCESS:"msal:acquireTokenByCodeSuccess",ACQUIRE_TOKEN_BY_CODE_FAILURE:"msal:acquireTokenByCodeFailure",HANDLE_REDIRECT_START:"msal:handleRedirectStart",HANDLE_REDIRECT_END:"msal:handleRedirectEnd",POPUP_OPENED:"msal:popupOpened",LOGOUT_START:"msal:logoutStart",LOGOUT_SUCCESS:"msal:logoutSuccess",LOGOUT_FAILURE:"msal:logoutFailure",LOGOUT_END:"msal:logoutEnd",RESTORE_FROM_BFCACHE:"msal:restoreFromBFCache"};/*! @azure/msal-browser v3.4.0 2023-10-30 */class ds{constructor(e,t){this.eventCallbacks=new Map,this.logger=e,this.browserCrypto=t,this.listeningToStorageEvents=!1,this.handleAccountCacheChange=this.handleAccountCacheChange.bind(this)}addEventCallback(e){if(typeof window<"u"){const t=pe();return this.eventCallbacks.set(t,e),this.logger.verbose(`Event callback registered with id: ${t}`),t}return null}removeEventCallback(e){this.eventCallbacks.delete(e),this.logger.verbose(`Event callback ${e} removed.`)}enableAccountStorageEvents(){typeof window>"u"||(this.listeningToStorageEvents?this.logger.verbose("Account storage listener already registered."):(this.logger.verbose("Adding account storage listener."),this.listeningToStorageEvents=!0,window.addEventListener("storage",this.handleAccountCacheChange)))}disableAccountStorageEvents(){typeof window>"u"||(this.listeningToStorageEvents?(this.logger.verbose("Removing account storage listener."),window.removeEventListener("storage",this.handleAccountCacheChange),this.listeningToStorageEvents=!1):this.logger.verbose("No account storage listener registered."))}emitEvent(e,t,n,o){if(typeof window<"u"){const r={eventType:e,interactionType:t||null,payload:n||null,error:o||null,timestamp:Date.now()};this.logger.info(`Emitting event: ${e}`),this.eventCallbacks.forEach((i,a)=>{this.logger.verbose(`Emitting event to callback ${a}: ${e}`),i.apply(null,[r])})}}handleAccountCacheChange(e){try{const t=e.newValue||e.oldValue;if(!t)return;const n=JSON.parse(t);if(typeof n!="object"||!P.isAccountEntity(n))return;const r=he.toObject(new P,n).getAccountInfo();!e.oldValue&&e.newValue?(this.logger.info("Account was added to cache in a different window"),this.emitEvent(I.ACCOUNT_ADDED,void 0,r)):!e.newValue&&e.oldValue&&(this.logger.info("Account was removed from cache in a different window"),this.emitEvent(I.ACCOUNT_REMOVED,void 0,r))}catch{return}}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class _r{constructor(e,t,n,o,r,i,a,c,h){this.config=e,this.browserStorage=t,this.browserCrypto=n,this.networkClient=this.config.system.networkClient,this.eventHandler=r,this.navigationClient=i,this.nativeMessageHandler=c,this.correlationId=h||pe(),this.logger=o.clone(J.MSAL_SKU,un,this.correlationId),this.performanceClient=a}async clearCacheOnLogout(e){if(e){P.accountInfoIsEqual(e,this.browserStorage.getActiveAccount(),!1)&&(this.logger.verbose("Setting active account to null"),this.browserStorage.setActiveAccount(null));try{await this.browserStorage.removeAccount(P.generateAccountCacheKey(e)),this.logger.verbose("Cleared cache items belonging to the account provided in the logout request.")}catch{this.logger.error("Account provided in logout request was not found. Local cache unchanged.")}}else try{this.logger.verbose("No account provided in logout request, clearing all cache items.",this.correlationId),await this.browserStorage.clear(),await this.browserCrypto.clearKeystore()}catch{this.logger.error("Attempted to clear all MSAL cache items and failed. Local cache unchanged.")}}async initializeBaseRequest(e,t){this.performanceClient.addQueueMeasurement(d.InitializeBaseRequest,e.correlationId);const n=e.authority||this.config.auth.authority;t&&await this.validateRequestAuthority(n,t);const o=[...e&&e.scopes||[]],r={...e,correlationId:this.correlationId,authority:n,scopes:o};if(!r.authenticationScheme)r.authenticationScheme=R.BEARER,this.logger.verbose(`Authentication Scheme wasn't explicitly set in request, defaulting to "Bearer" request`);else{if(r.authenticationScheme===R.SSH){if(!e.sshJwk)throw k(ut);if(!e.sshKid)throw k(Eo)}this.logger.verbose(`Authentication Scheme set to "${r.authenticationScheme}" as configured in Auth request`)}return this.config.cache.claimsBasedCachingEnabled&&e.claims&&!$.isEmptyObj(e.claims)&&(r.requestedClaimsHash=await this.browserCrypto.hashString(e.claims)),r}getRedirectUri(e){this.logger.verbose("getRedirectUri called");const t=e||this.config.auth.redirectUri||se();return _.getAbsoluteUrl(t,se())}async validateRequestAuthority(e,t){if(!(await this.getDiscoveredAuthority(e)).isAlias(t.environment))throw k(vo)}initializeServerTelemetryManager(e,t){this.logger.verbose("initializeServerTelemetryManager called");const n={clientId:this.config.auth.clientId,correlationId:this.correlationId,apiId:e,forceRefresh:t||!1,wrapperSKU:this.browserStorage.getWrapperMetadata()[0],wrapperVer:this.browserStorage.getWrapperMetadata()[1]};return new it(n,this.browserStorage)}async getDiscoveredAuthority(e){this.logger.verbose("getDiscoveredAuthority called");const t={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata};return e?(this.logger.verbose("Creating discovered authority with request authority"),await ye.createDiscoveredInstance(e,this.config.system.networkClient,this.browserStorage,t,this.logger)):(this.logger.verbose("Creating discovered authority with configured authority"),await ye.createDiscoveredInstance(this.config.auth.authority,this.config.system.networkClient,this.browserStorage,t,this.logger))}}/*! @azure/msal-browser v3.4.0 2023-10-30 */const us=32;async function gs(s,e,t){s.addQueueMeasurement(d.GeneratePkceCodes,t);const n=$e(ps,d.GenerateCodeVerifier,e,s,t)(s,e,t),o=await p(ms,d.GenerateCodeChallengeFromVerifier,e,s,t)(n,s,e,t);return{verifier:n,challenge:o}}function ps(s,e,t){try{const n=new Uint8Array(us);return $e(ns,d.GetRandomValues,e,s,t)(n),ct(n)}catch{throw m(sn)}}async function ms(s,e,t,n){e.addQueueMeasurement(d.GenerateCodeChallengeFromVerifier,n);try{const o=await p(gr,d.Sha256Digest,t,e,n)(s,e,n);return ct(new Uint8Array(o))}catch{throw m(sn)}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Le extends _r{async initializeAuthorizationCodeRequest(e){this.performanceClient.addQueueMeasurement(d.StandardInteractionClientInitializeAuthorizationCodeRequest,e.correlationId);const t=await p(gs,d.GeneratePkceCodes,this.logger,this.performanceClient,this.correlationId)(this.performanceClient,this.logger,this.correlationId),n={...e,redirectUri:e.redirectUri,code:l.EMPTY_STRING,codeVerifier:t.verifier};return e.codeChallenge=t.challenge,e.codeChallengeMethod=l.S256_CODE_CHALLENGE_METHOD,n}initializeLogoutRequest(e){this.logger.verbose("initializeLogoutRequest called",e==null?void 0:e.correlationId);const t={correlationId:this.correlationId||pe(),...e};if(e)if(e.logoutHint)this.logger.verbose("logoutHint has already been set in logoutRequest");else if(e.account){const n=this.getLogoutHintFromIdTokenClaims(e.account);n&&(this.logger.verbose("Setting logoutHint to login_hint ID Token Claim value for the account provided"),t.logoutHint=n)}else this.logger.verbose("logoutHint was not set and account was not passed into logout request, logoutHint will not be set");else this.logger.verbose("logoutHint will not be set since no logout request was configured");return!e||e.postLogoutRedirectUri!==null?e&&e.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to uri set on logout request",t.correlationId),t.postLogoutRedirectUri=_.getAbsoluteUrl(e.postLogoutRedirectUri,se())):this.config.auth.postLogoutRedirectUri===null?this.logger.verbose("postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect",t.correlationId):this.config.auth.postLogoutRedirectUri?(this.logger.verbose("Setting postLogoutRedirectUri to configured uri",t.correlationId),t.postLogoutRedirectUri=_.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri,se())):(this.logger.verbose("Setting postLogoutRedirectUri to current page",t.correlationId),t.postLogoutRedirectUri=_.getAbsoluteUrl(se(),se())):this.logger.verbose("postLogoutRedirectUri passed as null, not setting post logout redirect uri",t.correlationId),t}getLogoutHintFromIdTokenClaims(e){const t=e.idTokenClaims;if(t){if(t.login_hint)return t.login_hint;this.logger.verbose("The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request")}else this.logger.verbose("The provided account does not contain ID Token Claims, logoutHint will not be added to logout request");return null}async createAuthCodeClient(e,t,n){this.performanceClient.addQueueMeasurement(d.StandardInteractionClientCreateAuthCodeClient,this.correlationId);const o=await p(this.getClientConfiguration.bind(this),d.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,n);return new Po(o,this.performanceClient)}async getClientConfiguration(e,t,n){this.performanceClient.addQueueMeasurement(d.StandardInteractionClientGetClientConfiguration,this.correlationId);const o=await p(this.getDiscoveredAuthority.bind(this),d.StandardInteractionClientGetDiscoveredAuthority,this.logger,this.performanceClient,this.correlationId)(t,n),r=this.config.system.loggerOptions;return{authOptions:{clientId:this.config.auth.clientId,authority:o,clientCapabilities:this.config.auth.clientCapabilities},systemOptions:{tokenRenewalOffsetSeconds:this.config.system.tokenRenewalOffsetSeconds,preventCorsPreflight:!0},loggerOptions:{loggerCallback:r.loggerCallback,piiLoggingEnabled:r.piiLoggingEnabled,logLevel:r.logLevel,correlationId:this.correlationId},cacheOptions:{claimsBasedCachingEnabled:this.config.cache.claimsBasedCachingEnabled},cryptoInterface:this.browserCrypto,networkInterface:this.networkClient,storageInterface:this.browserStorage,serverTelemetryManager:e,libraryInfo:{sku:J.MSAL_SKU,version:un,cpu:l.EMPTY_STRING,os:l.EMPTY_STRING},telemetry:this.config.telemetry}}validateAndExtractStateFromHash(e,t,n){if(this.logger.verbose("validateAndExtractStateFromHash called",n),!e.state)throw m(Uo);const o=Cr.extractBrowserRequestState(this.browserCrypto,e.state);if(!o)throw m(Do);if(o.interactionType!==t)throw m(Ko);return this.logger.verbose("Returning state from hash",n),e.state}async getDiscoveredAuthority(e,t){this.performanceClient.addQueueMeasurement(d.StandardInteractionClientGetDiscoveredAuthority,this.correlationId);const n={protocolMode:this.config.auth.protocolMode,OIDCOptions:this.config.auth.OIDCOptions,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache},o=e||this.config.auth.authority,r=F.generateAuthority(o,t||this.config.auth.azureCloudOptions);return await p(ye.createDiscoveredInstance.bind(ye),d.AuthorityFactoryCreateDiscoveredInstance,this.logger,this.performanceClient,this.correlationId)(r,this.config.system.networkClient,this.browserStorage,n,this.logger,this.performanceClient,this.correlationId)}async initializeAuthorizationRequest(e,t){this.performanceClient.addQueueMeasurement(d.StandardInteractionClientInitializeAuthorizationRequest,this.correlationId);const n=this.getRedirectUri(e.redirectUri),o={interactionType:t},r=X.setRequestState(this.browserCrypto,e&&e.state||l.EMPTY_STRING,o),a={...await p(this.initializeBaseRequest.bind(this),d.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)(e),redirectUri:n,state:r,nonce:e.nonce||pe(),responseMode:this.config.auth.OIDCOptions.serverResponseType},c=e.account||this.browserStorage.getActiveAccount();if(c&&(this.logger.verbose("Setting validated request account",this.correlationId),this.logger.verbosePii(`Setting validated request account: ${c.homeAccountId}`,this.correlationId),a.account=c),!a.loginHint&&!c){const h=this.browserStorage.getLegacyLoginHint();h&&(a.loginHint=h)}return a}}/*! @azure/msal-browser v3.4.0 2023-10-30 */const fs="ContentError",yr="user_switch";/*! @azure/msal-browser v3.4.0 2023-10-30 */const Cs="USER_INTERACTION_REQUIRED",_s="USER_CANCEL",ys="NO_NETWORK",Ts="PERSISTENT_ERROR",Is="DISABLED",Es="ACCOUNT_UNAVAILABLE";/*! @azure/msal-browser v3.4.0 2023-10-30 */const As=-2147186943,Ss={[yr]:"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again."};class ie extends N{constructor(e,t,n){super(e,t),Object.setPrototypeOf(this,ie.prototype),this.name="NativeAuthError",this.ext=n}}function we(s){if(s.ext&&s.ext.status&&(s.ext.status===Ts||s.ext.status===Is)||s.ext&&s.ext.error&&s.ext.error===As)return!0;switch(s.errorCode){case fs:return!0;default:return!1}}function Ft(s,e,t){if(t&&t.status)switch(t.status){case Es:return No(Oo);case Cs:return new ne(s,e);case _s:return m(Ie);case ys:return m(st)}return new ie(s,Ss[s]||e,t)}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Tr extends Le{async acquireToken(e){this.performanceClient.addQueueMeasurement(d.SilentCacheClientAcquireToken,e.correlationId);const t=this.initializeServerTelemetryManager(b.acquireTokenSilent_silentFlow),n=await this.createSilentFlowClient(t,e.authority,e.azureCloudOptions);this.logger.verbose("Silent auth client created");try{const r=(await p(n.acquireCachedToken.bind(n),d.SilentFlowClientAcquireCachedToken,this.logger,this.performanceClient,e.correlationId)(e))[0];return this.performanceClient.addFields({fromCache:!0},e.correlationId),r}catch(o){throw o instanceof Ve&&o.errorCode===hn&&this.logger.verbose("Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair."),o}}logout(e){this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e);return this.clearCacheOnLogout(t==null?void 0:t.account)}async createSilentFlowClient(e,t,n){const o=await p(this.getClientConfiguration.bind(this),d.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,n);return new wi(o,this.performanceClient)}async initializeSilentRequest(e,t){this.performanceClient.addQueueMeasurement(d.InitializeSilentRequest,this.correlationId);const n=await p(this.initializeBaseRequest.bind(this),d.InitializeBaseRequest,this.logger,this.performanceClient,this.correlationId)(e,t);return{...e,...n,account:t,forceRefresh:e.forceRefresh||!1}}}/*! @azure/msal-browser v3.4.0 2023-10-30 */const At={BROKER_CLIENT_ID:"brk_client_id",BROKER_REDIRECT_URI:"brk_redirect_uri"};class Oe extends _r{constructor(e,t,n,o,r,i,a,c,h,u,f,E){super(e,t,n,o,r,i,c,h,E),this.apiId=a,this.accountId=u,this.nativeMessageHandler=h,this.nativeStorageManager=f,this.silentCacheClient=new Tr(e,this.nativeStorageManager,n,o,r,i,c,h,E)}async acquireToken(e){this.performanceClient.addQueueMeasurement(d.NativeInteractionClientAcquireToken,e.correlationId),this.logger.trace("NativeInteractionClient - acquireToken called.");const t=this.performanceClient.startMeasurement(d.NativeInteractionClientAcquireToken,e.correlationId),n=x.nowSeconds(),o=await this.initializeNativeRequest(e);try{const c=await this.acquireTokensFromCache(this.accountId,o);return t.end({success:!0,isNativeBroker:!1,fromCache:!0}),c}catch{this.logger.info("MSAL internal Cache does not contain tokens, proceed to make a native call")}const r={method:Ce.GetToken,request:o},i=await this.nativeMessageHandler.sendMessage(r),a=this.validateNativeResponse(i);return this.handleNativeResponse(a,o,n).then(c=>(t.end({success:!0,isNativeBroker:!0,requestId:c.requestId}),c)).catch(c=>{throw t.end({success:!1,errorCode:c.errorCode,subErrorCode:c.subError,isNativeBroker:!0}),c})}createSilentCacheRequest(e,t){return{authority:e.authority,correlationId:this.correlationId,scopes:M.fromString(e.scope).asArray(),account:t,forceRefresh:!1}}async acquireTokensFromCache(e,t){if(!e)throw this.logger.warning("NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided"),g(Rt);const n=this.browserStorage.getBaseAccountInfo({nativeAccountId:e});if(!n)throw g(Rt);try{const o=this.createSilentCacheRequest(t,n),r=await this.silentCacheClient.acquireToken(o),i={...n,idTokenClaims:r==null?void 0:r.idTokenClaims};return{...r,account:i}}catch(o){throw o}}async acquireTokenRedirect(e){this.logger.trace("NativeInteractionClient - acquireTokenRedirect called.");const t=await this.initializeNativeRequest(e),n={method:Ce.GetToken,request:t};try{const i=await this.nativeMessageHandler.sendMessage(n);this.validateNativeResponse(i)}catch(i){if(i instanceof ie&&we(i))throw i}this.browserStorage.setTemporaryCache(v.NATIVE_REQUEST,JSON.stringify(t),!0);const o={apiId:b.acquireTokenRedirect,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},r=this.config.auth.navigateToLoginRequestUrl?window.location.href:this.getRedirectUri(e.redirectUri);await this.navigationClient.navigateExternal(r,o)}async handleRedirectPromise(){if(this.logger.trace("NativeInteractionClient - handleRedirectPromise called."),!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const e=this.browserStorage.getCachedNativeRequest();if(!e)return this.logger.verbose("NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null."),null;const{prompt:t,...n}=e;t&&this.logger.verbose("NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window."),this.browserStorage.removeItem(this.browserStorage.generateCacheKey(v.NATIVE_REQUEST));const o={method:Ce.GetToken,request:n},r=x.nowSeconds();try{this.logger.verbose("NativeInteractionClient - handleRedirectPromise sending message to native broker.");const i=await this.nativeMessageHandler.sendMessage(o);this.validateNativeResponse(i);const a=this.handleNativeResponse(i,n,r);return this.browserStorage.setInteractionInProgress(!1),a}catch(i){throw this.browserStorage.setInteractionInProgress(!1),i}}logout(){return this.logger.trace("NativeInteractionClient - logout called."),Promise.reject("Logout not implemented yet")}async handleNativeResponse(e,t,n){if(this.logger.trace("NativeInteractionClient - handleNativeResponse called."),e.account.id!==t.accountId)throw Ft(yr);const o=await this.getDiscoveredAuthority(t.authority),r=ue(e.id_token,de),i=this.createHomeAccountIdentifier(e,r),a=P.createAccount({homeAccountId:i,idTokenClaims:r,clientInfo:e.client_info,nativeAccountId:e.account.id},o),c=await this.generateAuthenticationResult(e,t,r,a,o.canonicalAuthority,n);return this.cacheAccount(a),this.cacheNativeTokens(e,t,i,r,c.accessToken,c.tenantId,n),c}createHomeAccountIdentifier(e,t){return P.generateHomeAccountId(e.client_info||l.EMPTY_STRING,W.Default,this.logger,this.browserCrypto,t)}generateScopes(e,t){return e.scope?M.fromString(e.scope):M.fromString(t.scope)}async generatePopAccessToken(e,t){if(t.tokenType===R.POP){if(e.shr)return this.logger.trace("handleNativeServerResponse: SHR is enabled in native layer"),e.shr;const n=new Pe(this.browserCrypto),o={resourceRequestMethod:t.resourceRequestMethod,resourceRequestUri:t.resourceRequestUri,shrClaims:t.shrClaims,shrNonce:t.shrNonce};if(!t.keyId)throw g(Yt);return await n.signPopToken(e.access_token,t.keyId,o)}else return e.access_token}async generateAuthenticationResult(e,t,n,o,r,i){const a=this.addTelemetryFromNativeResponse(e),c=e.scope?M.fromString(e.scope):M.fromString(t.scope),h=e.account.properties||{},u=h.UID||n.oid||n.sub||l.EMPTY_STRING,f=h.TenantId||n.tid||l.EMPTY_STRING,S=(n?Object.assign(new P,{...o,idTokenClaims:n}):o).getAccountInfo(),O=await this.generatePopAccessToken(e,t),w=t.tokenType===R.POP?R.POP:R.BEARER;return{authority:r,uniqueId:u,tenantId:f,scopes:c.asArray(),account:S,idToken:e.id_token,idTokenClaims:n,accessToken:O,fromCache:a?this.isResponseFromCache(a):!1,expiresOn:new Date(Number(i+e.expires_in)*1e3),tokenType:w,correlationId:this.correlationId,state:e.state,fromNativeBroker:!0}}cacheAccount(e){this.browserStorage.setAccount(e),this.browserStorage.removeAccountContext(e).catch(t=>{this.logger.error(`Error occurred while removing account context from browser storage. ${t}`)})}cacheNativeTokens(e,t,n,o,r,i,a){const c=lt(n,t.authority,e.id_token||"",t.clientId,o.tid||""),h=t.tokenType===R.POP?l.SHR_NONCE_VALIDITY:(typeof e.expires_in=="string"?parseInt(e.expires_in,10):e.expires_in)||0,u=a+h,f=this.generateScopes(e,t),E=dt(n,t.authority,r,t.clientId,o.tid||i,f.printScopes(),u,0,de),S=new be(void 0,c,E);this.nativeStorageManager.saveCacheRecord(S,t.storeInCache)}addTelemetryFromNativeResponse(e){const t=this.getMATSFromResponse(e);return t?(this.performanceClient.addFields({extensionId:this.nativeMessageHandler.getExtensionId(),extensionVersion:this.nativeMessageHandler.getExtensionVersion(),matsBrokerVersion:t.broker_version,matsAccountJoinOnStart:t.account_join_on_start,matsAccountJoinOnEnd:t.account_join_on_end,matsDeviceJoin:t.device_join,matsPromptBehavior:t.prompt_behavior,matsApiErrorCode:t.api_error_code,matsUiVisible:t.ui_visible,matsSilentCode:t.silent_code,matsSilentBiSubCode:t.silent_bi_sub_code,matsSilentMessage:t.silent_message,matsSilentStatus:t.silent_status,matsHttpStatus:t.http_status,matsHttpEventCount:t.http_event_count},this.correlationId),t):null}validateNativeResponse(e){if(e.hasOwnProperty("access_token")&&e.hasOwnProperty("id_token")&&e.hasOwnProperty("client_info")&&e.hasOwnProperty("account")&&e.hasOwnProperty("scope")&&e.hasOwnProperty("expires_in"))return e;throw Yn(Bt,"Response missing expected properties.")}getMATSFromResponse(e){if(e.properties.MATS)try{return JSON.parse(e.properties.MATS)}catch{this.logger.error("NativeInteractionClient - Error parsing MATS telemetry, returning null instead")}return null}isResponseFromCache(e){return typeof e.is_cached>"u"?(this.logger.verbose("NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false."),!1):!!e.is_cached}async initializeNativeRequest(e){this.logger.trace("NativeInteractionClient - initializeNativeRequest called");const t=e.authority||this.config.auth.authority;e.account&&await this.validateRequestAuthority(t,e.account);const n=new _(t);n.validateAsUri();const{scopes:o,...r}=e,i=new M(o||[]);i.appendScopes(qe);const a=()=>{switch(this.apiId){case b.ssoSilent:case b.acquireTokenSilent_silentFlow:return this.logger.trace("initializeNativeRequest: silent request sets prompt to none"),B.NONE}if(!e.prompt){this.logger.trace("initializeNativeRequest: prompt was not provided");return}switch(e.prompt){case B.NONE:case B.CONSENT:case B.LOGIN:return this.logger.trace("initializeNativeRequest: prompt is compatible with native flow"),e.prompt;default:throw this.logger.trace(`initializeNativeRequest: prompt = ${e.prompt} is not compatible with native flow`),m(ar)}},c={...r,accountId:this.accountId,clientId:this.config.auth.clientId,authority:n.urlString,scope:i.printScopes(),redirectUri:this.getRedirectUri(e.redirectUri),prompt:a(),correlationId:this.correlationId,tokenType:e.authenticationScheme,windowTitleSubstring:document.title,extraParameters:{...e.extraQueryParameters,...e.tokenQueryParameters},extendedExpiryToken:!1};if(this.handleExtraBrokerParams(c),c.extraParameters=c.extraParameters||{},c.extraParameters.telemetry=De.MATS_TELEMETRY,e.authenticationScheme===R.POP){const h={resourceRequestUri:e.resourceRequestUri,resourceRequestMethod:e.resourceRequestMethod,shrClaims:e.shrClaims,shrNonce:e.shrNonce},u=new Pe(this.browserCrypto),f=await p(u.generateCnf.bind(u),d.PopTokenGenerateCnf,this.logger,this.performanceClient,this.correlationId)(h,this.logger);c.reqCnf=f.reqCnfHash,c.keyId=f.kid}return c}handleExtraBrokerParams(e){if(e.extraParameters&&e.extraParameters.hasOwnProperty(At.BROKER_CLIENT_ID)&&e.extraParameters.hasOwnProperty(At.BROKER_REDIRECT_URI)&&e.extraParameters.hasOwnProperty(T.CLIENT_ID)){const t=e.extraParameters[T.CLIENT_ID],n=e.redirectUri,o=e.extraParameters[At.BROKER_REDIRECT_URI];e.extraParameters={child_client_id:t,child_redirect_uri:n},e.redirectUri=o}}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class te{constructor(e,t,n,o){this.logger=e,this.handshakeTimeoutMs=t,this.extensionId=o,this.resolvers=new Map,this.handshakeResolvers=new Map,this.messageChannel=new MessageChannel,this.windowListener=this.onWindowMessage.bind(this),this.performanceClient=n,this.handshakeEvent=n.startMeasurement(d.NativeMessageHandlerHandshake)}async sendMessage(e){this.logger.trace("NativeMessageHandler - sendMessage called.");const t={channel:De.CHANNEL_ID,extensionId:this.extensionId,responseId:pe(),body:e};return this.logger.trace("NativeMessageHandler - Sending request to browser extension"),this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(t)}`),this.messageChannel.port1.postMessage(t),new Promise((n,o)=>{this.resolvers.set(t.responseId,{resolve:n,reject:o})})}static async createProvider(e,t,n){e.trace("NativeMessageHandler - createProvider called.");try{const o=new te(e,t,n,De.PREFERRED_EXTENSION_ID);return await o.sendHandshakeRequest(),o}catch{const r=new te(e,t,n);return await r.sendHandshakeRequest(),r}}async sendHandshakeRequest(){this.logger.trace("NativeMessageHandler - sendHandshakeRequest called."),window.addEventListener("message",this.windowListener,!1);const e={channel:De.CHANNEL_ID,extensionId:this.extensionId,responseId:pe(),body:{method:Ce.HandshakeRequest}};return this.handshakeEvent.add({extensionId:this.extensionId,extensionHandshakeTimeoutMs:this.handshakeTimeoutMs}),this.messageChannel.port1.onmessage=t=>{this.onChannelMessage(t)},window.postMessage(e,window.origin,[this.messageChannel.port2]),new Promise((t,n)=>{this.handshakeResolvers.set(e.responseId,{resolve:t,reject:n}),this.timeoutId=window.setTimeout(()=>{window.removeEventListener("message",this.windowListener,!1),this.messageChannel.port1.close(),this.messageChannel.port2.close(),this.handshakeEvent.end({extensionHandshakeTimedOut:!0,success:!1}),n(m(rr)),this.handshakeResolvers.delete(e.responseId)},this.handshakeTimeoutMs)})}onWindowMessage(e){if(this.logger.trace("NativeMessageHandler - onWindowMessage called"),e.source!==window)return;const t=e.data;if(!(!t.channel||t.channel!==De.CHANNEL_ID)&&!(t.extensionId&&t.extensionId!==this.extensionId)&&t.body.method===Ce.HandshakeRequest){const n=this.handshakeResolvers.get(t.responseId);if(!n){this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${t.responseId}`);return}this.logger.verbose(t.extensionId?`Extension with id: ${t.extensionId} not installed`:"No extension installed"),clearTimeout(this.timeoutId),this.messageChannel.port1.close(),this.messageChannel.port2.close(),window.removeEventListener("message",this.windowListener,!1),this.handshakeEvent.end({success:!1,extensionInstalled:!1}),n.reject(m(ir))}}onChannelMessage(e){this.logger.trace("NativeMessageHandler - onChannelMessage called.");const t=e.data,n=this.resolvers.get(t.responseId),o=this.handshakeResolvers.get(t.responseId);try{const r=t.body.method;if(r===Ce.Response){if(!n)return;const i=t.body.response;if(this.logger.trace("NativeMessageHandler - Received response from browser extension"),this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(i)}`),i.status!=="Success")n.reject(Ft(i.code,i.description,i.ext));else if(i.result)i.result.code&&i.result.description?n.reject(Ft(i.result.code,i.result.description,i.result.ext)):n.resolve(i.result);else throw Yn(Bt,"Event does not contain result.");this.resolvers.delete(t.responseId)}else if(r===Ce.HandshakeResponse){if(!o){this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${t.responseId}`);return}clearTimeout(this.timeoutId),window.removeEventListener("message",this.windowListener,!1),this.extensionId=t.extensionId,this.extensionVersion=t.body.version,this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`),this.handshakeEvent.end({extensionInstalled:!0,success:!0}),o.resolve(),this.handshakeResolvers.delete(t.responseId)}}catch(r){this.logger.error("Error parsing response from WAM Extension"),this.logger.errorPii(`Error parsing response from WAM Extension: ${r}`),this.logger.errorPii(`Unable to parse ${e}`),n?n.reject(r):o&&o.reject(r)}}getExtensionId(){return this.extensionId}getExtensionVersion(){return this.extensionVersion}static isNativeAvailable(e,t,n,o){if(t.trace("isNativeAvailable called"),!e.system.allowNativeBroker)return t.trace("isNativeAvailable: allowNativeBroker is not enabled, returning false"),!1;if(!n)return t.trace("isNativeAvailable: WAM extension provider is not initialized, returning false"),!1;if(o)switch(o){case R.BEARER:case R.POP:return t.trace("isNativeAvailable: authenticationScheme is supported, returning true"),!0;default:return t.trace("isNativeAvailable: authenticationScheme is not supported, returning false"),!1}return!0}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class fn{constructor(e,t,n,o,r){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=o,this.performanceClient=r}async handleCodeResponseFromHash(e,t){if(this.performanceClient.addQueueMeasurement(d.HandleCodeResponseFromHash,t.correlationId),!e)throw m(mt);let n;try{n=this.authModule.handleFragmentResponse(e,t.state)}catch(o){throw o instanceof ge&&o.subError===Ie?m(Ie):o}return p(this.handleCodeResponseFromServer.bind(this),d.HandleCodeResponseFromServer,this.logger,this.performanceClient,t.correlationId)(n,t)}async handleCodeResponseFromServer(e,t,n=!0){if(this.performanceClient.addQueueMeasurement(d.HandleCodeResponseFromServer,t.correlationId),this.logger.trace("InteractionHandler.handleCodeResponseFromServer called"),this.authCodeRequest.code=e.code,e.cloud_instance_host_name&&await p(this.authModule.updateAuthority.bind(this.authModule),d.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,t.correlationId)(e.cloud_instance_host_name,t.correlationId),n&&(e.nonce=t.nonce||void 0),e.state=t.state,e.client_info)this.authCodeRequest.clientInfo=e.client_info;else{const r=this.createCcsCredentials(t);r&&(this.authCodeRequest.ccsCredential=r)}return await p(this.authModule.acquireToken.bind(this.authModule),d.AuthClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(this.authCodeRequest,e)}createCcsCredentials(e){return e.account?{credential:e.account.homeAccountId,type:Y.HOME_ACCOUNT_ID}:e.loginHint?{credential:e.loginHint,type:Y.UPN}:null}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class vs extends Le{constructor(e,t,n,o,r,i,a,c,h,u){super(e,t,n,o,r,i,a,h,u),this.unloadWindow=this.unloadWindow.bind(this),this.nativeStorage=c}acquireToken(e){try{const t=this.generatePopupName(e.scopes||qe,e.authority||this.config.auth.authority),n=e.popupWindowAttributes||{};if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true, acquiring token"),this.acquireTokenPopupAsync(e,t,n);{this.logger.verbose("asyncPopup set to false, opening popup before acquiring token");const o=this.openSizedPopup("about:blank",t,n);return this.acquireTokenPopupAsync(e,t,n,o)}}catch(t){return Promise.reject(t)}}logout(e){try{this.logger.verbose("logoutPopup called");const t=this.initializeLogoutRequest(e),n=this.generateLogoutPopupName(t),o=e&&e.authority,r=e&&e.mainWindowRedirectUri,i=(e==null?void 0:e.popupWindowAttributes)||{};if(this.config.system.asyncPopups)return this.logger.verbose("asyncPopups set to true"),this.logoutPopupAsync(t,n,i,o,void 0,r);{this.logger.verbose("asyncPopup set to false, opening popup");const a=this.openSizedPopup("about:blank",n,i);return this.logoutPopupAsync(t,n,i,o,a,r)}}catch(t){return Promise.reject(t)}}async acquireTokenPopupAsync(e,t,n,o){this.logger.verbose("acquireTokenPopupAsync called");const r=this.initializeServerTelemetryManager(b.acquireTokenPopup),i=await p(this.initializeAuthorizationRequest.bind(this),d.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,C.Popup);lr(i.authority);try{const a=await p(this.initializeAuthorizationCodeRequest.bind(this),d.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(i),c=await p(this.createAuthCodeClient.bind(this),d.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(r,i.authority,i.azureCloudOptions),h=te.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme);let u;h&&(u=this.performanceClient.startMeasurement(d.FetchAccountIdWithNativeBroker,e.correlationId));const f=await c.getAuthCodeUrl({...i,nativeBroker:h}),E=new fn(c,this.browserStorage,a,this.logger,this.performanceClient),S={popup:o,popupName:t,popupWindowAttributes:n},O=this.initiateAuthRequest(f,S);this.eventHandler.emitEvent(I.POPUP_OPENED,C.Popup,{popupWindow:O},null);const w=await this.monitorPopupForHash(O),q=_.getDeserializedHash(w);if(Z.removeThrottle(this.browserStorage,this.config.auth.clientId,a),q.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),u&&u.end({success:!0,isNativeBroker:!0}),!this.nativeMessageHandler)throw m(Ye);const G=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,q.accountId,this.nativeStorage,i.correlationId),{userRequestState:Ae}=X.parseRequestState(this.browserCrypto,i.state);return G.acquireToken({...i,state:Ae,prompt:void 0})}return await E.handleCodeResponseFromHash(w,i)}catch(a){throw o&&o.close(),a instanceof N&&(a.setCorrelationId(this.correlationId),r.cacheFailedRequest(a)),a}}async logoutPopupAsync(e,t,n,o,r,i){var c,h;this.logger.verbose("logoutPopupAsync called"),this.eventHandler.emitEvent(I.LOGOUT_START,C.Popup,e);const a=this.initializeServerTelemetryManager(b.logoutPopup);try{await this.clearCacheOnLogout(e.account);const u=await p(this.createAuthCodeClient.bind(this),d.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(a,o);try{u.authority.endSessionEndpoint}catch{if((c=e.account)!=null&&c.homeAccountId&&e.postLogoutRedirectUri&&u.authority.protocolMode===ae.OIDC){if(this.browserStorage.removeAccount((h=e.account)==null?void 0:h.homeAccountId),this.eventHandler.emitEvent(I.LOGOUT_SUCCESS,C.Popup,e),i){const S={apiId:b.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},O=_.getAbsoluteUrl(i,se());await this.navigationClient.navigateInternal(O,S)}r&&r.close();return}}const f=u.getLogoutUri(e);this.eventHandler.emitEvent(I.LOGOUT_SUCCESS,C.Popup,e);const E=this.openPopup(f,{popupName:t,popupWindowAttributes:n,popup:r});if(this.eventHandler.emitEvent(I.POPUP_OPENED,C.Popup,{popupWindow:E},null),await this.waitForLogoutPopup(E),i){const S={apiId:b.logoutPopup,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},O=_.getAbsoluteUrl(i,se());this.logger.verbose("Redirecting main window to url specified in the request"),this.logger.verbosePii(`Redirecting main window to: ${O}`),await this.navigationClient.navigateInternal(O,S)}else this.logger.verbose("No main window navigation requested")}catch(u){throw r&&r.close(),u instanceof N&&(u.setCorrelationId(this.correlationId),a.cacheFailedRequest(u)),this.browserStorage.setInteractionInProgress(!1),this.eventHandler.emitEvent(I.LOGOUT_FAILURE,C.Popup,null,u),this.eventHandler.emitEvent(I.LOGOUT_END,C.Popup),u}this.eventHandler.emitEvent(I.LOGOUT_END,C.Popup)}initiateAuthRequest(e,t){if(e)return this.logger.infoPii(`Navigate to: ${e}`),this.openPopup(e,t);throw this.logger.error("Navigate url is empty"),m(pt)}monitorPopupForHash(e){return new Promise((t,n)=>{const o=this.config.system.windowHashTimeout/this.config.system.pollIntervalMilliseconds;let r=0;this.logger.verbose("PopupHandler.monitorPopupForHash - polling started");const i=setInterval(()=>{if(e.closed){this.logger.error("PopupHandler.monitorPopupForHash - window closed"),this.cleanPopup(),clearInterval(i),n(m(Ie));return}let a=l.EMPTY_STRING,c=l.EMPTY_STRING;try{a=e.location.href,c=this.extractServerResponseStringFromPopup(e,a)}catch{}!a||a==="about:blank"||(this.logger.verbose("PopupHandler.monitorPopupForHash - popup window is on same origin as caller"),r++,c?(this.logger.verbose("PopupHandler.monitorPopupForHash - found hash in url"),clearInterval(i),this.cleanPopup(e),_.hashContainsKnownProperties(c)?(this.logger.verbose("PopupHandler.monitorPopupForHash - hash contains known properties, returning."),t(c)):(this.logger.error("PopupHandler.monitorPopupForHash - found hash in url but it does not contain known properties. Check that your router is not changing the hash prematurely."),this.logger.errorPii(`PopupHandler.monitorPopupForHash - hash found: ${c}`),n(m(an)))):r>o&&(this.logger.error("PopupHandler.monitorPopupForHash - unable to find hash in url, timing out"),clearInterval(i),n(m(Go))))},this.config.system.pollIntervalMilliseconds)})}waitForLogoutPopup(e){return new Promise(t=>{this.logger.verbose("PopupHandler.waitForLogoutPopup - polling started");const n=setInterval(()=>{e.closed&&(this.logger.error("PopupHandler.waitForLogoutPopup - window closed"),this.cleanPopup(),clearInterval(n),t());let o=l.EMPTY_STRING;try{o=e.location.href}catch{}!o||o==="about:blank"||(this.logger.verbose("PopupHandler.waitForLogoutPopup - popup window is on same origin as caller, closing."),clearInterval(n),this.cleanPopup(e),t())},this.config.system.pollIntervalMilliseconds)})}openPopup(e,t){try{let n;if(t.popup?(n=t.popup,this.logger.verbosePii(`Navigating popup window to: ${e}`),n.location.assign(e)):typeof t.popup>"u"&&(this.logger.verbosePii(`Opening popup window to: ${e}`),n=this.openSizedPopup(e,t.popupName,t.popupWindowAttributes)),!n)throw m(xo);return n.focus&&n.focus(),this.currentWindow=n,window.addEventListener("beforeunload",this.unloadWindow),n}catch(n){throw this.logger.error("error opening popup "+n.message),this.browserStorage.setInteractionInProgress(!1),m(Bo)}}openSizedPopup(e,t,n){var E,S,O,w;const o=window.screenLeft?window.screenLeft:window.screenX,r=window.screenTop?window.screenTop:window.screenY,i=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,a=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight;let c=(E=n.popupSize)==null?void 0:E.width,h=(S=n.popupSize)==null?void 0:S.height,u=(O=n.popupPosition)==null?void 0:O.top,f=(w=n.popupPosition)==null?void 0:w.left;return(!c||c<0||c>i)&&(this.logger.verbose("Default popup window width used. Window width not configured or invalid."),c=J.POPUP_WIDTH),(!h||h<0||h>a)&&(this.logger.verbose("Default popup window height used. Window height not configured or invalid."),h=J.POPUP_HEIGHT),(!u||u<0||u>a)&&(this.logger.verbose("Default popup window top position used. Window top not configured or invalid."),u=Math.max(0,a/2-J.POPUP_HEIGHT/2+r)),(!f||f<0||f>i)&&(this.logger.verbose("Default popup window left position used. Window left not configured or invalid."),f=Math.max(0,i/2-J.POPUP_WIDTH/2+o)),window.open(e,t,`width=${c}, height=${h}, top=${u}, left=${f}, scrollbars=yes`)}unloadWindow(e){this.browserStorage.cleanRequestByInteractionType(C.Popup),this.currentWindow&&this.currentWindow.close(),e.preventDefault()}cleanPopup(e){e&&e.close(),window.removeEventListener("beforeunload",this.unloadWindow),this.browserStorage.setInteractionInProgress(!1)}generatePopupName(e,t){return`${J.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${e.join("-")}.${t}.${this.correlationId}`}generateLogoutPopupName(e){const t=e.account&&e.account.homeAccountId;return`${J.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${t}.${this.correlationId}`}extractServerResponseStringFromPopup(e,t){var o;let n;return((o=this.config.auth.OIDCOptions)==null?void 0:o.serverResponseType)===ze.QUERY?n=_.parseQueryServerResponse(t):n=e.location.hash,n}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class zn{constructor(e,t,n,o,r){this.authModule=e,this.browserStorage=t,this.authCodeRequest=n,this.logger=o,this.performanceClient=r}async initiateAuthRequest(e,t){if(this.logger.verbose("RedirectHandler.initiateAuthRequest called"),e){t.redirectStartPage&&(this.logger.verbose("RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page"),this.browserStorage.setTemporaryCache(v.ORIGIN_URI,t.redirectStartPage,!0)),this.browserStorage.setTemporaryCache(v.CORRELATION_ID,this.authCodeRequest.correlationId,!0),this.browserStorage.cacheCodeRequest(this.authCodeRequest),this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${e}`);const n={apiId:b.acquireTokenRedirect,timeout:t.redirectTimeout,noHistory:!1};if(typeof t.onRedirectNavigate=="function")if(this.logger.verbose("RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback"),t.onRedirectNavigate(e)!==!1){this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating"),await t.navigationClient.navigateExternal(e,n);return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation");return}else{this.logger.verbose("RedirectHandler.initiateAuthRequest: Navigating window to navigate url"),await t.navigationClient.navigateExternal(e,n);return}}else throw this.logger.info("RedirectHandler.initiateAuthRequest: Navigate url is empty"),m(pt)}async handleCodeResponseFromHash(e,t){if(this.logger.verbose("RedirectHandler.handleCodeResponse called"),!e)throw m(mt);this.browserStorage.setInteractionInProgress(!1);const n=this.browserStorage.generateStateKey(t),o=this.browserStorage.getTemporaryCache(n);if(!o)throw g(et,"Cached State");let r;try{r=this.authModule.handleFragmentResponse(e,o)}catch(h){throw h instanceof ge&&h.subError===Ie?m(Ie):h}const i=this.browserStorage.generateNonceKey(o),a=this.browserStorage.getTemporaryCache(i);if(this.authCodeRequest.code=r.code,r.cloud_instance_host_name&&await p(this.authModule.updateAuthority.bind(this.authModule),d.UpdateTokenEndpointAuthority,this.logger,this.performanceClient,this.authCodeRequest.correlationId)(r.cloud_instance_host_name,this.authCodeRequest.correlationId),r.nonce=a||void 0,r.state=o,r.client_info)this.authCodeRequest.clientInfo=r.client_info;else{const h=this.checkCcsCredentials();h&&(this.authCodeRequest.ccsCredential=h)}const c=await this.authModule.acquireToken(this.authCodeRequest,r);return this.browserStorage.cleanRequestByState(t),c}checkCcsCredentials(){const e=this.browserStorage.getTemporaryCache(v.CCS_CREDENTIAL,!0);if(e)try{return JSON.parse(e)}catch{this.authModule.logger.error("Cache credential could not be parsed"),this.authModule.logger.errorPii(`Cache credential could not be parsed: ${e}`)}return null}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class ws extends Le{constructor(e,t,n,o,r,i,a,c,h,u){super(e,t,n,o,r,i,a,h,u),this.nativeStorage=c}async acquireToken(e){const t=await p(this.initializeAuthorizationRequest.bind(this),d.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,this.correlationId)(e,C.Redirect);this.browserStorage.updateCacheEntries(t.state,t.nonce,t.authority,t.loginHint||"",t.account||null);const n=this.initializeServerTelemetryManager(b.acquireTokenRedirect),o=r=>{r.persisted&&(this.logger.verbose("Page was restored from back/forward cache. Clearing temporary cache."),this.browserStorage.cleanRequestByState(t.state),this.eventHandler.emitEvent(I.RESTORE_FROM_BFCACHE,C.Redirect))};try{const r=await p(this.initializeAuthorizationCodeRequest.bind(this),d.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,this.correlationId)(t),i=await p(this.createAuthCodeClient.bind(this),d.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(n,t.authority,t.azureCloudOptions),a=new zn(i,this.browserStorage,r,this.logger,this.performanceClient),c=await i.getAuthCodeUrl({...t,nativeBroker:te.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,e.authenticationScheme)}),h=this.getRedirectStartPage(e.redirectStartPage);return this.logger.verbosePii(`Redirect start page: ${h}`),window.addEventListener("pageshow",o),await a.initiateAuthRequest(c,{navigationClient:this.navigationClient,redirectTimeout:this.config.system.redirectNavigationTimeout,redirectStartPage:h,onRedirectNavigate:e.onRedirectNavigate})}catch(r){throw r instanceof N&&(r.setCorrelationId(this.correlationId),n.cacheFailedRequest(r)),window.removeEventListener("pageshow",o),this.browserStorage.cleanRequestByState(t.state),r}}async handleRedirectPromise(e){const t=this.initializeServerTelemetryManager(b.handleRedirectPromise);try{if(!this.browserStorage.isInteractionInProgress(!0))return this.logger.info("handleRedirectPromise called but there is no interaction in progress, returning null."),null;const n=this.getRedirectResponseHash(e||window.location.hash);if(!n)return this.logger.info("handleRedirectPromise did not detect a response hash as a result of a redirect. Cleaning temporary cache."),this.browserStorage.cleanRequestByInteractionType(C.Redirect),null;let o;try{const c=_.getDeserializedHash(n);o=this.validateAndExtractStateFromHash(c,C.Redirect),this.logger.verbose("State extracted from hash")}catch(c){return this.logger.info(`handleRedirectPromise was unable to extract state due to: ${c}`),this.browserStorage.cleanRequestByInteractionType(C.Redirect),null}const r=this.browserStorage.getTemporaryCache(v.ORIGIN_URI,!0)||l.EMPTY_STRING,i=_.removeHashFromUrl(r),a=_.removeHashFromUrl(window.location.href);if(i===a&&this.config.auth.navigateToLoginRequestUrl){this.logger.verbose("Current page is loginRequestUrl, handling hash");const c=await this.handleHash(n,o,t);return r.indexOf("#")>-1&&Di(r),c}else if(this.config.auth.navigateToLoginRequestUrl){if(!dn()||this.config.system.allowRedirectInIframe){this.browserStorage.setTemporaryCache(v.URL_HASH,n,!0);const c={apiId:b.handleRedirectPromise,timeout:this.config.system.redirectNavigationTimeout,noHistory:!0};let h=!0;if(!r||r==="null"){const u=Fi();this.browserStorage.setTemporaryCache(v.ORIGIN_URI,u,!0),this.logger.warning("Unable to get valid login request url from cache, redirecting to home page"),h=await this.navigationClient.navigateInternal(u,c)}else this.logger.verbose(`Navigating to loginRequestUrl: ${r}`),h=await this.navigationClient.navigateInternal(r,c);if(!h)return this.handleHash(n,o,t)}}else return this.logger.verbose("NavigateToLoginRequestUrl set to false, handling hash"),this.handleHash(n,o,t);return null}catch(n){throw n instanceof N&&(n.setCorrelationId(this.correlationId),t.cacheFailedRequest(n)),this.browserStorage.cleanRequestByInteractionType(C.Redirect),n}}getRedirectResponseHash(e){if(this.logger.verbose("getRedirectResponseHash called"),_.hashContainsKnownProperties(e))return Ui(window),this.logger.verbose("Hash contains known properties, returning response hash"),e;const n=this.browserStorage.getTemporaryCache(v.URL_HASH,!0);return this.browserStorage.removeItem(this.browserStorage.generateCacheKey(v.URL_HASH)),this.logger.verbose("Hash does not contain known properties, returning cached hash"),n}async handleHash(e,t,n){const o=this.browserStorage.getCachedRequest(t);this.logger.verbose("handleHash called, retrieved cached request");const r=_.getDeserializedHash(e);if(r.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw m(Ye);const h=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenPopup,this.performanceClient,this.nativeMessageHandler,r.accountId,this.nativeStorage,o.correlationId),{userRequestState:u}=X.parseRequestState(this.browserCrypto,t);return h.acquireToken({...o,state:u,prompt:void 0}).finally(()=>{this.browserStorage.cleanRequestByState(t)})}const i=this.browserStorage.getCachedAuthority(t);if(!i)throw m(cn);const a=await p(this.createAuthCodeClient.bind(this),d.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(n,i);return Z.removeThrottle(this.browserStorage,this.config.auth.clientId,o),await new zn(a,this.browserStorage,o,this.logger,this.performanceClient).handleCodeResponseFromHash(e,t)}async logout(e){var o,r;this.logger.verbose("logoutRedirect called");const t=this.initializeLogoutRequest(e),n=this.initializeServerTelemetryManager(b.logout);try{this.eventHandler.emitEvent(I.LOGOUT_START,C.Redirect,e),await this.clearCacheOnLogout(t.account);const i={apiId:b.logout,timeout:this.config.system.redirectNavigationTimeout,noHistory:!1},a=await p(this.createAuthCodeClient.bind(this),d.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,this.correlationId)(n,e&&e.authority);if(a.authority.protocolMode===ae.OIDC)try{a.authority.endSessionEndpoint}catch{if((o=t.account)!=null&&o.homeAccountId){this.browserStorage.removeAccount((r=t.account)==null?void 0:r.homeAccountId),this.eventHandler.emitEvent(I.LOGOUT_SUCCESS,C.Redirect,t);return}}const c=a.getLogoutUri(t);if(this.eventHandler.emitEvent(I.LOGOUT_SUCCESS,C.Redirect,t),e&&typeof e.onRedirectNavigate=="function")if(e.onRedirectNavigate(c)!==!1){this.logger.verbose("Logout onRedirectNavigate did not return false, navigating"),this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(c,i);return}else this.browserStorage.setInteractionInProgress(!1),this.logger.verbose("Logout onRedirectNavigate returned false, stopping navigation");else{this.browserStorage.getInteractionInProgress()||this.browserStorage.setInteractionInProgress(!0),await this.navigationClient.navigateExternal(c,i);return}}catch(i){throw i instanceof N&&(i.setCorrelationId(this.correlationId),n.cacheFailedRequest(i)),this.eventHandler.emitEvent(I.LOGOUT_FAILURE,C.Redirect,null,i),this.eventHandler.emitEvent(I.LOGOUT_END,C.Redirect),i}this.eventHandler.emitEvent(I.LOGOUT_END,C.Redirect)}getRedirectStartPage(e){const t=e||window.location.href;return _.getAbsoluteUrl(t,se())}}/*! @azure/msal-browser v3.4.0 2023-10-30 */async function Rs(s,e,t,n,o){if(e.addQueueMeasurement(d.SilentHandlerInitiateAuthRequest,n),!s)throw t.info("Navigate url is empty"),m(pt);return o?await p(bs,d.SilentHandlerLoadFrame,t,e,n)(s,o,e,n):$e(Os,d.SilentHandlerLoadFrameSync,t,e,n)(s)}async function ks(s,e,t,n,o,r){return n.addQueueMeasurement(d.SilentHandlerMonitorIframeForHash,r),new Promise((i,a)=>{e<Ut&&o.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${e}ms) than the default (${Ut}ms). This may result in timeouts.`);const c=window.setTimeout(()=>{window.clearInterval(h),a(m(qo))},e),h=window.setInterval(()=>{let u="";const f=s.contentWindow;try{u=f?f.location.href:""}catch{}if(!u||u==="about:blank")return;const E=f?f.location.hash:"";window.clearTimeout(c),window.clearInterval(h),i(E)},t)}).finally(()=>{$e(Ns,d.RemoveHiddenIframe,o,n,r)(s)})}function bs(s,e,t,n){return t.addQueueMeasurement(d.SilentHandlerLoadFrame,n),new Promise((o,r)=>{const i=Ir();window.setTimeout(()=>{if(!i){r("Unable to load iframe");return}i.src=s,o(i)},e)})}function Os(s){const e=Ir();return e.src=s,e}function Ir(){const s=document.createElement("iframe");return s.style.visibility="hidden",s.style.position="absolute",s.style.width=s.style.height="0",s.style.border="0",s.setAttribute("sandbox","allow-scripts allow-same-origin allow-forms"),document.getElementsByTagName("body")[0].appendChild(s),s}function Ns(s){document.body===s.parentNode&&document.body.removeChild(s)}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Ps extends Le{constructor(e,t,n,o,r,i,a,c,h,u,f){super(e,t,n,o,r,i,c,u,f),this.apiId=a,this.nativeStorage=h}async acquireToken(e){if(this.performanceClient.addQueueMeasurement(d.SilentIframeClientAcquireToken,e.correlationId),!e.loginHint&&!e.sid&&(!e.account||!e.account.username)&&this.logger.warning("No user hint provided. The authorization server may need more information to complete this request."),e.prompt&&e.prompt!==B.NONE&&e.prompt!==B.NO_SESSION)throw m(Qo);const t=await p(this.initializeAuthorizationRequest.bind(this),d.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)({...e,prompt:e.prompt||B.NONE},C.Silent);lr(t.authority);const n=this.initializeServerTelemetryManager(this.apiId);try{const o=await p(this.createAuthCodeClient.bind(this),d.StandardInteractionClientCreateAuthCodeClient,this.logger,this.performanceClient,e.correlationId)(n,t.authority,t.azureCloudOptions);return await p(this.silentTokenHelper.bind(this),d.SilentIframeClientTokenHelper,this.logger,this.performanceClient,e.correlationId)(o,t)}catch(o){throw o instanceof N&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),o}}logout(){return Promise.reject(m(ft))}async silentTokenHelper(e,t){const n=t.correlationId;this.performanceClient.addQueueMeasurement(d.SilentIframeClientTokenHelper,n);const o=await p(this.initializeAuthorizationCodeRequest.bind(this),d.StandardInteractionClientInitializeAuthorizationCodeRequest,this.logger,this.performanceClient,n)(t),r=await p(e.getAuthCodeUrl.bind(e),d.GetAuthCodeUrl,this.logger,this.performanceClient,n)({...t,nativeBroker:te.isNativeAvailable(this.config,this.logger,this.nativeMessageHandler,t.authenticationScheme)}),i=new fn(e,this.browserStorage,o,this.logger,this.performanceClient),a=await p(Rs,d.SilentHandlerInitiateAuthRequest,this.logger,this.performanceClient,n)(r,this.performanceClient,this.logger,n,this.config.system.navigateFrameWait),c=await p(ks,d.SilentHandlerMonitorIframeForHash,this.logger,this.performanceClient,n)(a,this.config.system.iframeHashTimeout,this.config.system.pollIntervalMilliseconds,this.performanceClient,this.logger,n);if(c){if(!_.hashContainsKnownProperties(c))throw this.logger.error("A hash is present in the iframe but it does not contain known properties. It's likely that the hash has been replaced by code running on the redirectUri page."),this.logger.errorPii(`The hash detected in the iframe is: ${c}`),m(an)}else throw this.logger.error("The request has returned to the redirectUri but a hash is not present in the iframe. It's likely that the hash has been removed or the page has been redirected by code running on the redirectUri page."),m(mt);const h=_.getDeserializedHash(c);if(h.accountId){if(this.logger.verbose("Account id found in hash, calling WAM for token"),!this.nativeMessageHandler)throw m(Ye);const u=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.apiId,this.performanceClient,this.nativeMessageHandler,h.accountId,this.browserStorage,n),{userRequestState:f}=X.parseRequestState(this.browserCrypto,t.state);return p(u.acquireToken.bind(u),d.NativeInteractionClientAcquireToken,this.logger,this.performanceClient,n)({...t,state:f,prompt:t.prompt||B.NONE})}return p(i.handleCodeResponseFromHash.bind(i),d.HandleCodeResponseFromHash,this.logger,this.performanceClient,n)(c,t)}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Ms extends Le{async acquireToken(e){this.performanceClient.addQueueMeasurement(d.SilentRefreshClientAcquireToken,e.correlationId);const t=await p(this.initializeBaseRequest.bind(this),d.InitializeBaseRequest,this.logger,this.performanceClient,e.correlationId)(e,e.account),n={...e,...t},o=this.initializeServerTelemetryManager(b.acquireTokenSilent_silentFlow),r=await this.createRefreshTokenClient(o,n.authority,n.azureCloudOptions);return p(r.acquireTokenByRefreshToken.bind(r),d.RefreshTokenClientAcquireTokenByRefreshToken,this.logger,this.performanceClient,e.correlationId)(n).catch(i=>{throw i.setCorrelationId(this.correlationId),o.cacheFailedRequest(i),i})}logout(){return Promise.reject(m(ft))}async createRefreshTokenClient(e,t,n){const o=await p(this.getClientConfiguration.bind(this),d.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,this.correlationId)(e,t,n);return new Mt(o,this.performanceClient)}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Hs{constructor(e,t,n,o){this.isBrowserEnvironment=typeof window<"u",this.config=e,this.storage=t,this.logger=n,this.cryptoObj=o}loadExternalTokens(e,t,n){if(this.logger.info("TokenCache - loadExternalTokens called"),!t.id_token)throw m(j);const o=ue(t.id_token,de);let r,i,a;if(e.account)a=P.createFromAccountInfo(e.account),r=new be(a,this.loadIdToken(t.id_token,a.homeAccountId,e.account.environment,e.account.tenantId),this.loadAccessToken(e,t,a.homeAccountId,e.account.environment,e.account.tenantId,n),this.loadRefreshToken(e,t,a.homeAccountId,e.account.environment));else if(e.authority){const c=F.generateAuthority(e.authority,e.azureCloudOptions),h={protocolMode:this.config.auth.protocolMode,knownAuthorities:this.config.auth.knownAuthorities,cloudDiscoveryMetadata:this.config.auth.cloudDiscoveryMetadata,authorityMetadata:this.config.auth.authorityMetadata,skipAuthorityMetadataCache:this.config.auth.skipAuthorityMetadataCache};if(i=new F(c,this.config.system.networkClient,this.storage,h,this.logger),n.clientInfo)this.logger.trace("TokenCache - homeAccountId from options"),a=this.loadAccount(o,i,n.clientInfo),r=new be(a,this.loadIdToken(t.id_token,a.homeAccountId,i.hostnameAndPort,i.tenant),this.loadAccessToken(e,t,a.homeAccountId,i.hostnameAndPort,i.tenant,n),this.loadRefreshToken(e,t,a.homeAccountId,i.hostnameAndPort));else if(t.client_info)this.logger.trace("TokenCache - homeAccountId from response"),a=this.loadAccount(o,i,t.client_info),r=new be(a,this.loadIdToken(t.id_token,a.homeAccountId,i.hostnameAndPort,i.tenant),this.loadAccessToken(e,t,a.homeAccountId,i.hostnameAndPort,i.tenant,n),this.loadRefreshToken(e,t,a.homeAccountId,i.hostnameAndPort));else throw m(j)}else throw m(j);return this.generateAuthenticationResult(e,o,r,a,i)}loadAccount(e,t,n,o){let r;if(o?r=o:t.authorityType!==void 0&&n&&(r=P.generateHomeAccountId(n,t.authorityType,this.logger,this.cryptoObj,e)),!r)throw m(j);const i=P.createAccount({homeAccountId:r,idTokenClaims:e,clientInfo:n,environment:t.hostnameAndPort},t);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading account"),this.storage.setAccount(i),i;throw m(j)}loadIdToken(e,t,n,o){const r=lt(t,n,e,this.config.auth.clientId,o);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading id token"),this.storage.setIdTokenCredential(r),r;throw m(j)}loadAccessToken(e,t,n,o,r,i){if(!t.access_token)return this.logger.verbose("TokenCache - No access token provided for caching"),null;if(!t.expires_in||!i.extendedExpiresOn)throw m(j);const a=new M(e.scopes).printScopes(),c=i.expiresOn||t.expires_in+new Date().getTime()/1e3,h=i.extendedExpiresOn,u=dt(n,o,t.access_token,this.config.auth.clientId,r,a,c,h,de);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading access token"),this.storage.setAccessTokenCredential(u),u;throw m(j)}loadRefreshToken(e,t,n,o){if(!t.refresh_token)return this.logger.verbose("TokenCache - No refresh token provided for caching"),null;const r=uo(n,o,t.refresh_token,this.config.auth.clientId);if(this.isBrowserEnvironment)return this.logger.verbose("TokenCache - loading refresh token"),this.storage.setRefreshTokenCredential(r),r;throw m(j)}generateAuthenticationResult(e,t,n,o,r){var E,S;let i=l.EMPTY_STRING,a=[],c=null,h;n!=null&&n.accessToken&&(i=n.accessToken.secret,a=M.fromString(n.accessToken.target).asArray(),c=new Date(Number(n.accessToken.expiresOn)*1e3),h=new Date(Number(n.accessToken.extendedExpiresOn)*1e3));const u=t.oid||t.sub||l.EMPTY_STRING,f=t.tid||l.EMPTY_STRING;return{authority:r?r.canonicalAuthority:l.EMPTY_STRING,uniqueId:u,tenantId:f,scopes:a,account:o.getAccountInfo(),idToken:((E=n.idToken)==null?void 0:E.secret)||"",idTokenClaims:t||{},accessToken:i,fromCache:!0,expiresOn:c,correlationId:e.correlationId||l.EMPTY_STRING,requestId:l.EMPTY_STRING,extExpiresOn:h,familyId:l.EMPTY_STRING,tokenType:((S=n==null?void 0:n.accessToken)==null?void 0:S.tokenType)||l.EMPTY_STRING,state:l.EMPTY_STRING,cloudGraphHostName:o.cloudGraphHostName||l.EMPTY_STRING,msGraphHost:o.msGraphHost||l.EMPTY_STRING,code:void 0,fromNativeBroker:!1}}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Ls extends Po{constructor(e){super(e),this.includeRedirectUri=!1}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Us extends Le{constructor(e,t,n,o,r,i,a,c,h,u){super(e,t,n,o,r,i,c,h,u),this.apiId=a}async acquireToken(e){if(!e.code)throw m(er);const t=await p(this.initializeAuthorizationRequest.bind(this),d.StandardInteractionClientInitializeAuthorizationRequest,this.logger,this.performanceClient,e.correlationId)(e,C.Silent),n=this.initializeServerTelemetryManager(this.apiId);try{const o={...t,code:e.code},r=await p(this.getClientConfiguration.bind(this),d.StandardInteractionClientGetClientConfiguration,this.logger,this.performanceClient,e.correlationId)(n,t.authority),i=new Ls(r);this.logger.verbose("Auth code client created");const a=new fn(i,this.browserStorage,o,this.logger,this.performanceClient);return p(a.handleCodeResponseFromServer.bind(a),d.HandleCodeResponseFromServer,this.logger,this.performanceClient,e.correlationId)({code:e.code,msgraph_host:e.msGraphHost,cloud_graph_host_name:e.cloudGraphHostName,cloud_instance_host_name:e.cloudInstanceHostName},t,!1)}catch(o){throw o instanceof N&&(o.setCorrelationId(this.correlationId),n.cacheFailedRequest(o)),o}}logout(){return Promise.reject(m(ft))}}/*! @azure/msal-browser v3.4.0 2023-10-30 */class Ct{constructor(e){this.atsAsyncMeasurement=void 0,this.operatingContext=e,this.isBrowserEnvironment=this.operatingContext.isBrowserEnvironment(),this.config=e.getConfig(),this.initialized=!1,this.logger=this.operatingContext.getLogger(),this.networkClient=this.config.system.networkClient,this.navigationClient=this.config.system.navigationClient,this.redirectResponse=new Map,this.hybridAuthCodeResponses=new Map,this.performanceClient=this.config.telemetry.client,this.browserCrypto=this.isBrowserEnvironment?new He(this.logger,this.performanceClient):tt,this.eventHandler=new ds(this.logger,this.browserCrypto),this.browserStorage=this.isBrowserEnvironment?new Kt(this.config.auth.clientId,this.config.cache,this.browserCrypto,this.logger,_i(this.config.auth)):ls(this.config.auth.clientId,this.logger);const t={cacheLocation:L.MemoryStorage,temporaryCacheLocation:L.MemoryStorage,storeAuthStateInCookie:!1,secureCookies:!1,cacheMigrationEnabled:!1,claimsBasedCachingEnabled:!1};this.nativeInternalStorage=new Kt(this.config.auth.clientId,t,this.browserCrypto,this.logger),this.tokenCache=new Hs(this.config,this.browserStorage,this.logger,this.browserCrypto),this.activeSilentTokenRequests=new Map,this.trackPageVisibility=this.trackPageVisibility.bind(this),this.trackPageVisibilityWithMeasurement=this.trackPageVisibilityWithMeasurement.bind(this)}static async createController(e){const t=new Ct(e);return await t.initialize(),t}trackPageVisibility(){this.atsAsyncMeasurement&&(this.logger.info("Perf: Visibility change detected"),this.atsAsyncMeasurement.increment({visibilityChangeCount:1}))}async initialize(){if(this.logger.trace("initialize called"),this.initialized){this.logger.info("initialize has already been called, exiting early.");return}const e=this.config.system.allowNativeBroker,t=this.performanceClient.startMeasurement(d.InitializeClientApplication);if(this.eventHandler.emitEvent(I.INITIALIZE_START),e)try{this.nativeExtensionProvider=await te.createProvider(this.logger,this.config.system.nativeBrokerHandshakeTimeout,this.performanceClient)}catch(n){this.logger.verbose(n)}this.config.cache.claimsBasedCachingEnabled||(this.logger.verbose("Claims-based caching is disabled. Clearing the previous cache with claims"),await p(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage),d.ClearTokensAndKeysWithClaims,this.logger,this.performanceClient)(this.performanceClient)),this.initialized=!0,this.eventHandler.emitEvent(I.INITIALIZE_END),t.end({allowNativeBroker:e,success:!0})}async handleRedirectPromise(e){var o;this.logger.verbose("handleRedirectPromise called"),Fn(this.initialized);let t=e;if(((o=this.config.auth.OIDCOptions)==null?void 0:o.serverResponseType)===ze.QUERY){const r=window.location.href;t=_.parseQueryServerResponse(r)}const n=this.getAllAccounts();if(this.isBrowserEnvironment){const r=t||l.EMPTY_STRING;let i=this.redirectResponse.get(r);if(typeof i>"u"){this.eventHandler.emitEvent(I.HANDLE_REDIRECT_START,C.Redirect),this.logger.verbose("handleRedirectPromise has been called for the first time, storing the promise");const a=this.browserStorage.getCachedNativeRequest();let c;if(a&&te.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider)&&this.nativeExtensionProvider&&!t)this.logger.trace("handleRedirectPromise - acquiring token from native platform"),c=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.handleRedirectPromise,this.performanceClient,this.nativeExtensionProvider,a.accountId,this.nativeInternalStorage,a.correlationId).handleRedirectPromise();else{this.logger.trace("handleRedirectPromise - acquiring token from web flow");const h=this.browserStorage.getTemporaryCache(v.CORRELATION_ID,!0)||l.EMPTY_STRING;c=this.createRedirectClient(h).handleRedirectPromise(t)}i=c.then(h=>(h&&(n.length<this.getAllAccounts().length?(this.eventHandler.emitEvent(I.LOGIN_SUCCESS,C.Redirect,h),this.logger.verbose("handleRedirectResponse returned result, login success")):(this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_SUCCESS,C.Redirect,h),this.logger.verbose("handleRedirectResponse returned result, acquire token success"))),this.eventHandler.emitEvent(I.HANDLE_REDIRECT_END,C.Redirect),h)).catch(h=>{throw n.length>0?this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_FAILURE,C.Redirect,null,h):this.eventHandler.emitEvent(I.LOGIN_FAILURE,C.Redirect,null,h),this.eventHandler.emitEvent(I.HANDLE_REDIRECT_END,C.Redirect),h}),this.redirectResponse.set(r,i)}else this.logger.verbose("handleRedirectPromise has been called previously, returning the result from the first call");return i}return this.logger.verbose("handleRedirectPromise returns null, not browser environment"),null}async acquireTokenRedirect(e){const t=this.getRequestCorrelationId(e);this.logger.verbose("acquireTokenRedirect called",t),this.preflightBrowserEnvironmentCheck(C.Redirect);const n=this.getAllAccounts().length>0;n?this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_START,C.Redirect,e):this.eventHandler.emitEvent(I.LOGIN_START,C.Redirect,e);let o;return this.nativeExtensionProvider&&this.canUseNative(e)?o=new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenRedirect,this.performanceClient,this.nativeExtensionProvider,this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireTokenRedirect(e).catch(i=>{if(i instanceof ie&&we(i))return this.nativeExtensionProvider=void 0,this.createRedirectClient(e.correlationId).acquireToken(e);if(i instanceof ne)return this.logger.verbose("acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createRedirectClient(e.correlationId).acquireToken(e);throw this.getBrowserStorage().setInteractionInProgress(!1),i}):o=this.createRedirectClient(e.correlationId).acquireToken(e),o.catch(r=>{throw n?this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_FAILURE,C.Redirect,null,r):this.eventHandler.emitEvent(I.LOGIN_FAILURE,C.Redirect,null,r),r})}acquireTokenPopup(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(d.AcquireTokenPopup,t);try{this.logger.verbose("acquireTokenPopup called",t),this.preflightBrowserEnvironmentCheck(C.Popup)}catch(i){return Promise.reject(i)}const o=this.getAllAccounts();o.length>0?this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_START,C.Popup,e):this.eventHandler.emitEvent(I.LOGIN_START,C.Popup,e);let r;return this.canUseNative(e)?r=this.acquireTokenNative(e,b.acquireTokenPopup).then(i=>(this.getBrowserStorage().setInteractionInProgress(!1),n.end({success:!0,isNativeBroker:!0,requestId:i.requestId}),i)).catch(i=>{if(i instanceof ie&&we(i))return this.nativeExtensionProvider=void 0,this.createPopupClient(e.correlationId).acquireToken(e);if(i instanceof ne)return this.logger.verbose("acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow"),this.createPopupClient(e.correlationId).acquireToken(e);throw this.getBrowserStorage().setInteractionInProgress(!1),i}):r=this.createPopupClient(e.correlationId).acquireToken(e),r.then(i=>(o.length<this.getAllAccounts().length?this.eventHandler.emitEvent(I.LOGIN_SUCCESS,C.Popup,i):this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_SUCCESS,C.Popup,i),n.add({accessTokenSize:i.accessToken.length,idTokenSize:i.idToken.length}),n.end({success:!0,requestId:i.requestId}),i)).catch(i=>(o.length>0?this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_FAILURE,C.Popup,null,i):this.eventHandler.emitEvent(I.LOGIN_FAILURE,C.Popup,null,i),n.end({errorCode:i.errorCode,subErrorCode:i.subError,success:!1}),Promise.reject(i)))}trackPageVisibilityWithMeasurement(){const e=this.ssoSilentMeasurement||this.acquireTokenByCodeAsyncMeasurement;e&&(this.logger.info("Perf: Visibility change detected in ",e.event.name),e.increment({visibilityChangeCount:1}))}async ssoSilent(e){var r;const t=this.getRequestCorrelationId(e),n={...e,prompt:e.prompt,correlationId:t};this.preflightBrowserEnvironmentCheck(C.Silent),this.ssoSilentMeasurement=this.performanceClient.startMeasurement(d.SsoSilent,t),(r=this.ssoSilentMeasurement)==null||r.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),this.logger.verbose("ssoSilent called",t),this.eventHandler.emitEvent(I.SSO_SILENT_START,C.Silent,n);let o;return this.canUseNative(n)?o=this.acquireTokenNative(n,b.ssoSilent).catch(i=>{if(i instanceof ie&&we(i))return this.nativeExtensionProvider=void 0,this.createSilentIframeClient(n.correlationId).acquireToken(n);throw i}):o=this.createSilentIframeClient(n.correlationId).acquireToken(n),o.then(i=>{var a,c;return this.eventHandler.emitEvent(I.SSO_SILENT_SUCCESS,C.Silent,i),(a=this.ssoSilentMeasurement)==null||a.add({accessTokenSize:i.accessToken.length,idTokenSize:i.idToken.length}),(c=this.ssoSilentMeasurement)==null||c.end({success:!0,isNativeBroker:i.fromNativeBroker,requestId:i.requestId}),i}).catch(i=>{var a;throw this.eventHandler.emitEvent(I.SSO_SILENT_FAILURE,C.Silent,null,i),(a=this.ssoSilentMeasurement)==null||a.end({errorCode:i.errorCode,subErrorCode:i.subError,success:!1}),i}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenByCode(e){const t=this.getRequestCorrelationId(e);this.preflightBrowserEnvironmentCheck(C.Silent),this.logger.trace("acquireTokenByCode called",t),this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_BY_CODE_START,C.Silent,e);const n=this.performanceClient.startMeasurement(d.AcquireTokenByCode,e.correlationId);try{if(e.code&&e.nativeAccountId)throw m(nr);if(e.code){const o=e.code;let r=this.hybridAuthCodeResponses.get(o);return r?(this.logger.verbose("Existing acquireTokenByCode request found",e.correlationId),n.discard()):(this.logger.verbose("Initiating new acquireTokenByCode request",t),r=this.acquireTokenByCodeAsync({...e,correlationId:t}).then(i=>(this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_BY_CODE_SUCCESS,C.Silent,i),this.hybridAuthCodeResponses.delete(o),n.add({accessTokenSize:i.accessToken.length,idTokenSize:i.idToken.length}),n.end({success:!0,isNativeBroker:i.fromNativeBroker,requestId:i.requestId}),i)).catch(i=>{throw this.hybridAuthCodeResponses.delete(o),this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_BY_CODE_FAILURE,C.Silent,null,i),n.end({errorCode:i.errorCode,subErrorCode:i.subError,success:!1}),i}),this.hybridAuthCodeResponses.set(o,r)),r}else if(e.nativeAccountId){if(this.canUseNative(e,e.nativeAccountId))return this.acquireTokenNative(e,b.acquireTokenByCode,e.nativeAccountId).catch(o=>{throw o instanceof ie&&we(o)&&(this.nativeExtensionProvider=void 0),o});throw m(or)}else throw m(tr)}catch(o){throw this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_BY_CODE_FAILURE,C.Silent,null,o),n.end({errorCode:o instanceof N&&o.errorCode||void 0,subErrorCode:o instanceof N&&o.subError||void 0,success:!1}),o}}async acquireTokenByCodeAsync(e){var o;return this.logger.trace("acquireTokenByCodeAsync called",e.correlationId),this.acquireTokenByCodeAsyncMeasurement=this.performanceClient.startMeasurement(d.AcquireTokenByCodeAsync,e.correlationId),(o=this.acquireTokenByCodeAsyncMeasurement)==null||o.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement),await this.createSilentAuthCodeClient(e.correlationId).acquireToken(e).then(r=>{var i;return(i=this.acquireTokenByCodeAsyncMeasurement)==null||i.end({success:!0,fromCache:r.fromCache,isNativeBroker:r.fromNativeBroker,requestId:r.requestId}),r}).catch(r=>{var i;throw(i=this.acquireTokenByCodeAsyncMeasurement)==null||i.end({errorCode:r.errorCode,subErrorCode:r.subError,success:!1}),r}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibilityWithMeasurement)})}async acquireTokenFromCache(e,t,n){switch(this.performanceClient.addQueueMeasurement(d.AcquireTokenFromCache,t.correlationId),n){case V.Default:case V.AccessToken:case V.AccessTokenAndRefreshToken:return p(e.acquireToken.bind(e),d.SilentCacheClientAcquireToken,this.logger,this.performanceClient,t.correlationId)(t);default:throw g(le)}}async acquireTokenByRefreshToken(e,t){switch(this.performanceClient.addQueueMeasurement(d.AcquireTokenByRefreshToken,e.correlationId),t){case V.Default:case V.AccessTokenAndRefreshToken:case V.RefreshToken:case V.RefreshTokenAndNetwork:const n=this.createSilentRefreshClient(e.correlationId);return p(n.acquireToken.bind(n),d.SilentRefreshClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e);default:throw g(le)}}async acquireTokenBySilentIframe(e){this.performanceClient.addQueueMeasurement(d.AcquireTokenBySilentIframe,e.correlationId);const t=this.createSilentIframeClient(e.correlationId);return p(t.acquireToken.bind(t),d.SilentIframeClientAcquireToken,this.logger,this.performanceClient,e.correlationId)(e)}async logout(e){const t=this.getRequestCorrelationId(e);return this.logger.warning("logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.",t),this.logoutRedirect({correlationId:t,...e})}async logoutRedirect(e){const t=this.getRequestCorrelationId(e);return this.preflightBrowserEnvironmentCheck(C.Redirect),this.createRedirectClient(t).logout(e)}logoutPopup(e){try{const t=this.getRequestCorrelationId(e);return this.preflightBrowserEnvironmentCheck(C.Popup),this.createPopupClient(t).logout(e)}catch(t){return Promise.reject(t)}}async clearCache(e){const t=this.getRequestCorrelationId(e);return this.createSilentCacheClient(t).logout(e)}getAllAccounts(e){return this.logger.verbose("getAllAccounts called"),this.isBrowserEnvironment?this.browserStorage.getAllAccounts(e):[]}getAccount(e){if(this.logger.trace("getAccount called"),Object.keys(e).length===0)return this.logger.warning("getAccount: No accountFilter provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy(e);return t?(this.logger.verbose("getAccount: Account matching provided filter found, returning"),t):(this.logger.verbose("getAccount: No matching account found, returning null"),null)}getAccountByUsername(e){if(this.logger.trace("getAccountByUsername called"),!e)return this.logger.warning("getAccountByUsername: No username provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy({username:e});return t?(this.logger.verbose("getAccountByUsername: Account matching username found, returning"),this.logger.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${e}`),t):(this.logger.verbose("getAccountByUsername: No matching account found, returning null"),null)}getAccountByHomeId(e){if(this.logger.trace("getAccountByHomeId called"),!e)return this.logger.warning("getAccountByHomeId: No homeAccountId provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy({homeAccountId:e});return t?(this.logger.verbose("getAccountByHomeId: Account matching homeAccountId found, returning"),this.logger.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${e}`),t):(this.logger.verbose("getAccountByHomeId: No matching account found, returning null"),null)}getAccountByLocalId(e){if(this.logger.trace("getAccountByLocalId called"),!e)return this.logger.warning("getAccountByLocalId: No localAccountId provided"),null;const t=this.browserStorage.getAccountInfoFilteredBy({localAccountId:e});return t?(this.logger.verbose("getAccountByLocalId: Account matching localAccountId found, returning"),this.logger.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${e}`),t):(this.logger.verbose("getAccountByLocalId: No matching account found, returning null"),null)}setActiveAccount(e){this.browserStorage.setActiveAccount(e)}getActiveAccount(){return this.browserStorage.getActiveAccount()}async hydrateCache(e,t){this.logger.verbose("hydrateCache called");const n=P.createFromAccountInfo(e.account,e.cloudGraphHostName,e.msGraphHost);return this.browserStorage.setAccount(n),e.fromNativeBroker?(this.logger.verbose("Response was from native broker, storing in-memory"),this.nativeInternalStorage.hydrateCache(e,t)):this.browserStorage.hydrateCache(e,t)}preflightBrowserEnvironmentCheck(e,t=!1){if(this.logger.verbose("preflightBrowserEnvironmentCheck started"),Gi(this.isBrowserEnvironment),Bi(e,this.config.system.allowRedirectInIframe),Tt(),xi(),Fn(this.initialized),e===C.Redirect&&this.config.cache.cacheLocation===L.MemoryStorage&&!this.config.cache.storeAuthStateInCookie)throw fr(mr);(e===C.Redirect||e===C.Popup)&&this.preflightInteractiveRequest(!t)}preflightInteractiveRequest(e){this.logger.verbose("preflightInteractiveRequest called, validating app environment"),Tt(),e&&this.getBrowserStorage().setInteractionInProgress(!0)}async acquireTokenNative(e,t,n){if(this.logger.trace("acquireTokenNative called"),!this.nativeExtensionProvider)throw m(Ye);return new Oe(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,t,this.performanceClient,this.nativeExtensionProvider,n||this.getNativeAccountId(e),this.nativeInternalStorage,e.correlationId).acquireToken(e)}canUseNative(e,t){if(this.logger.trace("canUseNative called"),!te.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme))return this.logger.trace("canUseNative: isNativeAvailable returned false, returning false"),!1;if(e.prompt)switch(e.prompt){case B.NONE:case B.CONSENT:case B.LOGIN:this.logger.trace("canUseNative: prompt is compatible with native flow");break;default:return this.logger.trace(`canUseNative: prompt = ${e.prompt} is not compatible with native flow, returning false`),!1}return!t&&!this.getNativeAccountId(e)?(this.logger.trace("canUseNative: nativeAccountId is not available, returning false"),!1):!0}getNativeAccountId(e){const t=e.account||this.browserStorage.getAccountInfoFilteredBy({loginHint:e.loginHint,sid:e.sid})||this.getActiveAccount();return t&&t.nativeAccountId||""}createPopupClient(e){return new vs(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createRedirectClient(e){return new ws(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentIframeClient(e){return new Ps(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.ssoSilent,this.performanceClient,this.nativeInternalStorage,this.nativeExtensionProvider,e)}createSilentCacheClient(e){return new Tr(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentRefreshClient(e){return new Ms(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,this.performanceClient,this.nativeExtensionProvider,e)}createSilentAuthCodeClient(e){return new Us(this.config,this.browserStorage,this.browserCrypto,this.logger,this.eventHandler,this.navigationClient,b.acquireTokenByCode,this.performanceClient,this.nativeExtensionProvider,e)}addEventCallback(e){return this.eventHandler.addEventCallback(e)}removeEventCallback(e){this.eventHandler.removeEventCallback(e)}addPerformanceCallback(e){return this.performanceClient.addPerformanceCallback(e)}removePerformanceCallback(e){return this.performanceClient.removePerformanceCallback(e)}enableAccountStorageEvents(){this.eventHandler.enableAccountStorageEvents()}disableAccountStorageEvents(){this.eventHandler.disableAccountStorageEvents()}getTokenCache(){return this.tokenCache}getLogger(){return this.logger}setLogger(e){this.logger=e}initializeWrapperLibrary(e,t){this.browserStorage.setWrapperMetadata(e,t)}setNavigationClient(e){this.navigationClient=e}getConfiguration(){return this.config}getPerformanceClient(){return this.performanceClient}getBrowserStorage(){return this.browserStorage}isBrowserEnv(){return this.isBrowserEnvironment}getEventHandler(){return this.eventHandler}getRequestCorrelationId(e){return e!=null&&e.correlationId?e.correlationId:this.isBrowserEnvironment?pe():l.EMPTY_STRING}async loginRedirect(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginRedirect called",t),this.acquireTokenRedirect({correlationId:t,...e||Kn})}loginPopup(e){const t=this.getRequestCorrelationId(e);return this.logger.verbose("loginPopup called",t),this.acquireTokenPopup({correlationId:t,...e||Kn})}async acquireTokenSilent(e){const t=this.getRequestCorrelationId(e),n=this.performanceClient.startMeasurement(d.AcquireTokenSilent,t);n.add({cacheLookupPolicy:e.cacheLookupPolicy}),this.preflightBrowserEnvironmentCheck(C.Silent),this.logger.verbose("acquireTokenSilent called",t);const o=e.account||this.getActiveAccount();if(!o)throw m(Vo);const r={clientId:this.config.auth.clientId,authority:e.authority||l.EMPTY_STRING,scopes:e.scopes,homeAccountIdentifier:o.homeAccountId,claims:e.claims,authenticationScheme:e.authenticationScheme,resourceRequestMethod:e.resourceRequestMethod,resourceRequestUri:e.resourceRequestUri,shrClaims:e.shrClaims,sshKid:e.sshKid},i=JSON.stringify(r),a=this.activeSilentTokenRequests.get(i);if(typeof a>"u"){this.logger.verbose("acquireTokenSilent called for the first time, storing active request",t);const c=p(this.acquireTokenSilentAsync.bind(this),d.AcquireTokenSilentAsync,this.logger,this.performanceClient,t)({...e,correlationId:t},o).then(h=>(this.activeSilentTokenRequests.delete(i),n.add({accessTokenSize:h.accessToken.length,idTokenSize:h.idToken.length}),n.end({success:!0,fromCache:h.fromCache,isNativeBroker:h.fromNativeBroker,cacheLookupPolicy:e.cacheLookupPolicy,requestId:h.requestId}),h)).catch(h=>{throw this.activeSilentTokenRequests.delete(i),n.end({errorCode:h.errorCode,subErrorCode:h.subError,success:!1}),h});return this.activeSilentTokenRequests.set(i,c),c}else return this.logger.verbose("acquireTokenSilent has been called previously, returning the result from the first call",t),n.discard(),a}async acquireTokenSilentAsync(e,t){var o;this.performanceClient.addQueueMeasurement(d.AcquireTokenSilentAsync,e.correlationId),this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_START,C.Silent,e),this.atsAsyncMeasurement=this.performanceClient.startMeasurement(d.AcquireTokenSilentAsync,e.correlationId),(o=this.atsAsyncMeasurement)==null||o.increment({visibilityChangeCount:0}),document.addEventListener("visibilitychange",this.trackPageVisibility);let n;if(te.isNativeAvailable(this.config,this.logger,this.nativeExtensionProvider,e.authenticationScheme)&&t.nativeAccountId){this.logger.verbose("acquireTokenSilent - attempting to acquire token from native platform");const r={...e,account:t};n=this.acquireTokenNative(r,b.acquireTokenSilent_silentFlow).catch(async i=>{if(i instanceof ie&&we(i))return this.logger.verbose("acquireTokenSilent - native platform unavailable, falling back to web flow"),this.nativeExtensionProvider=void 0,this.createSilentIframeClient(e.correlationId).acquireToken(e);throw i})}else{this.logger.verbose("acquireTokenSilent - attempting to acquire token from web flow");const r=this.createSilentCacheClient(e.correlationId),i=await p(r.initializeSilentRequest.bind(r),d.InitializeSilentRequest,this.logger,this.performanceClient,e.correlationId)(e,t),a=e.cacheLookupPolicy||V.Default;n=p(this.acquireTokenFromCache.bind(this),d.AcquireTokenFromCache,this.logger,this.performanceClient,i.correlationId)(r,i,a).catch(c=>{if(e.cacheLookupPolicy===V.AccessToken)throw c;return Tt(),this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_NETWORK_START,C.Silent,i),p(this.acquireTokenByRefreshToken.bind(this),d.AcquireTokenByRefreshToken,this.logger,this.performanceClient,i.correlationId)(i,a).catch(h=>{const u=!(h instanceof ne)&&(h.errorCode===J.INVALID_GRANT_ERROR||h.errorCode===le)||h.errorCode===ot,f=a===V.Default||a===V.Skip||a===V.RefreshTokenAndNetwork;if(u&&f)return this.logger.verbose("Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.",e.correlationId),p(this.acquireTokenBySilentIframe.bind(this),d.AcquireTokenBySilentIframe,this.logger,this.performanceClient,i.correlationId)(i);throw h})})}return n.then(r=>{var i;return this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_SUCCESS,C.Silent,r),(i=this.atsAsyncMeasurement)==null||i.end({success:!0,fromCache:r.fromCache,isNativeBroker:r.fromNativeBroker,requestId:r.requestId}),r}).catch(r=>{var i;throw this.eventHandler.emitEvent(I.ACQUIRE_TOKEN_FAILURE,C.Silent,null,r),(i=this.atsAsyncMeasurement)==null||i.end({errorCode:r.errorCode,subErrorCode:r.subError,success:!1}),r}).finally(()=>{document.removeEventListener("visibilitychange",this.trackPageVisibility)})}}const Ds=Object.freeze(Object.defineProperty({__proto__:null,StandardController:Ct},Symbol.toStringTag,{value:"Module"}));/*! @azure/msal-browser v3.4.0 2023-10-30 */class Er{static async createPublicClientApplication(e){const t=await Wi(e);return new Er(e,t)}constructor(e,t){if(t)this.controller=t;else{const n=new Ee(e);this.controller=new Ct(n)}}async initialize(){return this.controller.initialize()}async acquireTokenPopup(e){return this.controller.acquireTokenPopup(e)}acquireTokenRedirect(e){return this.controller.acquireTokenRedirect(e)}acquireTokenSilent(e){return this.controller.acquireTokenSilent(e)}acquireTokenByCode(e){return this.controller.acquireTokenByCode(e)}addEventCallback(e){return this.controller.addEventCallback(e)}removeEventCallback(e){return this.controller.removeEventCallback(e)}addPerformanceCallback(e){return this.controller.addPerformanceCallback(e)}removePerformanceCallback(e){return this.controller.removePerformanceCallback(e)}enableAccountStorageEvents(){this.controller.enableAccountStorageEvents()}disableAccountStorageEvents(){this.controller.disableAccountStorageEvents()}getAccount(e){return this.controller.getAccount(e)}getAccountByHomeId(e){return this.controller.getAccountByHomeId(e)}getAccountByLocalId(e){return this.controller.getAccountByLocalId(e)}getAccountByUsername(e){return this.controller.getAccountByUsername(e)}getAllAccounts(e){return this.controller.getAllAccounts(e)}handleRedirectPromise(e){return this.controller.handleRedirectPromise(e)}loginPopup(e){return this.controller.loginPopup(e)}loginRedirect(e){return this.controller.loginRedirect(e)}logout(e){return this.controller.logout(e)}logoutRedirect(e){return this.controller.logoutRedirect(e)}logoutPopup(e){return this.controller.logoutPopup(e)}ssoSilent(e){return this.controller.ssoSilent(e)}getTokenCache(){return this.controller.getTokenCache()}getLogger(){return this.controller.getLogger()}setLogger(e){this.controller.setLogger(e)}setActiveAccount(e){this.controller.setActiveAccount(e)}getActiveAccount(){return this.controller.getActiveAccount()}initializeWrapperLibrary(e,t){return this.controller.initializeWrapperLibrary(e,t)}setNavigationClient(e){this.controller.setNavigationClient(e)}getConfiguration(){return this.controller.getConfiguration()}async hydrateCache(e,t){return this.controller.hydrateCache(e,t)}clearCache(e){return this.controller.clearCache(e)}}export{Er as P,Rr as _};
